{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import _slicedToArray from\"/Users/jalcantara/Desktop/SOL-dev/Tanda-DAPP/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import React from'react';import Typography from'@material-ui/core/Typography';import LabelValue from'./LabelValue';var TYPE_LABELS={systemCreate:'Create account',systemCreateWithSeed:'Create account with seed',systemTransfer:'Transfer SOL'};var DATA_LABELS={toPubkey:{label:'To',address:true},accountPubkey:{label:'Account',address:true},basePubkey:{label:'Base',address:true},seed:{label:'Seed',address:false},noncePubkey:{label:'Nonce',address:true},authorizedPubkey:{label:'Authorized',address:true},newAuthorizedPubkey:{label:'New authorized',address:true},newAccountPubkey:{label:'New account',address:true},amount:{label:'Amount',address:false},lamports:{label:'Lamports',address:false}};export default function SystemInstruction(_ref){var instruction=_ref.instruction,onOpenAddress=_ref.onOpenAddress;var type=instruction.type,data=instruction.data;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",style:{fontWeight:'bold'},gutterBottom:true,children:TYPE_LABELS[type]}),data&&Object.entries(data).map(function(_ref2){var _ref3=_slicedToArray(_ref2,2),key=_ref3[0],value=_ref3[1];var dataLabel=DATA_LABELS[key];if(!dataLabel){return null;}var label=dataLabel.label,address=dataLabel.address;return/*#__PURE__*/_jsx(LabelValue,{label:label+'',value:address?value===null||value===void 0?void 0:value.toBase58():value,link:address,onClick:function onClick(){return address&&onOpenAddress(value===null||value===void 0?void 0:value.toBase58());}},key);})]});}","map":{"version":3,"sources":["/Users/jalcantara/Desktop/SOL-dev/Tanda-DAPP/src/components/instructions/SystemInstruction.js"],"names":["React","Typography","LabelValue","TYPE_LABELS","systemCreate","systemCreateWithSeed","systemTransfer","DATA_LABELS","toPubkey","label","address","accountPubkey","basePubkey","seed","noncePubkey","authorizedPubkey","newAuthorizedPubkey","newAccountPubkey","amount","lamports","SystemInstruction","instruction","onOpenAddress","type","data","fontWeight","Object","entries","map","key","value","dataLabel","toBase58"],"mappings":"gTAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CAEA,GAAMC,CAAAA,WAAW,CAAG,CAClBC,YAAY,CAAE,gBADI,CAElBC,oBAAoB,CAAE,0BAFJ,CAGlBC,cAAc,CAAE,cAHE,CAApB,CAMA,GAAMC,CAAAA,WAAW,CAAG,CAClBC,QAAQ,CAAE,CAAEC,KAAK,CAAE,IAAT,CAAeC,OAAO,CAAE,IAAxB,CADQ,CAElBC,aAAa,CAAE,CAAEF,KAAK,CAAE,SAAT,CAAoBC,OAAO,CAAE,IAA7B,CAFG,CAGlBE,UAAU,CAAE,CAAEH,KAAK,CAAE,MAAT,CAAiBC,OAAO,CAAE,IAA1B,CAHM,CAIlBG,IAAI,CAAE,CAAEJ,KAAK,CAAE,MAAT,CAAiBC,OAAO,CAAE,KAA1B,CAJY,CAKlBI,WAAW,CAAE,CAAEL,KAAK,CAAE,OAAT,CAAkBC,OAAO,CAAE,IAA3B,CALK,CAMlBK,gBAAgB,CAAE,CAAEN,KAAK,CAAE,YAAT,CAAuBC,OAAO,CAAE,IAAhC,CANA,CAOlBM,mBAAmB,CAAE,CAAEP,KAAK,CAAE,gBAAT,CAA2BC,OAAO,CAAE,IAApC,CAPH,CAQlBO,gBAAgB,CAAE,CAAER,KAAK,CAAE,aAAT,CAAwBC,OAAO,CAAE,IAAjC,CARA,CASlBQ,MAAM,CAAE,CAAET,KAAK,CAAE,QAAT,CAAmBC,OAAO,CAAE,KAA5B,CATU,CAUlBS,QAAQ,CAAE,CAAEV,KAAK,CAAE,UAAT,CAAqBC,OAAO,CAAE,KAA9B,CAVQ,CAApB,CAaA,cAAe,SAASU,CAAAA,iBAAT,MAA2D,IAA9BC,CAAAA,WAA8B,MAA9BA,WAA8B,CAAjBC,aAAiB,MAAjBA,aAAiB,IAChEC,CAAAA,IADgE,CACjDF,WADiD,CAChEE,IADgE,CAC1DC,IAD0D,CACjDH,WADiD,CAC1DG,IAD0D,CAGxE,mBACE,wCACE,KAAC,UAAD,EACE,OAAO,CAAC,WADV,CAEE,KAAK,CAAE,CAAEC,UAAU,CAAE,MAAd,CAFT,CAGE,YAAY,KAHd,UAKGtB,WAAW,CAACoB,IAAD,CALd,EADF,CAQGC,IAAI,EACHE,MAAM,CAACC,OAAP,CAAeH,IAAf,EAAqBI,GAArB,CAAyB,eAAkB,mCAAhBC,GAAgB,UAAXC,KAAW,UACzC,GAAMC,CAAAA,SAAS,CAAGxB,WAAW,CAACsB,GAAD,CAA7B,CACA,GAAI,CAACE,SAAL,CAAgB,CACd,MAAO,KAAP,CACD,CAJwC,GAKjCtB,CAAAA,KALiC,CAKdsB,SALc,CAKjCtB,KALiC,CAK1BC,OAL0B,CAKdqB,SALc,CAK1BrB,OAL0B,CAMzC,mBACE,KAAC,UAAD,EAEE,KAAK,CAAED,KAAK,CAAG,EAFjB,CAGE,KAAK,CAAEC,OAAO,CAAGoB,KAAH,SAAGA,KAAH,iBAAGA,KAAK,CAAEE,QAAP,EAAH,CAAuBF,KAHvC,CAIE,IAAI,CAAEpB,OAJR,CAKE,OAAO,CAAE,yBAAMA,CAAAA,OAAO,EAAIY,aAAa,CAACQ,KAAD,SAACA,KAAD,iBAACA,KAAK,CAAEE,QAAP,EAAD,CAA9B,EALX,EACOH,GADP,CADF,CASD,CAfD,CATJ,GADF,CA4BD","sourcesContent":["import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport LabelValue from './LabelValue';\n\nconst TYPE_LABELS = {\n  systemCreate: 'Create account',\n  systemCreateWithSeed: 'Create account with seed',\n  systemTransfer: 'Transfer SOL',\n};\n\nconst DATA_LABELS = {\n  toPubkey: { label: 'To', address: true },\n  accountPubkey: { label: 'Account', address: true },\n  basePubkey: { label: 'Base', address: true },\n  seed: { label: 'Seed', address: false },\n  noncePubkey: { label: 'Nonce', address: true },\n  authorizedPubkey: { label: 'Authorized', address: true },\n  newAuthorizedPubkey: { label: 'New authorized', address: true },\n  newAccountPubkey: { label: 'New account', address: true },\n  amount: { label: 'Amount', address: false },\n  lamports: { label: 'Lamports', address: false },\n};\n\nexport default function SystemInstruction({ instruction, onOpenAddress }) {\n  const { type, data } = instruction;\n\n  return (\n    <>\n      <Typography\n        variant=\"subtitle1\"\n        style={{ fontWeight: 'bold' }}\n        gutterBottom\n      >\n        {TYPE_LABELS[type]}\n      </Typography>\n      {data &&\n        Object.entries(data).map(([key, value]) => {\n          const dataLabel = DATA_LABELS[key];\n          if (!dataLabel) {\n            return null;\n          }\n          const { label, address } = dataLabel;\n          return (\n            <LabelValue\n              key={key}\n              label={label + ''}\n              value={address ? value?.toBase58() : value}\n              link={address}\n              onClick={() => address && onOpenAddress(value?.toBase58())}\n            />\n          );\n        })}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}