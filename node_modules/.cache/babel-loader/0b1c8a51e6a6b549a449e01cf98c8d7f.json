{"ast":null,"code":"import _regeneratorRuntime from\"/Users/jalcantara/Desktop/SOL-dev/tanda-wallet-sol/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/jalcantara/Desktop/SOL-dev/tanda-wallet-sol/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/jalcantara/Desktop/SOL-dev/tanda-wallet-sol/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _inherits from\"/Users/jalcantara/Desktop/SOL-dev/tanda-wallet-sol/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/jalcantara/Desktop/SOL-dev/tanda-wallet-sol/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _wrapNativeSuper from\"/Users/jalcantara/Desktop/SOL-dev/tanda-wallet-sol/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper\";import{useAsyncData}from'../fetch-loop';export var SwapApiError=/*#__PURE__*/function(_Error){_inherits(SwapApiError,_Error);var _super=_createSuper(SwapApiError);function SwapApiError(msg,status){var _this;_classCallCheck(this,SwapApiError);_this=_super.call(this,msg);_this.name='SwapApiError';_this.status=status;return _this;}return SwapApiError;}(/*#__PURE__*/_wrapNativeSuper(Error));export function swapApiRequest(_x,_x2,_x3){return _swapApiRequest.apply(this,arguments);}function _swapApiRequest(){_swapApiRequest=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(method,path,body){var _ref,_ref$ignoreUserErrors,ignoreUserErrors,headers,params,resp,_args2=arguments;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_ref=_args2.length>3&&_args2[3]!==undefined?_args2[3]:{},_ref$ignoreUserErrors=_ref.ignoreUserErrors,ignoreUserErrors=_ref$ignoreUserErrors===void 0?false:_ref$ignoreUserErrors;headers={};params={headers:headers,method:method};if(method==='GET'){params.cache='no-cache';}else if(body){headers['Content-Type']='application/json';params.body=JSON.stringify(body);}_context2.next=6;return fetch(\"https://swap.sollet.io/api/\".concat(path),params);case 6:resp=_context2.sent;_context2.next=9;return handleSwapApiResponse(resp,ignoreUserErrors);case 9:return _context2.abrupt(\"return\",_context2.sent);case 10:case\"end\":return _context2.stop();}}},_callee2);}));return _swapApiRequest.apply(this,arguments);}function handleSwapApiResponse(_x4,_x5){return _handleSwapApiResponse.apply(this,arguments);}function _handleSwapApiResponse(){_handleSwapApiResponse=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(resp,ignoreUserErrors){var json;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return resp.json();case 2:json=_context3.sent;if(json.success){_context3.next=7;break;}if(!(ignoreUserErrors&&resp.status>=400&&resp.status<500)){_context3.next=6;break;}return _context3.abrupt(\"return\",null);case 6:throw new SwapApiError(json.error,resp.status);case 7:return _context3.abrupt(\"return\",json.result);case 8:case\"end\":return _context3.stop();}}},_callee3);}));return _handleSwapApiResponse.apply(this,arguments);}export function useSwapApiGet(path,options){return useAsyncData(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(path){_context.next=2;break;}return _context.abrupt(\"return\",null);case 2:_context.next=4;return swapApiRequest('GET',path,undefined,{ignoreUserErrors:true});case 4:return _context.abrupt(\"return\",_context.sent);case 5:case\"end\":return _context.stop();}}},_callee);})),['swapApiGet',path],options);}","map":{"version":3,"sources":["/Users/jalcantara/Desktop/SOL-dev/tanda-wallet-sol/src/utils/swap/api.js"],"names":["useAsyncData","SwapApiError","msg","status","name","Error","swapApiRequest","method","path","body","ignoreUserErrors","headers","params","cache","JSON","stringify","fetch","resp","handleSwapApiResponse","json","success","error","result","useSwapApiGet","options","undefined"],"mappings":"2+BAAA,OAASA,YAAT,KAA6B,eAA7B,CAEA,UAAaC,CAAAA,YAAb,oGACE,sBAAYC,GAAZ,CAAiBC,MAAjB,CAAyB,8CACvB,uBAAMD,GAAN,EACA,MAAKE,IAAL,CAAY,cAAZ,CACA,MAAKD,MAAL,CAAcA,MAAd,CAHuB,aAIxB,CALH,oDAAkCE,KAAlC,GAQA,eAAsBC,CAAAA,cAAtB,2D,mGAAO,kBACLC,MADK,CAELC,IAFK,CAGLC,IAHK,iQAI0B,EAJ1B,4BAIHC,gBAJG,CAIHA,gBAJG,gCAIgB,KAJhB,uBAMDC,OANC,CAMS,EANT,CAODC,MAPC,CAOQ,CAAED,OAAO,CAAPA,OAAF,CAAWJ,MAAM,CAANA,MAAX,CAPR,CAQL,GAAIA,MAAM,GAAK,KAAf,CAAsB,CACpBK,MAAM,CAACC,KAAP,CAAe,UAAf,CACD,CAFD,IAEO,IAAIJ,IAAJ,CAAU,CACfE,OAAO,CAAC,cAAD,CAAP,CAA0B,kBAA1B,CACAC,MAAM,CAACH,IAAP,CAAcK,IAAI,CAACC,SAAL,CAAeN,IAAf,CAAd,CACD,CAbI,uBAeYO,CAAAA,KAAK,sCAA+BR,IAA/B,EAAuCI,MAAvC,CAfjB,QAeDK,IAfC,uCAgBQC,CAAAA,qBAAqB,CAACD,IAAD,CAAOP,gBAAP,CAhB7B,kH,yDAmBQQ,CAAAA,qB,gLAAf,kBAAqCD,IAArC,CAA2CP,gBAA3C,sJACmBO,CAAAA,IAAI,CAACE,IAAL,EADnB,QACMA,IADN,mBAEOA,IAAI,CAACC,OAFZ,+BAGQV,gBAAgB,EAAIO,IAAI,CAACd,MAAL,EAAe,GAAnC,EAA0Cc,IAAI,CAACd,MAAL,CAAc,GAHhE,4DAIa,IAJb,cAMU,IAAIF,CAAAA,YAAJ,CAAiBkB,IAAI,CAACE,KAAtB,CAA6BJ,IAAI,CAACd,MAAlC,CANV,yCAQSgB,IAAI,CAACG,MARd,0D,wDAWA,MAAO,SAASC,CAAAA,aAAT,CAAuBf,IAAvB,CAA6BgB,OAA7B,CAAsC,CAC3C,MAAOxB,CAAAA,YAAY,sEACjB,sIACOQ,IADP,yDAEW,IAFX,+BAIeF,CAAAA,cAAc,CAAC,KAAD,CAAQE,IAAR,CAAciB,SAAd,CAAyB,CAClDf,gBAAgB,CAAE,IADgC,CAAzB,CAJ7B,6GADiB,GASjB,CAAC,YAAD,CAAeF,IAAf,CATiB,CAUjBgB,OAViB,CAAnB,CAYD","sourcesContent":["import { useAsyncData } from '../fetch-loop';\n\nexport class SwapApiError extends Error {\n  constructor(msg, status) {\n    super(msg);\n    this.name = 'SwapApiError';\n    this.status = status;\n  }\n}\n\nexport async function swapApiRequest(\n  method,\n  path,\n  body,\n  { ignoreUserErrors = false } = {},\n) {\n  let headers = {};\n  let params = { headers, method };\n  if (method === 'GET') {\n    params.cache = 'no-cache';\n  } else if (body) {\n    headers['Content-Type'] = 'application/json';\n    params.body = JSON.stringify(body);\n  }\n\n  let resp = await fetch(`https://swap.sollet.io/api/${path}`, params);\n  return await handleSwapApiResponse(resp, ignoreUserErrors);\n}\n\nasync function handleSwapApiResponse(resp, ignoreUserErrors) {\n  let json = await resp.json();\n  if (!json.success) {\n    if (ignoreUserErrors && resp.status >= 400 && resp.status < 500) {\n      return null;\n    }\n    throw new SwapApiError(json.error, resp.status);\n  }\n  return json.result;\n}\n\nexport function useSwapApiGet(path, options) {\n  return useAsyncData(\n    async () => {\n      if (!path) {\n        return null;\n      }\n      return await swapApiRequest('GET', path, undefined, {\n        ignoreUserErrors: true,\n      });\n    },\n    ['swapApiGet', path],\n    options,\n  );\n}\n"]},"metadata":{},"sourceType":"module"}