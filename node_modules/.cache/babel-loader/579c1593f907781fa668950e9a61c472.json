{"ast":null,"code":"import{Fragment as _Fragment}from\"react/jsx-runtime\";import _slicedToArray from\"/Users/jalcantara/Desktop/SOL-dev/Tanda-DAPP/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{Suspense,useState}from'react';import{makeStyles,List,ListItem}from'@material-ui/core';import CssBaseline from'@material-ui/core/CssBaseline';import useMediaQuery from'@material-ui/core/useMediaQuery';import{ThemeProvider,unstable_createMuiStrictModeTheme as createMuiTheme}from'@material-ui/core/styles';import blue from'@material-ui/core/colors/blue';import DialogTitle from'@material-ui/core/DialogTitle';import DialogContent from'@material-ui/core/DialogContent';import DialogActions from'@material-ui/core/DialogActions';import Button from'@material-ui/core/Button';import Typography from'@material-ui/core/Typography';import DialogForm from'./components/DialogForm';import NavigationFrame from'./components/NavigationFrame';import{ConnectionProvider}from'./utils/connection';import WalletPage from'./pages/WalletPage';import{useWallet,WalletProvider}from'./utils/wallet';import{ConnectedWalletsProvider}from'./utils/connected-wallets';import{TokenRegistryProvider}from'./utils/tokens/names';import LoadingIndicator from'./components/LoadingIndicator';import{SnackbarProvider}from'notistack';import PopupPage from'./pages/PopupPage';import LoginPage from'./pages/LoginPage';import ConnectionsPage from'./pages/ConnectionsPage';import{isExtension}from'./utils/utils';import{PageProvider,usePage}from'./utils/page';export default function App(){// TODO: add toggle for dark mode\nvar prefersDarkMode=useMediaQuery('(prefers-color-scheme: dark)');var theme=React.useMemo(function(){return createMuiTheme({palette:{type:prefersDarkMode?'dark':'light',primary:blue},// TODO consolidate popup dimensions\next:'450'});},[prefersDarkMode]);// Disallow rendering inside an iframe to prevent clickjacking.\nif(window.self!==window.top){return null;}var appElement=/*#__PURE__*/_jsx(NavigationFrame,{children:/*#__PURE__*/_jsx(Suspense,{fallback:/*#__PURE__*/_jsx(LoadingIndicator,{}),children:/*#__PURE__*/_jsx(PageContents,{})})});if(isExtension){appElement=/*#__PURE__*/_jsx(ConnectedWalletsProvider,{children:/*#__PURE__*/_jsx(PageProvider,{children:appElement})});}return/*#__PURE__*/_jsx(Suspense,{fallback:/*#__PURE__*/_jsx(LoadingIndicator,{}),children:/*#__PURE__*/_jsxs(ThemeProvider,{theme:theme,children:[/*#__PURE__*/_jsx(CssBaseline,{}),/*#__PURE__*/_jsx(ConnectionProvider,{children:/*#__PURE__*/_jsx(TokenRegistryProvider,{children:/*#__PURE__*/_jsx(SnackbarProvider,{maxSnack:5,autoHideDuration:8000,children:/*#__PURE__*/_jsx(WalletProvider,{children:appElement})})})})]})});}function PageContents(){var wallet=useWallet();var _usePage=usePage(),_usePage2=_slicedToArray(_usePage,1),page=_usePage2[0];var _useState=useState(true),_useState2=_slicedToArray(_useState,2),showWalletSuggestion=_useState2[0],setShowWalletSuggestion=_useState2[1];var suggestionKey='private-irgnore-wallet-suggestion';var ignoreSuggestion=window.localStorage.getItem(suggestionKey);if(!wallet){return/*#__PURE__*/_jsxs(_Fragment,{children:[!ignoreSuggestion&&/*#__PURE__*/_jsx(WalletSuggestionDialog,{open:showWalletSuggestion,onClose:function onClose(){return setShowWalletSuggestion(false);},onIgnore:function onIgnore(){window.localStorage.setItem(suggestionKey,true);setShowWalletSuggestion(false);}}),/*#__PURE__*/_jsx(LoginPage,{})]});}if(window.opener){return/*#__PURE__*/_jsx(PopupPage,{opener:window.opener});}if(page==='wallet'){return/*#__PURE__*/_jsx(WalletPage,{});}else if(page==='connections'){return/*#__PURE__*/_jsx(ConnectionsPage,{});}}var useStyles=makeStyles(function(){return{walletButton:{width:'100%',padding:'16px','&:hover':{cursor:'pointer'}}};});function WalletSuggestionDialog(_ref){var open=_ref.open,onClose=_ref.onClose,onIgnore=_ref.onIgnore;var classes=useStyles();return/*#__PURE__*/_jsxs(DialogForm,{open:open,onClose:onClose,fullWidth:true,children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Looking for a Wallet?\"}),/*#__PURE__*/_jsxs(DialogContent,{children:[/*#__PURE__*/_jsxs(Typography,{children:[\"Sollet is an\",' ',/*#__PURE__*/_jsxs(\"a\",{style:{color:'inherit'},href:\"https://github.com/project-serum/spl-token-wallet\",target:\"__blank\",children:[' ',\"open source\"]}),' ',\"wallet for advanced users and developers. For the best Solana experience and user support, it is recommended to use \",/*#__PURE__*/_jsx(\"b\",{children:\"Phantom\"}),' ',\"or \",/*#__PURE__*/_jsx(\"b\",{children:\"Solflare\"}),\".\"]}),/*#__PURE__*/_jsxs(List,{disablePadding:true,style:{marginTop:'16px'},children:[/*#__PURE__*/_jsx(ListItem,{button:true,disablePadding:true,style:{padding:0},children:/*#__PURE__*/_jsxs(\"div\",{className:classes.walletButton,style:{display:'flex'},onClick:function onClick(){window.location='https://phantom.app/';},children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"img\",{alt:\"\",style:{height:'39px'},src:\"https://raw.githubusercontent.com/solana-labs/wallet-adapter/master/packages/wallets/icons/phantom.svg\"})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Typography,{style:{marginLeft:'16px',display:'flex',justifyContent:'center',flexDirection:'column',height:'39px',fontWeight:'bold'},children:\"Phantom\"})})]})}),/*#__PURE__*/_jsx(ListItem,{button:true,disablePadding:true,style:{padding:0},children:/*#__PURE__*/_jsxs(\"div\",{onClick:function onClick(){window.location='https://solflare.com/';},className:classes.walletButton,style:{display:'flex'},children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"img\",{alt:\"\",style:{height:'39px'},src:\"https://raw.githubusercontent.com/solana-labs/wallet-adapter/master/packages/wallets/icons/solflare.svg\"})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Typography,{style:{marginLeft:'16px',display:'flex',justifyContent:'center',flexDirection:'column',height:'39px',fontWeight:'bold'},children:\"Solflare\"})})]})})]})]}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{type:\"submit\",color:\"primary\",onClick:onIgnore,children:\"Ignore Future Dialog\"}),/*#__PURE__*/_jsx(Button,{type:\"submit\",color:\"primary\",onClick:onClose,children:\"Ok\"})]})]});}","map":{"version":3,"sources":["/Users/jalcantara/Desktop/SOL-dev/Tanda-DAPP/src/App.js"],"names":["React","Suspense","useState","makeStyles","List","ListItem","CssBaseline","useMediaQuery","ThemeProvider","unstable_createMuiStrictModeTheme","createMuiTheme","blue","DialogTitle","DialogContent","DialogActions","Button","Typography","DialogForm","NavigationFrame","ConnectionProvider","WalletPage","useWallet","WalletProvider","ConnectedWalletsProvider","TokenRegistryProvider","LoadingIndicator","SnackbarProvider","PopupPage","LoginPage","ConnectionsPage","isExtension","PageProvider","usePage","App","prefersDarkMode","theme","useMemo","palette","type","primary","ext","window","self","top","appElement","PageContents","wallet","page","showWalletSuggestion","setShowWalletSuggestion","suggestionKey","ignoreSuggestion","localStorage","getItem","setItem","opener","useStyles","walletButton","width","padding","cursor","WalletSuggestionDialog","open","onClose","onIgnore","classes","color","marginTop","display","location","height","marginLeft","justifyContent","flexDirection","fontWeight"],"mappings":"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","sourcesContent":["import React, { Suspense, useState } from 'react';\nimport { makeStyles, List, ListItem } from '@material-ui/core';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport {\n  ThemeProvider,\n  unstable_createMuiStrictModeTheme as createMuiTheme,\n} from '@material-ui/core/styles';\nimport blue from '@material-ui/core/colors/blue';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport DialogForm from './components/DialogForm';\nimport NavigationFrame from './components/NavigationFrame';\nimport { ConnectionProvider } from './utils/connection';\nimport WalletPage from './pages/WalletPage';\nimport { useWallet, WalletProvider } from './utils/wallet';\nimport { ConnectedWalletsProvider } from './utils/connected-wallets';\nimport { TokenRegistryProvider } from './utils/tokens/names';\nimport LoadingIndicator from './components/LoadingIndicator';\nimport { SnackbarProvider } from 'notistack';\nimport PopupPage from './pages/PopupPage';\nimport LoginPage from './pages/LoginPage';\nimport ConnectionsPage from './pages/ConnectionsPage';\nimport { isExtension } from './utils/utils';\nimport { PageProvider, usePage } from './utils/page';\n\nexport default function App() {\n  // TODO: add toggle for dark mode\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? 'dark' : 'light',\n          primary: blue,\n        },\n        // TODO consolidate popup dimensions\n        ext: '450',\n      }),\n    [prefersDarkMode],\n  );\n\n  // Disallow rendering inside an iframe to prevent clickjacking.\n  if (window.self !== window.top) {\n    return null;\n  }\n\n  let appElement = (\n    <NavigationFrame>\n      <Suspense fallback={<LoadingIndicator />}>\n        <PageContents />\n      </Suspense>\n    </NavigationFrame>\n  );\n\n  if (isExtension) {\n    appElement = (\n      <ConnectedWalletsProvider>\n        <PageProvider>{appElement}</PageProvider>\n      </ConnectedWalletsProvider>\n    );\n  }\n\n  return (\n    <Suspense fallback={<LoadingIndicator />}>\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n\n        <ConnectionProvider>\n          <TokenRegistryProvider>\n            <SnackbarProvider maxSnack={5} autoHideDuration={8000}>\n              <WalletProvider>{appElement}</WalletProvider>\n            </SnackbarProvider>\n          </TokenRegistryProvider>\n        </ConnectionProvider>\n      </ThemeProvider>\n    </Suspense>\n  );\n}\n\nfunction PageContents() {\n  const wallet = useWallet();\n  const [page] = usePage();\n  const [showWalletSuggestion, setShowWalletSuggestion] = useState(true);\n  const suggestionKey = 'private-irgnore-wallet-suggestion';\n  const ignoreSuggestion = window.localStorage.getItem(suggestionKey);\n  if (!wallet) {\n    return (\n      <>\n        {!ignoreSuggestion && (\n          <WalletSuggestionDialog\n            open={showWalletSuggestion}\n            onClose={() => setShowWalletSuggestion(false)}\n            onIgnore={() => {\n              window.localStorage.setItem(suggestionKey, true);\n              setShowWalletSuggestion(false);\n            }}\n          />\n        )}\n        <LoginPage />\n      </>\n    );\n  }\n  if (window.opener) {\n    return <PopupPage opener={window.opener} />;\n  }\n  if (page === 'wallet') {\n    return <WalletPage />;\n  } else if (page === 'connections') {\n    return <ConnectionsPage />;\n  }\n}\n\nconst useStyles = makeStyles(() => ({\n  walletButton: {\n    width: '100%',\n    padding: '16px',\n    '&:hover': {\n      cursor: 'pointer',\n    },\n  },\n}));\n\nfunction WalletSuggestionDialog({ open, onClose, onIgnore }) {\n  const classes = useStyles();\n  return (\n    <DialogForm open={open} onClose={onClose} fullWidth>\n      <DialogTitle>Looking for a Wallet?</DialogTitle>\n      <DialogContent>\n        <Typography>\n          Sollet is an{' '}\n          <a\n            style={{ color: 'inherit' }}\n            href=\"https://github.com/project-serum/spl-token-wallet\"\n            target=\"__blank\"\n          >\n            {' '}\n            open source\n          </a>{' '}\n          wallet for advanced users and developers. For the best Solana\n          experience and user support, it is recommended to use <b>\n            Phantom\n          </b>{' '}\n          or <b>Solflare</b>.\n        </Typography>\n        <List disablePadding style={{ marginTop: '16px' }}>\n          <ListItem button disablePadding style={{ padding: 0 }}>\n            <div\n              className={classes.walletButton}\n              style={{ display: 'flex' }}\n              onClick={() => {\n                window.location = 'https://phantom.app/';\n              }}\n            >\n              <div>\n                <img\n                  alt=\"\"\n                  style={{ height: '39px' }}\n                  src=\"https://raw.githubusercontent.com/solana-labs/wallet-adapter/master/packages/wallets/icons/phantom.svg\"\n                />\n              </div>\n              <div>\n                <Typography\n                  style={{\n                    marginLeft: '16px',\n                    display: 'flex',\n                    justifyContent: 'center',\n                    flexDirection: 'column',\n                    height: '39px',\n                    fontWeight: 'bold',\n                  }}\n                >\n                  Phantom\n                </Typography>\n              </div>\n            </div>\n          </ListItem>\n          <ListItem button disablePadding style={{ padding: 0 }}>\n            <div\n              onClick={() => {\n                window.location = 'https://solflare.com/';\n              }}\n              className={classes.walletButton}\n              style={{ display: 'flex' }}\n            >\n              <div>\n                <img\n                  alt=\"\"\n                  style={{ height: '39px' }}\n                  src=\"https://raw.githubusercontent.com/solana-labs/wallet-adapter/master/packages/wallets/icons/solflare.svg\"\n                />\n              </div>\n              <div>\n                <Typography\n                  style={{\n                    marginLeft: '16px',\n                    display: 'flex',\n                    justifyContent: 'center',\n                    flexDirection: 'column',\n                    height: '39px',\n                    fontWeight: 'bold',\n                  }}\n                >\n                  Solflare\n                </Typography>\n              </div>\n            </div>\n          </ListItem>\n        </List>\n      </DialogContent>\n      <DialogActions>\n        <Button type=\"submit\" color=\"primary\" onClick={onIgnore}>\n          Ignore Future Dialog\n        </Button>\n        <Button type=\"submit\" color=\"primary\" onClick={onClose}>\n          Ok\n        </Button>\n      </DialogActions>\n    </DialogForm>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}