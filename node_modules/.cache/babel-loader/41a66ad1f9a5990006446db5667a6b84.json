{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import _slicedToArray from\"/Users/jalcantara/Desktop/SOL-dev/tanda-wallet-sol/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsx as _jsx}from\"react/jsx-runtime\";import React from'react';import Typography from'@material-ui/core/Typography';import LabelValue from'./LabelValue';var TYPE_LABELS={stakeAuthorizeWithSeed:'Stake authorize with seed',stakeAuthorize:'Stake authorize',stakeDeactivate:'Deactivate stake',stakeDelegate:'Delegate stake',stakeInitialize:'Initialize stake',stakeSplit:'Split stake',stakeWithdraw:'Withdraw stake'};var DATA_LABELS={stakePubkey:{label:'Stake',address:true},authorizedStaker:{label:'Authorized staker',address:true},authorizedWithdrawer:{label:'Authorized withdrawer',address:true},lockup:{label:'Lockup',address:false},authorizedPubkey:{label:'Authorized',address:true},votePubkey:{label:'Vote',address:true},authorizedSeed:{label:'Seed',address:false},noncePubkey:{label:'Nonce',address:true},authorityBase:{label:'Authority base',address:true},authoritySeed:{label:'Authority seed',address:false},authorityOwner:{label:'Authority owner',address:true},newAuthorizedPubkey:{label:'New authorized',address:true},stakeAuthorizationType:{label:'Stake authorization type',address:false,transform:function transform(){return JSON.stringify;}},custodianPubkey:{label:'Custodian',address:true},splitStakePubkey:{label:'Split to',address:true},lamports:{label:'Lamports',address:false}};export default function StakeInstruction(_ref){var instruction=_ref.instruction,onOpenAddress=_ref.onOpenAddress;var type=instruction.type,data=instruction.data;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",style:{fontWeight:'bold'},gutterBottom:true,children:TYPE_LABELS[type]}),data&&Object.entries(data).map(function(_ref2){var _ref3=_slicedToArray(_ref2,2),key=_ref3[0],value=_ref3[1];var dataLabel=DATA_LABELS[key];if(!dataLabel){return null;}var label=dataLabel.label,address=dataLabel.address,transform=dataLabel.transform;return/*#__PURE__*/_jsx(LabelValue,{label:label+'',value:address?value===null||value===void 0?void 0:value.toBase58():transform?transform(value):value,link:address,onClick:function onClick(){return address&&onOpenAddress(value===null||value===void 0?void 0:value.toBase58());}},key);})]});}","map":{"version":3,"sources":["/Users/jalcantara/Desktop/SOL-dev/tanda-wallet-sol/src/components/instructions/StakeInstruction.js"],"names":["React","Typography","LabelValue","TYPE_LABELS","stakeAuthorizeWithSeed","stakeAuthorize","stakeDeactivate","stakeDelegate","stakeInitialize","stakeSplit","stakeWithdraw","DATA_LABELS","stakePubkey","label","address","authorizedStaker","authorizedWithdrawer","lockup","authorizedPubkey","votePubkey","authorizedSeed","noncePubkey","authorityBase","authoritySeed","authorityOwner","newAuthorizedPubkey","stakeAuthorizationType","transform","JSON","stringify","custodianPubkey","splitStakePubkey","lamports","StakeInstruction","instruction","onOpenAddress","type","data","fontWeight","Object","entries","map","key","value","dataLabel","toBase58"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport LabelValue from './LabelValue';\n\nconst TYPE_LABELS = {\n  stakeAuthorizeWithSeed: 'Stake authorize with seed',\n  stakeAuthorize: 'Stake authorize',\n  stakeDeactivate: 'Deactivate stake',\n  stakeDelegate: 'Delegate stake',\n  stakeInitialize: 'Initialize stake',\n  stakeSplit: 'Split stake',\n  stakeWithdraw: 'Withdraw stake',\n};\n\nconst DATA_LABELS = {\n  stakePubkey: { label: 'Stake', address: true },\n  authorizedStaker: { label: 'Authorized staker', address: true },\n  authorizedWithdrawer: { label: 'Authorized withdrawer', address: true },\n  lockup: { label: 'Lockup', address: false },\n  authorizedPubkey: { label: 'Authorized', address: true },\n  votePubkey: { label: 'Vote', address: true },\n  authorizedSeed: { label: 'Seed', address: false },\n  noncePubkey: { label: 'Nonce', address: true },\n  authorityBase: { label: 'Authority base', address: true },\n  authoritySeed: { label: 'Authority seed', address: false },\n  authorityOwner: { label: 'Authority owner', address: true },\n  newAuthorizedPubkey: { label: 'New authorized', address: true },\n  stakeAuthorizationType: { label: 'Stake authorization type', address: false, transform: () => JSON.stringify },\n  custodianPubkey: { label: 'Custodian', address: true },\n  splitStakePubkey: { label: 'Split to', address: true },\n  lamports: { label: 'Lamports', address: false },\n};\n\nexport default function StakeInstruction({ instruction, onOpenAddress }) {\n  const { type, data } = instruction;\n\n  return (\n    <>\n      <Typography\n        variant=\"subtitle1\"\n        style={{ fontWeight: 'bold' }}\n        gutterBottom\n      >\n        {TYPE_LABELS[type]}\n      </Typography>\n      {data &&\n        Object.entries(data).map(([key, value]) => {\n          const dataLabel = DATA_LABELS[key];\n          if (!dataLabel) {\n            return null;\n          }\n          const { label, address, transform } = dataLabel;\n          return (\n            <LabelValue\n              key={key}\n              label={label + ''}\n              value={address ? value?.toBase58() : (transform ? transform(value) : value)}\n              link={address}\n              onClick={() => address && onOpenAddress(value?.toBase58())}\n            />\n          );\n        })}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}