{"ast":null,"code":"import _regeneratorRuntime from\"/Users/jalcantara/Desktop/SOL-dev/Tanda-DAPP/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/jalcantara/Desktop/SOL-dev/Tanda-DAPP/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _toConsumableArray from\"/Users/jalcantara/Desktop/SOL-dev/Tanda-DAPP/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/jalcantara/Desktop/SOL-dev/Tanda-DAPP/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useMemo,useCallback,useEffect}from'react';import List from'@material-ui/core/List';import ListItem from'@material-ui/core/ListItem';import ListItemText from'@material-ui/core/ListItemText';import Paper from'@material-ui/core/Paper';import{refreshWalletPublicKeys,useBalanceInfo,useWallet,useWalletPublicKeys,useWalletSelector}from'../utils/wallet';import{findAssociatedTokenAddress}from'../utils/tokens';import LoadingIndicator from'./LoadingIndicator';import Collapse from'@material-ui/core/Collapse';import{Typography}from'@material-ui/core';import TokenInfoDialog from'./TokenInfoDialog';import FtxPayDialog from'./FtxPay/FtxPayDialog';import Link from'@material-ui/core/Link';import ExpandLess from'@material-ui/icons/ExpandLess';import ExpandMore from'@material-ui/icons/ExpandMore';import{makeStyles}from'@material-ui/core/styles';import{abbreviateAddress,useIsExtensionWidth}from'../utils/utils';import Button from'@material-ui/core/Button';import SendIcon from'@material-ui/icons/Send';import ReceiveIcon from'@material-ui/icons/WorkOutline';import AppBar from'@material-ui/core/AppBar';import Toolbar from'@material-ui/core/Toolbar';import AddIcon from'@material-ui/icons/Add';import RefreshIcon from'@material-ui/icons/Refresh';import IconButton from'@material-ui/core/IconButton';import InfoIcon from'@material-ui/icons/InfoOutlined';import Tooltip from'@material-ui/core/Tooltip';import EditIcon from'@material-ui/icons/Edit';import MergeType from'@material-ui/icons/MergeType';import SortIcon from'@material-ui/icons/Sort';import DeleteIcon from'@material-ui/icons/Delete';import AddTokenDialog from'./AddTokenDialog';import ExportAccountDialog from'./ExportAccountDialog';import ftxPayIcon from'./FtxPay/icon.png';import SendDialog from'./SendDialog';import DepositDialog from'./DepositDialog';import{useIsProdNetwork,refreshAccountInfo,useSolanaExplorerUrlSuffix}from'../utils/connection';import{useRegion}from'../utils/region';import{CopyToClipboard}from'react-copy-to-clipboard';import{serumMarkets,priceStore}from'../utils/markets';import{swapApiRequest}from'../utils/swap/api';import{showSwapAddress}from'../utils/config';import{useAsyncData}from'../utils/fetch-loop';import{showTokenInfoDialog}from'../utils/config';import{useConnection}from'../utils/connection';import{shortenAddress}from'../utils/utils';import CloseTokenAccountDialog from'./CloseTokenAccountButton';import ListItemIcon from'@material-ui/core/ListItemIcon';import TokenIcon from'./TokenIcon';import EditAccountNameDialog from'./EditAccountNameDialog';import MergeAccountsDialog from'./MergeAccountsDialog';import SwapButton from'./SwapButton';import DnsIcon from'@material-ui/icons/Dns';import DomainsList from'./DomainsList';var balanceFormat=new Intl.NumberFormat(undefined,{minimumFractionDigits:4,maximumFractionDigits:4,useGrouping:true});var SortAccounts={None:0,Ascending:1,Descending:2};// Aggregated $USD values of all child BalanceListItems child components.\n//\n// Values:\n// * undefined => loading.\n// * null => no market exists.\n// * float => done.\n//\n// For a given set of publicKeys, we know all the USD values have been loaded when\n// all of their values in this object are not `undefined`.\nvar usdValues={};// Calculating associated token addresses is an asynchronous operation, so we cache\n// the values so that we can quickly render components using them. This prevents\n// flickering for the associated token fingerprint icon.\nvar associatedTokensCache={};var numberFormat=new Intl.NumberFormat('en-US',{style:'currency',currency:'USD'});function fairsIsLoaded(publicKeys){return publicKeys.filter(function(pk){return usdValues[pk.toString()]!==undefined;}).length===publicKeys.length;}export default function BalancesList(){var wallet=useWallet();var _useWalletPublicKeys=useWalletPublicKeys(),_useWalletPublicKeys2=_slicedToArray(_useWalletPublicKeys,2),publicKeys=_useWalletPublicKeys2[0],loaded=_useWalletPublicKeys2[1];var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showAddTokenDialog=_useState2[0],setShowAddTokenDialog=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),showEditAccountNameDialog=_useState4[0],setShowEditAccountNameDialog=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),showMergeAccounts=_useState6[0],setShowMergeAccounts=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),showFtxPayDialog=_useState8[0],setShowFtxPayDialog=_useState8[1];var _useState9=useState(SortAccounts.None),_useState10=_slicedToArray(_useState9,2),sortAccounts=_useState10[0],setSortAccounts=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),showDomains=_useState12[0],setShowDomains=_useState12[1];var _useWalletSelector=useWalletSelector(),accounts=_useWalletSelector.accounts,setAccountName=_useWalletSelector.setAccountName;var _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),isCopied=_useState14[0],setIsCopied=_useState14[1];var isExtensionWidth=useIsExtensionWidth();// Dummy var to force rerenders on demand.\nvar _useState15=useState(false),_useState16=_slicedToArray(_useState15,2),setForceUpdate=_useState16[1];var region=useRegion();var selectedAccount=accounts.find(function(a){return a.isSelected;});var allTokensLoaded=loaded&&fairsIsLoaded(publicKeys);var sortedPublicKeys=publicKeys;if(allTokensLoaded&&sortAccounts!==SortAccounts.None){sortedPublicKeys=_toConsumableArray(publicKeys);sortedPublicKeys.sort(function(a,b){var aVal=usdValues[a.toString()];var bVal=usdValues[b.toString()];a=aVal===undefined||aVal===null?-1:aVal;b=bVal===undefined||bVal===null?-1:bVal;if(sortAccounts===SortAccounts.Descending){if(a<b){return-1;}else if(a>b){return 1;}else{return 0;}}else{if(b<a){return-1;}else if(b>a){return 1;}else{return 0;}}});}var totalUsdValue=publicKeys.filter(function(pk){return usdValues[pk.toString()];}).map(function(pk){return usdValues[pk.toString()];}).reduce(function(a,b){return a+b;},0.0);// Memoized callback and component for the `BalanceListItems`.\n//\n// The `BalancesList` fetches data, e.g., fairs for tokens using React hooks\n// in each of the child `BalanceListItem` components. However, we want the\n// parent component, to aggregate all of this data together, for example,\n// to show the cumulative USD amount in the wallet.\n//\n// To achieve this, we need to pass a callback from the parent to the chlid,\n// so that the parent can collect the results of all the async network requests.\n// However, this can cause a render loop, since invoking the callback can cause\n// the parent to rerender, which causese the child to rerender, which causes\n// the callback to be invoked.\n//\n// To solve this, we memoize all the `BalanceListItem` children components.\nvar setUsdValuesCallback=useCallback(function(publicKey,usdValue){if(usdValues[publicKey.toString()]!==usdValue){usdValues[publicKey.toString()]=usdValue;if(fairsIsLoaded(publicKeys)){setForceUpdate(function(forceUpdate){return!forceUpdate;});}}},[publicKeys]);var balanceListItemsMemo=useMemo(function(){return sortedPublicKeys.map(function(pk){return/*#__PURE__*/React.memo(function(props){return/*#__PURE__*/_jsx(BalanceListItem,{publicKey:pk,setUsdValue:setUsdValuesCallback},pk.toString());});});},[sortedPublicKeys,setUsdValuesCallback]);var iconSize=isExtensionWidth?'small':'medium';return/*#__PURE__*/_jsxs(Paper,{children:[/*#__PURE__*/_jsx(AppBar,{position:\"static\",color:\"default\",elevation:1,children:/*#__PURE__*/_jsxs(Toolbar,{children:[/*#__PURE__*/_jsx(CopyToClipboard,{text:selectedAccount&&selectedAccount.address.toBase58(),onCopy:function onCopy(){setIsCopied(true);setTimeout(function(){setIsCopied(false);},1000);},children:/*#__PURE__*/_jsx(Tooltip,{title:/*#__PURE__*/_jsx(Typography,{children:isCopied?'Copied':'Copy to clipboard'}),style:{fontSize:'10rem'},children:/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",style:{flexGrow:1,fontSize:isExtensionWidth&&'1rem',cursor:'pointer'},hover:true,component:\"h2\",children:[selectedAccount&&selectedAccount.name,isExtensionWidth?'':\" (\".concat(selectedAccount&&shortenAddress(selectedAccount.address.toBase58()),\")\"),' ',allTokensLoaded&&/*#__PURE__*/_jsxs(_Fragment,{children:[\"(\",numberFormat.format(totalUsdValue.toFixed(2)),\")\"]})]})})}),selectedAccount&&selectedAccount.name!=='Main account'&&selectedAccount.name!=='Hardware wallet'&&/*#__PURE__*/_jsx(Tooltip,{title:\"Edit Account Name\",arrow:true,children:/*#__PURE__*/_jsx(IconButton,{size:iconSize,onClick:function onClick(){return setShowEditAccountNameDialog(true);},children:/*#__PURE__*/_jsx(EditIcon,{})})}),/*#__PURE__*/_jsx(Tooltip,{title:\"Deposit via FTX Pay\",arrow:true,children:/*#__PURE__*/_jsx(IconButton,{size:iconSize,onClick:function onClick(){return setShowFtxPayDialog(true);},children:/*#__PURE__*/_jsx(\"img\",{title:'FTX Pay',alt:'FTX Pay',style:{width:20,height:20},src:ftxPayIcon})})}),/*#__PURE__*/_jsx(Tooltip,{title:\"See your domains\",arrow:true,children:/*#__PURE__*/_jsx(IconButton,{size:iconSize,onClick:function onClick(){return setShowDomains(true);},children:/*#__PURE__*/_jsx(DnsIcon,{})})}),/*#__PURE__*/_jsx(DomainsList,{open:showDomains,setOpen:setShowDomains}),region.result&&!region.result.isRestricted&&/*#__PURE__*/_jsx(SwapButton,{size:iconSize}),/*#__PURE__*/_jsx(Tooltip,{title:\"Migrate Tokens\",arrow:true,children:/*#__PURE__*/_jsx(IconButton,{size:iconSize,onClick:function onClick(){return setShowMergeAccounts(true);},children:/*#__PURE__*/_jsx(MergeType,{})})}),/*#__PURE__*/_jsx(Tooltip,{title:\"Add Token\",arrow:true,children:/*#__PURE__*/_jsx(IconButton,{size:iconSize,onClick:function onClick(){return setShowAddTokenDialog(true);},children:/*#__PURE__*/_jsx(AddIcon,{})})}),/*#__PURE__*/_jsx(Tooltip,{title:\"Sort Tokens\",arrow:true,children:/*#__PURE__*/_jsx(IconButton,{size:iconSize,onClick:function onClick(){switch(sortAccounts){case SortAccounts.None:setSortAccounts(SortAccounts.Ascending);return;case SortAccounts.Ascending:setSortAccounts(SortAccounts.Descending);return;case SortAccounts.Descending:setSortAccounts(SortAccounts.None);return;default:console.error('invalid sort type',sortAccounts);}},children:/*#__PURE__*/_jsx(SortIcon,{})})}),/*#__PURE__*/_jsx(Tooltip,{title:\"Refresh\",arrow:true,children:/*#__PURE__*/_jsx(IconButton,{size:iconSize,onClick:function onClick(){refreshWalletPublicKeys(wallet);publicKeys.map(function(publicKey){return refreshAccountInfo(wallet.connection,publicKey,true);});},style:{marginRight:-12},children:/*#__PURE__*/_jsx(RefreshIcon,{})})})]})}),/*#__PURE__*/_jsxs(List,{disablePadding:true,children:[balanceListItemsMemo.map(function(Memoized){return/*#__PURE__*/_jsx(Memoized,{});}),loaded?null:/*#__PURE__*/_jsx(LoadingIndicator,{})]}),/*#__PURE__*/_jsx(AddTokenDialog,{open:showAddTokenDialog,onClose:function onClose(){return setShowAddTokenDialog(false);}}),/*#__PURE__*/_jsx(FtxPayDialog,{open:showFtxPayDialog,publicKeys:publicKeys,onClose:function onClose(){return setShowFtxPayDialog(false);}}),/*#__PURE__*/_jsx(EditAccountNameDialog,{open:showEditAccountNameDialog,onClose:function onClose(){return setShowEditAccountNameDialog(false);},oldName:selectedAccount?selectedAccount.name:'',onEdit:function onEdit(name){setAccountName(selectedAccount.selector,name);setShowEditAccountNameDialog(false);}}),/*#__PURE__*/_jsx(MergeAccountsDialog,{open:showMergeAccounts,onClose:function onClose(){return setShowMergeAccounts(false);}})]});}var useStyles=makeStyles(function(theme){return{address:{textOverflow:'ellipsis',overflowX:'hidden'},itemDetails:{marginLeft:theme.spacing(3),marginRight:theme.spacing(3),marginBottom:theme.spacing(2)},buttonContainer:{display:'flex',justifyContent:'space-evenly',marginTop:theme.spacing(1),marginBottom:theme.spacing(1)},viewDetails:{'&:hover':{cursor:'pointer'}}};});export function BalanceListItem(_ref){var _tokenName;var publicKey=_ref.publicKey,expandable=_ref.expandable,setUsdValue=_ref.setUsdValue;var wallet=useWallet();var balanceInfo=useBalanceInfo(publicKey);var classes=useStyles();var connection=useConnection();var _useState17=useState(false),_useState18=_slicedToArray(_useState17,2),open=_useState18[0],setOpen=_useState18[1];var isExtensionWidth=useIsExtensionWidth();var _useState19=useState(false),_useState20=_slicedToArray(_useState19,2),setForceUpdate=_useState20[1];// Valid states:\n//   * undefined => loading.\n//   * null => not found.\n//   * else => price is loaded.\nvar _useState21=useState(undefined),_useState22=_slicedToArray(_useState21,2),price=_useState22[0],setPrice=_useState22[1];useEffect(function(){if(balanceInfo){if(balanceInfo.tokenSymbol){var coin=balanceInfo.tokenSymbol.toUpperCase();// Don't fetch USD stable coins. Mark to 1 USD.\nif(coin==='USDT'||coin==='USDC'){setPrice(1);}// A Serum market exists. Fetch the price.\nelse if(serumMarkets[coin]){var m=serumMarkets[coin];priceStore.getPrice(connection,m.name).then(function(price){setPrice(price);}).catch(function(err){console.error(err);setPrice(null);});}// No Serum market exists.\nelse{setPrice(null);}}// No token symbol so don't fetch market data.\nelse{setPrice(null);}}},[price,balanceInfo,connection]);expandable=expandable===undefined?true:expandable;if(!balanceInfo){return/*#__PURE__*/_jsx(LoadingIndicator,{delay:0});}var amount=balanceInfo.amount,decimals=balanceInfo.decimals,mint=balanceInfo.mint,tokenName=balanceInfo.tokenName,tokenSymbol=balanceInfo.tokenSymbol,tokenLogoUri=balanceInfo.tokenLogoUri;tokenName=(_tokenName=tokenName)!==null&&_tokenName!==void 0?_tokenName:abbreviateAddress(mint);var displayName;if(isExtensionWidth){displayName=tokenSymbol!==null&&tokenSymbol!==void 0?tokenSymbol:tokenName;}else{displayName=tokenName+(tokenSymbol?\" (\".concat(tokenSymbol,\")\"):'');}// Fetch and cache the associated token address.\nif(wallet&&wallet.publicKey&&mint){if(associatedTokensCache[wallet.publicKey.toString()]===undefined||associatedTokensCache[wallet.publicKey.toString()][mint.toString()]===undefined){findAssociatedTokenAddress(wallet.publicKey,mint).then(function(assocTok){var walletAccounts=Object.assign({},associatedTokensCache[wallet.publicKey.toString()]);walletAccounts[mint.toString()]=assocTok;associatedTokensCache[wallet.publicKey.toString()]=walletAccounts;if(assocTok.equals(publicKey)){// Force a rerender now that we've cached the value.\nsetForceUpdate(function(forceUpdate){return!forceUpdate;});}});}}// undefined => not loaded.\nvar isAssociatedToken=mint?undefined:false;if(wallet&&wallet.publicKey&&mint&&associatedTokensCache[wallet.publicKey.toString()]){var acc=associatedTokensCache[wallet.publicKey.toString()][mint.toString()];if(acc){if(acc.equals(publicKey)){isAssociatedToken=true;}else{isAssociatedToken=false;}}}var subtitle=isExtensionWidth||!publicKey.equals(balanceInfo.owner)?undefined:/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',height:'20px',overflow:'hidden'},children:/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',justifyContent:'center',flexDirection:'column'},children:publicKey.toBase58()})});var usdValue=price===undefined// Not yet loaded.\n?undefined:price===null// Loaded and empty.\n?null:(amount/Math.pow(10,decimals)*price).toFixed(2);// Loaded.\nif(setUsdValue&&usdValue!==undefined){setUsdValue(publicKey,usdValue===null?null:parseFloat(usdValue));}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(ListItem,{button:true,onClick:function onClick(){return expandable&&setOpen(function(open){return!open;});},children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(TokenIcon,{mint:mint,tokenName:tokenName,url:tokenLogoUri,size:28})}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flex:1},children:[/*#__PURE__*/_jsx(ListItemText,{primary:/*#__PURE__*/_jsxs(_Fragment,{children:[balanceFormat.format(amount/Math.pow(10,decimals)),' ',displayName]}),secondary:subtitle,secondaryTypographyProps:{className:classes.address}}),/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',justifyContent:'center',flexDirection:'column'},children:price&&/*#__PURE__*/_jsx(Typography,{color:\"textSecondary\",children:numberFormat.format(usdValue)})})]}),expandable?open?/*#__PURE__*/_jsx(ExpandLess,{}):/*#__PURE__*/_jsx(ExpandMore,{}):/*#__PURE__*/_jsx(_Fragment,{})]}),expandable&&/*#__PURE__*/_jsx(Collapse,{in:open,timeout:\"auto\",unmountOnExit:true,children:/*#__PURE__*/_jsx(BalanceListItemDetails,{isAssociatedToken:isAssociatedToken,publicKey:publicKey,serumMarkets:serumMarkets,balanceInfo:balanceInfo})})]});}function BalanceListItemDetails(_ref2){var _balanceInfo$mint2;var publicKey=_ref2.publicKey,serumMarkets=_ref2.serumMarkets,balanceInfo=_ref2.balanceInfo,isAssociatedToken=_ref2.isAssociatedToken;var urlSuffix=useSolanaExplorerUrlSuffix();var classes=useStyles();var _useState23=useState(false),_useState24=_slicedToArray(_useState23,2),sendDialogOpen=_useState24[0],setSendDialogOpen=_useState24[1];var _useState25=useState(false),_useState26=_slicedToArray(_useState25,2),depositDialogOpen=_useState26[0],setDepositDialogOpen=_useState26[1];var _useState27=useState(false),_useState28=_slicedToArray(_useState27,2),tokenInfoDialogOpen=_useState28[0],setTokenInfoDialogOpen=_useState28[1];var _useState29=useState(false),_useState30=_slicedToArray(_useState29,2),exportAccDialogOpen=_useState30[0],setExportAccDialogOpen=_useState30[1];var _useState31=useState(false),_useState32=_slicedToArray(_useState31,2),closeTokenAccountDialogOpen=_useState32[0],setCloseTokenAccountDialogOpen=_useState32[1];var _useState33=useState(false),_useState34=_slicedToArray(_useState33,2),showDetails=_useState34[0],setShowDetails=_useState34[1];var wallet=useWallet();var isProdNetwork=useIsProdNetwork();var _useAsyncData=useAsyncData(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _balanceInfo$mint;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(!showSwapAddress||!isProdNetwork)){_context.next=2;break;}return _context.abrupt(\"return\",null);case 2:_context.next=4;return swapApiRequest('POST','swap_to',{blockchain:'sol',coin:(_balanceInfo$mint=balanceInfo.mint)===null||_balanceInfo$mint===void 0?void 0:_balanceInfo$mint.toBase58(),address:publicKey.toBase58()},{ignoreUserErrors:true});case 4:return _context.abrupt(\"return\",_context.sent);case 5:case\"end\":return _context.stop();}}},_callee);})),['swapInfo',isProdNetwork,(_balanceInfo$mint2=balanceInfo.mint)===null||_balanceInfo$mint2===void 0?void 0:_balanceInfo$mint2.toBase58(),publicKey.toBase58()]),_useAsyncData2=_slicedToArray(_useAsyncData,1),swapInfo=_useAsyncData2[0];var isExtensionWidth=useIsExtensionWidth();if(!balanceInfo){return/*#__PURE__*/_jsx(LoadingIndicator,{delay:0});}var mint=balanceInfo.mint,tokenName=balanceInfo.tokenName,tokenSymbol=balanceInfo.tokenSymbol,owner=balanceInfo.owner,amount=balanceInfo.amount;// Only show the export UI for the native SOL coin.\nvar exportNeedsDisplay=mint===null&&tokenName==='SOL'&&tokenSymbol==='SOL';var market=tokenSymbol?serumMarkets[tokenSymbol.toUpperCase()]?serumMarkets[tokenSymbol.toUpperCase()].publicKey:undefined:undefined;var isSolAddress=publicKey.equals(owner);var additionalInfo=isExtensionWidth?undefined:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[\"Token Name: \",tokenName!==null&&tokenName!==void 0?tokenName:'Unknown']}),/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",children:[\"Token Symbol: \",tokenSymbol!==null&&tokenSymbol!==void 0?tokenSymbol:'Unknown']}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between'},children:[/*#__PURE__*/_jsxs(\"div\",{children:[!isSolAddress&&isAssociatedToken===false&&/*#__PURE__*/_jsx(\"div\",{style:{display:'flex'},children:\"This is an auxiliary token account.\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:/*#__PURE__*/_jsx(Link,{href:\"https://solscan.io/account/\".concat(publicKey.toBase58())+urlSuffix,target:\"_blank\",rel:\"noopener\",children:\"View on Solscan\"})}),market&&/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:/*#__PURE__*/_jsx(Link,{href:\"https://dex.projectserum.com/#/market/\".concat(market),target:\"_blank\",rel:\"noopener\",children:\"View on Serum\"})}),swapInfo&&swapInfo.coin.erc20Contract&&/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:/*#__PURE__*/_jsx(Link,{href:\"https://etherscan.io/token/\".concat(swapInfo.coin.erc20Contract)+urlSuffix,target:\"_blank\",rel:\"noopener\",children:\"View on Ethereum\"})}),!isSolAddress&&/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:/*#__PURE__*/_jsx(Link,{className:classes.viewDetails,onClick:function onClick(){return setShowDetails(!showDetails);},children:\"View Details\"})}),showDetails&&(mint?/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",className:classes.address,children:[\"Mint Address: \",mint.toBase58()]}):null),!isSolAddress&&showDetails&&/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",className:classes.address,children:[isAssociatedToken?'Associated':'',\" Token Metadata:\",' ',publicKey.toBase58()]})]}),exportNeedsDisplay&&wallet.allowsExport&&/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:/*#__PURE__*/_jsx(Link,{href:'#',onClick:function onClick(e){return setExportAccDialogOpen(true);},children:\"Export\"})})})]})]});return/*#__PURE__*/_jsxs(_Fragment,{children:[wallet.allowsExport&&/*#__PURE__*/_jsx(ExportAccountDialog,{onClose:function onClose(){return setExportAccDialogOpen(false);},open:exportAccDialogOpen}),/*#__PURE__*/_jsxs(\"div\",{className:classes.itemDetails,children:[/*#__PURE__*/_jsxs(\"div\",{className:classes.buttonContainer,children:[!publicKey.equals(owner)&&showTokenInfoDialog?/*#__PURE__*/_jsx(Button,{variant:\"outlined\",color:\"default\",startIcon:/*#__PURE__*/_jsx(InfoIcon,{}),onClick:function onClick(){return setTokenInfoDialogOpen(true);},children:\"Token Info\"}):null,/*#__PURE__*/_jsx(Button,{variant:\"outlined\",color:\"primary\",startIcon:/*#__PURE__*/_jsx(ReceiveIcon,{}),onClick:function onClick(){return setDepositDialogOpen(true);},children:\"Receive\"}),/*#__PURE__*/_jsx(Button,{variant:\"outlined\",color:\"primary\",startIcon:/*#__PURE__*/_jsx(SendIcon,{}),onClick:function onClick(){return setSendDialogOpen(true);},children:\"Send\"}),localStorage.getItem('warning-close-account')&&mint&&amount===0?/*#__PURE__*/_jsx(Button,{variant:\"outlined\",color:\"secondary\",size:\"small\",startIcon:/*#__PURE__*/_jsx(DeleteIcon,{}),onClick:function onClick(){return setCloseTokenAccountDialogOpen(true);},children:\"Delete\"}):null]}),additionalInfo]}),/*#__PURE__*/_jsx(SendDialog,{open:sendDialogOpen,onClose:function onClose(){return setSendDialogOpen(false);},balanceInfo:balanceInfo,publicKey:publicKey}),/*#__PURE__*/_jsx(DepositDialog,{open:depositDialogOpen,onClose:function onClose(){return setDepositDialogOpen(false);},balanceInfo:balanceInfo,publicKey:publicKey,swapInfo:swapInfo,isAssociatedToken:isAssociatedToken}),/*#__PURE__*/_jsx(TokenInfoDialog,{open:tokenInfoDialogOpen,onClose:function onClose(){return setTokenInfoDialogOpen(false);},balanceInfo:balanceInfo,publicKey:publicKey}),/*#__PURE__*/_jsx(CloseTokenAccountDialog,{open:closeTokenAccountDialogOpen,onClose:function onClose(){return setCloseTokenAccountDialogOpen(false);},balanceInfo:balanceInfo,publicKey:publicKey})]});}","map":{"version":3,"sources":["/Users/jalcantara/Desktop/SOL-dev/Tanda-DAPP/src/components/BalancesList.js"],"names":["React","useState","useMemo","useCallback","useEffect","List","ListItem","ListItemText","Paper","refreshWalletPublicKeys","useBalanceInfo","useWallet","useWalletPublicKeys","useWalletSelector","findAssociatedTokenAddress","LoadingIndicator","Collapse","Typography","TokenInfoDialog","FtxPayDialog","Link","ExpandLess","ExpandMore","makeStyles","abbreviateAddress","useIsExtensionWidth","Button","SendIcon","ReceiveIcon","AppBar","Toolbar","AddIcon","RefreshIcon","IconButton","InfoIcon","Tooltip","EditIcon","MergeType","SortIcon","DeleteIcon","AddTokenDialog","ExportAccountDialog","ftxPayIcon","SendDialog","DepositDialog","useIsProdNetwork","refreshAccountInfo","useSolanaExplorerUrlSuffix","useRegion","CopyToClipboard","serumMarkets","priceStore","swapApiRequest","showSwapAddress","useAsyncData","showTokenInfoDialog","useConnection","shortenAddress","CloseTokenAccountDialog","ListItemIcon","TokenIcon","EditAccountNameDialog","MergeAccountsDialog","SwapButton","DnsIcon","DomainsList","balanceFormat","Intl","NumberFormat","undefined","minimumFractionDigits","maximumFractionDigits","useGrouping","SortAccounts","None","Ascending","Descending","usdValues","associatedTokensCache","numberFormat","style","currency","fairsIsLoaded","publicKeys","filter","pk","toString","length","BalancesList","wallet","loaded","showAddTokenDialog","setShowAddTokenDialog","showEditAccountNameDialog","setShowEditAccountNameDialog","showMergeAccounts","setShowMergeAccounts","showFtxPayDialog","setShowFtxPayDialog","sortAccounts","setSortAccounts","showDomains","setShowDomains","accounts","setAccountName","isCopied","setIsCopied","isExtensionWidth","setForceUpdate","region","selectedAccount","find","a","isSelected","allTokensLoaded","sortedPublicKeys","sort","b","aVal","bVal","totalUsdValue","map","reduce","setUsdValuesCallback","publicKey","usdValue","forceUpdate","balanceListItemsMemo","memo","props","iconSize","address","toBase58","setTimeout","fontSize","flexGrow","cursor","name","format","toFixed","width","height","result","isRestricted","console","error","connection","marginRight","Memoized","selector","useStyles","theme","textOverflow","overflowX","itemDetails","marginLeft","spacing","marginBottom","buttonContainer","display","justifyContent","marginTop","viewDetails","BalanceListItem","expandable","setUsdValue","balanceInfo","classes","open","setOpen","price","setPrice","tokenSymbol","coin","toUpperCase","m","getPrice","then","catch","err","amount","decimals","mint","tokenName","tokenLogoUri","displayName","assocTok","walletAccounts","Object","assign","equals","isAssociatedToken","acc","subtitle","owner","overflow","flexDirection","Math","pow","parseFloat","flex","className","BalanceListItemDetails","urlSuffix","sendDialogOpen","setSendDialogOpen","depositDialogOpen","setDepositDialogOpen","tokenInfoDialogOpen","setTokenInfoDialogOpen","exportAccDialogOpen","setExportAccDialogOpen","closeTokenAccountDialogOpen","setCloseTokenAccountDialogOpen","showDetails","setShowDetails","isProdNetwork","blockchain","ignoreUserErrors","swapInfo","exportNeedsDisplay","market","isSolAddress","additionalInfo","erc20Contract","allowsExport","e","localStorage","getItem"],"mappings":"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","sourcesContent":["import React, { useState, useMemo, useCallback, useEffect } from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Paper from '@material-ui/core/Paper';\nimport {\n  refreshWalletPublicKeys,\n  useBalanceInfo,\n  useWallet,\n  useWalletPublicKeys,\n  useWalletSelector,\n} from '../utils/wallet';\nimport { findAssociatedTokenAddress } from '../utils/tokens';\nimport LoadingIndicator from './LoadingIndicator';\nimport Collapse from '@material-ui/core/Collapse';\nimport { Typography } from '@material-ui/core';\nimport TokenInfoDialog from './TokenInfoDialog';\nimport FtxPayDialog from './FtxPay/FtxPayDialog';\nimport Link from '@material-ui/core/Link';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { abbreviateAddress, useIsExtensionWidth } from '../utils/utils';\nimport Button from '@material-ui/core/Button';\nimport SendIcon from '@material-ui/icons/Send';\nimport ReceiveIcon from '@material-ui/icons/WorkOutline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport AddIcon from '@material-ui/icons/Add';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/InfoOutlined';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport EditIcon from '@material-ui/icons/Edit';\nimport MergeType from '@material-ui/icons/MergeType';\nimport SortIcon from '@material-ui/icons/Sort';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddTokenDialog from './AddTokenDialog';\nimport ExportAccountDialog from './ExportAccountDialog';\nimport ftxPayIcon from './FtxPay/icon.png';\nimport SendDialog from './SendDialog';\nimport DepositDialog from './DepositDialog';\nimport {\n  useIsProdNetwork,\n  refreshAccountInfo,\n  useSolanaExplorerUrlSuffix,\n} from '../utils/connection';\nimport { useRegion } from '../utils/region';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { serumMarkets, priceStore } from '../utils/markets';\nimport { swapApiRequest } from '../utils/swap/api';\nimport { showSwapAddress } from '../utils/config';\nimport { useAsyncData } from '../utils/fetch-loop';\nimport { showTokenInfoDialog } from '../utils/config';\nimport { useConnection } from '../utils/connection';\nimport { shortenAddress } from '../utils/utils';\nimport CloseTokenAccountDialog from './CloseTokenAccountButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport TokenIcon from './TokenIcon';\nimport EditAccountNameDialog from './EditAccountNameDialog';\nimport MergeAccountsDialog from './MergeAccountsDialog';\nimport SwapButton from './SwapButton';\nimport DnsIcon from '@material-ui/icons/Dns';\nimport DomainsList from './DomainsList';\n\nconst balanceFormat = new Intl.NumberFormat(undefined, {\n  minimumFractionDigits: 4,\n  maximumFractionDigits: 4,\n  useGrouping: true,\n});\n\nconst SortAccounts = {\n  None: 0,\n  Ascending: 1,\n  Descending: 2,\n};\n\n// Aggregated $USD values of all child BalanceListItems child components.\n//\n// Values:\n// * undefined => loading.\n// * null => no market exists.\n// * float => done.\n//\n// For a given set of publicKeys, we know all the USD values have been loaded when\n// all of their values in this object are not `undefined`.\nconst usdValues = {};\n\n// Calculating associated token addresses is an asynchronous operation, so we cache\n// the values so that we can quickly render components using them. This prevents\n// flickering for the associated token fingerprint icon.\nconst associatedTokensCache = {};\n\nconst numberFormat = new Intl.NumberFormat('en-US', {\n  style: 'currency',\n  currency: 'USD',\n});\n\nfunction fairsIsLoaded(publicKeys) {\n  return (\n    publicKeys.filter((pk) => usdValues[pk.toString()] !== undefined).length ===\n    publicKeys.length\n  );\n}\n\nexport default function BalancesList() {\n  const wallet = useWallet();\n  const [publicKeys, loaded] = useWalletPublicKeys();\n  const [showAddTokenDialog, setShowAddTokenDialog] = useState(false);\n  const [showEditAccountNameDialog, setShowEditAccountNameDialog] = useState(\n    false,\n  );\n  const [showMergeAccounts, setShowMergeAccounts] = useState(false);\n  const [showFtxPayDialog, setShowFtxPayDialog] = useState(false);\n  const [sortAccounts, setSortAccounts] = useState(SortAccounts.None);\n  const [showDomains, setShowDomains] = useState(false);\n  const { accounts, setAccountName } = useWalletSelector();\n  const [isCopied, setIsCopied] = useState(false);\n  const isExtensionWidth = useIsExtensionWidth();\n  // Dummy var to force rerenders on demand.\n  const [, setForceUpdate] = useState(false);\n  const region = useRegion();\n  const selectedAccount = accounts.find((a) => a.isSelected);\n  const allTokensLoaded = loaded && fairsIsLoaded(publicKeys);\n  let sortedPublicKeys = publicKeys;\n  if (allTokensLoaded && sortAccounts !== SortAccounts.None) {\n    sortedPublicKeys = [...publicKeys];\n    sortedPublicKeys.sort((a, b) => {\n      const aVal = usdValues[a.toString()];\n      const bVal = usdValues[b.toString()];\n\n      a = aVal === undefined || aVal === null ? -1 : aVal;\n      b = bVal === undefined || bVal === null ? -1 : bVal;\n      if (sortAccounts === SortAccounts.Descending) {\n        if (a < b) {\n          return -1;\n        } else if (a > b) {\n          return 1;\n        } else {\n          return 0;\n        }\n      } else {\n        if (b < a) {\n          return -1;\n        } else if (b > a) {\n          return 1;\n        } else {\n          return 0;\n        }\n      }\n    });\n  }\n  const totalUsdValue = publicKeys\n    .filter((pk) => usdValues[pk.toString()])\n    .map((pk) => usdValues[pk.toString()])\n    .reduce((a, b) => a + b, 0.0);\n\n  // Memoized callback and component for the `BalanceListItems`.\n  //\n  // The `BalancesList` fetches data, e.g., fairs for tokens using React hooks\n  // in each of the child `BalanceListItem` components. However, we want the\n  // parent component, to aggregate all of this data together, for example,\n  // to show the cumulative USD amount in the wallet.\n  //\n  // To achieve this, we need to pass a callback from the parent to the chlid,\n  // so that the parent can collect the results of all the async network requests.\n  // However, this can cause a render loop, since invoking the callback can cause\n  // the parent to rerender, which causese the child to rerender, which causes\n  // the callback to be invoked.\n  //\n  // To solve this, we memoize all the `BalanceListItem` children components.\n  const setUsdValuesCallback = useCallback(\n    (publicKey, usdValue) => {\n      if (usdValues[publicKey.toString()] !== usdValue) {\n        usdValues[publicKey.toString()] = usdValue;\n        if (fairsIsLoaded(publicKeys)) {\n          setForceUpdate((forceUpdate) => !forceUpdate);\n        }\n      }\n    },\n    [publicKeys],\n  );\n  const balanceListItemsMemo = useMemo(() => {\n    return sortedPublicKeys.map((pk) => {\n      return React.memo((props) => {\n        return (\n          <BalanceListItem\n            key={pk.toString()}\n            publicKey={pk}\n            setUsdValue={setUsdValuesCallback}\n          />\n        );\n      });\n    });\n  }, [sortedPublicKeys, setUsdValuesCallback]);\n\n  const iconSize = isExtensionWidth ? 'small' : 'medium';\n\n  return (\n    <Paper>\n      <AppBar position=\"static\" color=\"default\" elevation={1}>\n        <Toolbar>\n          <CopyToClipboard\n            text={selectedAccount && selectedAccount.address.toBase58()}\n            onCopy={() => {\n              setIsCopied(true);\n              setTimeout(() => {\n                setIsCopied(false);\n              }, 1000);\n            }}\n          >\n            <Tooltip\n              title={\n                <Typography>\n                  {isCopied ? 'Copied' : 'Copy to clipboard'}\n                </Typography>\n              }\n              style={{ fontSize: '10rem' }}\n            >\n              <Typography\n                variant=\"h6\"\n                style={{\n                  flexGrow: 1,\n                  fontSize: isExtensionWidth && '1rem',\n                  cursor: 'pointer',\n                }}\n                hover={true}\n                component=\"h2\"\n              >\n                {selectedAccount && selectedAccount.name}\n                {isExtensionWidth\n                  ? ''\n                  : ` (${\n                      selectedAccount &&\n                      shortenAddress(selectedAccount.address.toBase58())\n                    })`}{' '}\n                {allTokensLoaded && (\n                  <>({numberFormat.format(totalUsdValue.toFixed(2))})</>\n                )}\n              </Typography>\n            </Tooltip>\n          </CopyToClipboard>\n          {selectedAccount &&\n            selectedAccount.name !== 'Main account' &&\n            selectedAccount.name !== 'Hardware wallet' && (\n              <Tooltip title=\"Edit Account Name\" arrow>\n                <IconButton\n                  size={iconSize}\n                  onClick={() => setShowEditAccountNameDialog(true)}\n                >\n                  <EditIcon />\n                </IconButton>\n              </Tooltip>\n            )}\n          <Tooltip title=\"Deposit via FTX Pay\" arrow>\n            <IconButton\n              size={iconSize}\n              onClick={() => setShowFtxPayDialog(true)}\n            >\n              <img\n                title={'FTX Pay'}\n                alt={'FTX Pay'}\n                style={{\n                  width: 20,\n                  height: 20,\n                }}\n                src={ftxPayIcon}\n              />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"See your domains\" arrow>\n            <IconButton size={iconSize} onClick={() => setShowDomains(true)}>\n              <DnsIcon />\n            </IconButton>\n          </Tooltip>\n          <DomainsList open={showDomains} setOpen={setShowDomains} />\n          {region.result && !region.result.isRestricted && <SwapButton size={iconSize} />}\n          <Tooltip title=\"Migrate Tokens\" arrow>\n            <IconButton\n              size={iconSize}\n              onClick={() => setShowMergeAccounts(true)}\n            >\n              <MergeType />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Add Token\" arrow>\n            <IconButton\n              size={iconSize}\n              onClick={() => setShowAddTokenDialog(true)}\n            >\n              <AddIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Sort Tokens\" arrow>\n            <IconButton\n              size={iconSize}\n              onClick={() => {\n                switch (sortAccounts) {\n                  case SortAccounts.None:\n                    setSortAccounts(SortAccounts.Ascending);\n                    return;\n                  case SortAccounts.Ascending:\n                    setSortAccounts(SortAccounts.Descending);\n                    return;\n                  case SortAccounts.Descending:\n                    setSortAccounts(SortAccounts.None);\n                    return;\n                  default:\n                    console.error('invalid sort type', sortAccounts);\n                }\n              }}\n            >\n              <SortIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Refresh\" arrow>\n            <IconButton\n              size={iconSize}\n              onClick={() => {\n                refreshWalletPublicKeys(wallet);\n                publicKeys.map((publicKey) =>\n                  refreshAccountInfo(wallet.connection, publicKey, true),\n                );\n              }}\n              style={{ marginRight: -12 }}\n            >\n              <RefreshIcon />\n            </IconButton>\n          </Tooltip>\n        </Toolbar>\n      </AppBar>\n      <List disablePadding>\n        {balanceListItemsMemo.map((Memoized) => (\n          <Memoized />\n        ))}\n        {loaded ? null : <LoadingIndicator />}\n      </List>\n      <AddTokenDialog\n        open={showAddTokenDialog}\n        onClose={() => setShowAddTokenDialog(false)}\n      />\n      <FtxPayDialog\n        open={showFtxPayDialog}\n        publicKeys={publicKeys}\n        onClose={() => setShowFtxPayDialog(false)}\n      />\n      <EditAccountNameDialog\n        open={showEditAccountNameDialog}\n        onClose={() => setShowEditAccountNameDialog(false)}\n        oldName={selectedAccount ? selectedAccount.name : ''}\n        onEdit={(name) => {\n          setAccountName(selectedAccount.selector, name);\n          setShowEditAccountNameDialog(false);\n        }}\n      />\n      <MergeAccountsDialog\n        open={showMergeAccounts}\n        onClose={() => setShowMergeAccounts(false)}\n      />\n    </Paper>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  address: {\n    textOverflow: 'ellipsis',\n    overflowX: 'hidden',\n  },\n  itemDetails: {\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n    marginBottom: theme.spacing(2),\n  },\n  buttonContainer: {\n    display: 'flex',\n    justifyContent: 'space-evenly',\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n  viewDetails: {\n    '&:hover': {\n      cursor: 'pointer',\n    },\n  },\n}));\n\nexport function BalanceListItem({ publicKey, expandable, setUsdValue }) {\n  const wallet = useWallet();\n  const balanceInfo = useBalanceInfo(publicKey);\n  const classes = useStyles();\n  const connection = useConnection();\n  const [open, setOpen] = useState(false);\n  const isExtensionWidth = useIsExtensionWidth();\n  const [, setForceUpdate] = useState(false);\n  // Valid states:\n  //   * undefined => loading.\n  //   * null => not found.\n  //   * else => price is loaded.\n  const [price, setPrice] = useState(undefined);\n  useEffect(() => {\n    if (balanceInfo) {\n      if (balanceInfo.tokenSymbol) {\n        const coin = balanceInfo.tokenSymbol.toUpperCase();\n        // Don't fetch USD stable coins. Mark to 1 USD.\n        if (coin === 'USDT' || coin === 'USDC') {\n          setPrice(1);\n        }\n        // A Serum market exists. Fetch the price.\n        else if (serumMarkets[coin]) {\n          let m = serumMarkets[coin];\n          priceStore\n            .getPrice(connection, m.name)\n            .then((price) => {\n              setPrice(price);\n            })\n            .catch((err) => {\n              console.error(err);\n              setPrice(null);\n            });\n        }\n        // No Serum market exists.\n        else {\n          setPrice(null);\n        }\n      }\n      // No token symbol so don't fetch market data.\n      else {\n        setPrice(null);\n      }\n    }\n  }, [price, balanceInfo, connection]);\n\n  expandable = expandable === undefined ? true : expandable;\n\n  if (!balanceInfo) {\n    return <LoadingIndicator delay={0} />;\n  }\n\n  let {\n    amount,\n    decimals,\n    mint,\n    tokenName,\n    tokenSymbol,\n    tokenLogoUri,\n  } = balanceInfo;\n  tokenName = tokenName ?? abbreviateAddress(mint);\n  let displayName;\n  if (isExtensionWidth) {\n    displayName = tokenSymbol ?? tokenName;\n  } else {\n    displayName = tokenName + (tokenSymbol ? ` (${tokenSymbol})` : '');\n  }\n\n  // Fetch and cache the associated token address.\n  if (wallet && wallet.publicKey && mint) {\n    if (\n      associatedTokensCache[wallet.publicKey.toString()] === undefined ||\n      associatedTokensCache[wallet.publicKey.toString()][mint.toString()] ===\n        undefined\n    ) {\n      findAssociatedTokenAddress(wallet.publicKey, mint).then((assocTok) => {\n        let walletAccounts = Object.assign(\n          {},\n          associatedTokensCache[wallet.publicKey.toString()],\n        );\n        walletAccounts[mint.toString()] = assocTok;\n        associatedTokensCache[wallet.publicKey.toString()] = walletAccounts;\n        if (assocTok.equals(publicKey)) {\n          // Force a rerender now that we've cached the value.\n          setForceUpdate((forceUpdate) => !forceUpdate);\n        }\n      });\n    }\n  }\n\n  // undefined => not loaded.\n  let isAssociatedToken = mint ? undefined : false;\n  if (\n    wallet &&\n    wallet.publicKey &&\n    mint &&\n    associatedTokensCache[wallet.publicKey.toString()]\n  ) {\n    let acc =\n      associatedTokensCache[wallet.publicKey.toString()][mint.toString()];\n    if (acc) {\n      if (acc.equals(publicKey)) {\n        isAssociatedToken = true;\n      } else {\n        isAssociatedToken = false;\n      }\n    }\n  }\n\n  const subtitle =\n    isExtensionWidth || !publicKey.equals(balanceInfo.owner) ? undefined : (\n      <div style={{ display: 'flex', height: '20px', overflow: 'hidden' }}>\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'center',\n            flexDirection: 'column',\n          }}\n        >\n          {publicKey.toBase58()}\n        </div>\n      </div>\n    );\n\n  const usdValue =\n    price === undefined // Not yet loaded.\n      ? undefined\n      : price === null // Loaded and empty.\n      ? null\n      : ((amount / Math.pow(10, decimals)) * price).toFixed(2); // Loaded.\n  if (setUsdValue && usdValue !== undefined) {\n    setUsdValue(publicKey, usdValue === null ? null : parseFloat(usdValue));\n  }\n\n  return (\n    <>\n      <ListItem button onClick={() => expandable && setOpen((open) => !open)}>\n        <ListItemIcon>\n          <TokenIcon\n            mint={mint}\n            tokenName={tokenName}\n            url={tokenLogoUri}\n            size={28}\n          />\n        </ListItemIcon>\n        <div style={{ display: 'flex', flex: 1 }}>\n          <ListItemText\n            primary={\n              <>\n                {balanceFormat.format(amount / Math.pow(10, decimals))}{' '}\n                {displayName}\n              </>\n            }\n            secondary={subtitle}\n            secondaryTypographyProps={{ className: classes.address }}\n          />\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'center',\n              flexDirection: 'column',\n            }}\n          >\n            {price && (\n              <Typography color=\"textSecondary\">\n                {numberFormat.format(usdValue)}\n              </Typography>\n            )}\n          </div>\n        </div>\n        {expandable ? open ? <ExpandLess /> : <ExpandMore /> : <></>}\n      </ListItem>\n      {expandable && (\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          <BalanceListItemDetails\n            isAssociatedToken={isAssociatedToken}\n            publicKey={publicKey}\n            serumMarkets={serumMarkets}\n            balanceInfo={balanceInfo}\n          />\n        </Collapse>\n      )}\n    </>\n  );\n}\n\nfunction BalanceListItemDetails({\n  publicKey,\n  serumMarkets,\n  balanceInfo,\n  isAssociatedToken,\n}) {\n  const urlSuffix = useSolanaExplorerUrlSuffix();\n  const classes = useStyles();\n  const [sendDialogOpen, setSendDialogOpen] = useState(false);\n  const [depositDialogOpen, setDepositDialogOpen] = useState(false);\n  const [tokenInfoDialogOpen, setTokenInfoDialogOpen] = useState(false);\n  const [exportAccDialogOpen, setExportAccDialogOpen] = useState(false);\n  const [\n    closeTokenAccountDialogOpen,\n    setCloseTokenAccountDialogOpen,\n  ] = useState(false);\n  const [showDetails, setShowDetails] = useState(false);\n  const wallet = useWallet();\n  const isProdNetwork = useIsProdNetwork();\n  const [swapInfo] = useAsyncData(async () => {\n    if (!showSwapAddress || !isProdNetwork) {\n      return null;\n    }\n    return await swapApiRequest(\n      'POST',\n      'swap_to',\n      {\n        blockchain: 'sol',\n        coin: balanceInfo.mint?.toBase58(),\n        address: publicKey.toBase58(),\n      },\n      { ignoreUserErrors: true },\n    );\n  }, [\n    'swapInfo',\n    isProdNetwork,\n    balanceInfo.mint?.toBase58(),\n    publicKey.toBase58(),\n  ]);\n  const isExtensionWidth = useIsExtensionWidth();\n\n  if (!balanceInfo) {\n    return <LoadingIndicator delay={0} />;\n  }\n\n  let { mint, tokenName, tokenSymbol, owner, amount } = balanceInfo;\n\n  // Only show the export UI for the native SOL coin.\n  const exportNeedsDisplay =\n    mint === null && tokenName === 'SOL' && tokenSymbol === 'SOL';\n\n  const market = tokenSymbol\n    ? serumMarkets[tokenSymbol.toUpperCase()]\n      ? serumMarkets[tokenSymbol.toUpperCase()].publicKey\n      : undefined\n    : undefined;\n  const isSolAddress = publicKey.equals(owner);\n  const additionalInfo = isExtensionWidth ? undefined : (\n    <>\n      <Typography variant=\"body2\">\n        Token Name: {tokenName ?? 'Unknown'}\n      </Typography>\n      <Typography variant=\"body2\">\n        Token Symbol: {tokenSymbol ?? 'Unknown'}\n      </Typography>\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n        <div>\n          {!isSolAddress && isAssociatedToken === false && (\n            <div style={{ display: 'flex' }}>\n              This is an auxiliary token account.\n            </div>\n          )}\n          <Typography variant=\"body2\">\n            <Link\n              href={\n                `https://solscan.io/account/${publicKey.toBase58()}` + urlSuffix\n              }\n              target=\"_blank\"\n              rel=\"noopener\"\n            >\n              View on Solscan\n            </Link>\n          </Typography>\n          {market && (\n            <Typography variant=\"body2\">\n              <Link\n                href={`https://dex.projectserum.com/#/market/${market}`}\n                target=\"_blank\"\n                rel=\"noopener\"\n              >\n                View on Serum\n              </Link>\n            </Typography>\n          )}\n          {swapInfo && swapInfo.coin.erc20Contract && (\n            <Typography variant=\"body2\">\n              <Link\n                href={\n                  `https://etherscan.io/token/${swapInfo.coin.erc20Contract}` +\n                  urlSuffix\n                }\n                target=\"_blank\"\n                rel=\"noopener\"\n              >\n                View on Ethereum\n              </Link>\n            </Typography>\n          )}\n          {!isSolAddress && (\n            <Typography variant=\"body2\">\n              <Link\n                className={classes.viewDetails}\n                onClick={() => setShowDetails(!showDetails)}\n              >\n                View Details\n              </Link>\n            </Typography>\n          )}\n          {showDetails &&\n            (mint ? (\n              <Typography variant=\"body2\" className={classes.address}>\n                Mint Address: {mint.toBase58()}\n              </Typography>\n            ) : null)}\n          {!isSolAddress && showDetails && (\n            <Typography variant=\"body2\" className={classes.address}>\n              {isAssociatedToken ? 'Associated' : ''} Token Metadata:{' '}\n              {publicKey.toBase58()}\n            </Typography>\n          )}\n        </div>\n        {exportNeedsDisplay && wallet.allowsExport && (\n          <div>\n            <Typography variant=\"body2\">\n              <Link href={'#'} onClick={(e) => setExportAccDialogOpen(true)}>\n                Export\n              </Link>\n            </Typography>\n          </div>\n        )}\n      </div>\n    </>\n  );\n\n  return (\n    <>\n      {wallet.allowsExport && (\n        <ExportAccountDialog\n          onClose={() => setExportAccDialogOpen(false)}\n          open={exportAccDialogOpen}\n        />\n      )}\n      <div className={classes.itemDetails}>\n        <div className={classes.buttonContainer}>\n          {!publicKey.equals(owner) && showTokenInfoDialog ? (\n            <Button\n              variant=\"outlined\"\n              color=\"default\"\n              startIcon={<InfoIcon />}\n              onClick={() => setTokenInfoDialogOpen(true)}\n            >\n              Token Info\n            </Button>\n          ) : null}\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            startIcon={<ReceiveIcon />}\n            onClick={() => setDepositDialogOpen(true)}\n          >\n            Receive\n          </Button>\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            startIcon={<SendIcon />}\n            onClick={() => setSendDialogOpen(true)}\n          >\n            Send\n          </Button>\n          {localStorage.getItem('warning-close-account') &&\n          mint &&\n          amount === 0 ? (\n            <Button\n              variant=\"outlined\"\n              color=\"secondary\"\n              size=\"small\"\n              startIcon={<DeleteIcon />}\n              onClick={() => setCloseTokenAccountDialogOpen(true)}\n            >\n              Delete\n            </Button>\n          ) : null}\n        </div>\n        {additionalInfo}\n      </div>\n      <SendDialog\n        open={sendDialogOpen}\n        onClose={() => setSendDialogOpen(false)}\n        balanceInfo={balanceInfo}\n        publicKey={publicKey}\n      />\n      <DepositDialog\n        open={depositDialogOpen}\n        onClose={() => setDepositDialogOpen(false)}\n        balanceInfo={balanceInfo}\n        publicKey={publicKey}\n        swapInfo={swapInfo}\n        isAssociatedToken={isAssociatedToken}\n      />\n      <TokenInfoDialog\n        open={tokenInfoDialogOpen}\n        onClose={() => setTokenInfoDialogOpen(false)}\n        balanceInfo={balanceInfo}\n        publicKey={publicKey}\n      />\n      <CloseTokenAccountDialog\n        open={closeTokenAccountDialogOpen}\n        onClose={() => setCloseTokenAccountDialogOpen(false)}\n        balanceInfo={balanceInfo}\n        publicKey={publicKey}\n      />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}