{"ast":null,"code":"import _regeneratorRuntime from\"/Users/jalcantara/Desktop/SOL-dev/tanda-wallet-sol/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _asyncToGenerator from\"/Users/jalcantara/Desktop/SOL-dev/tanda-wallet-sol/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/jalcantara/Desktop/SOL-dev/tanda-wallet-sol/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import DialogContentText from'@material-ui/core/DialogContentText';import DialogActions from'@material-ui/core/DialogActions';import Button from'@material-ui/core/Button';import DialogTitle from'@material-ui/core/DialogTitle';import DialogContent from'@material-ui/core/DialogContent';import TextField from'@material-ui/core/TextField';import{refreshWalletPublicKeys,useWallet,useWalletTokenAccounts}from'../utils/wallet';import{LAMPORTS_PER_SOL,PublicKey}from'@solana/web3.js';import{useUpdateTokenName,usePopularTokens}from'../utils/tokens/names';import{useAsyncData}from'../utils/fetch-loop';import LoadingIndicator from'./LoadingIndicator';import{makeStyles,Tab,Tabs}from'@material-ui/core';import{useSendTransaction}from'../utils/notifications';import List from'@material-ui/core/List';import ListItem from'@material-ui/core/ListItem';import ListItemText from'@material-ui/core/ListItemText';import ListItemIcon from'@material-ui/core/ListItemIcon';import{abbreviateAddress}from'../utils/utils';import ExpandLess from'@material-ui/icons/ExpandLess';import ExpandMore from'@material-ui/icons/ExpandMore';import Collapse from'@material-ui/core/Collapse';import{useSolanaExplorerUrlSuffix}from'../utils/connection';import Link from'@material-ui/core/Link';import CopyableDisplay from'./CopyableDisplay';import DialogForm from'./DialogForm';import{showSwapAddress}from'../utils/config';import{swapApiRequest}from'../utils/swap/api';import TokenIcon from'./TokenIcon';var feeFormat=new Intl.NumberFormat(undefined,{minimumFractionDigits:6,maximumFractionDigits:6});var useStyles=makeStyles(function(theme){return{tabs:{marginBottom:theme.spacing(1),borderBottom:\"1px solid \".concat(theme.palette.background.paper)}};});export default function AddTokenDialog(_ref){var open=_ref.open,onClose=_ref.onClose;var wallet=useWallet();var _useAsyncData=useAsyncData(wallet.tokenAccountCost,wallet.tokenAccountCost),_useAsyncData2=_slicedToArray(_useAsyncData,1),tokenAccountCost=_useAsyncData2[0];var classes=useStyles();var updateTokenName=useUpdateTokenName();var _useSendTransaction=useSendTransaction(),_useSendTransaction2=_slicedToArray(_useSendTransaction,2),sendTransaction=_useSendTransaction2[0],sending=_useSendTransaction2[1];var _useWalletTokenAccoun=useWalletTokenAccounts(),_useWalletTokenAccoun2=_slicedToArray(_useWalletTokenAccoun,1),walletAccounts=_useWalletTokenAccoun2[0];var popularTokens=usePopularTokens();var _useState=useState(!!popularTokens?'popular':'manual'),_useState2=_slicedToArray(_useState,2),tab=_useState2[0],setTab=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),mintAddress=_useState4[0],setMintAddress=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),tokenName=_useState6[0],setTokenName=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),tokenSymbol=_useState8[0],setTokenSymbol=_useState8[1];var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),erc20Address=_useState10[0],setErc20Address=_useState10[1];useEffect(function(){if(!popularTokens){setTab('manual');}},[popularTokens]);function onSubmit(params){if(tab==='manual'){params={mintAddress:mintAddress,tokenName:tokenName,tokenSymbol:tokenSymbol};}else if(tab==='erc20'){params={erc20Address:erc20Address};}sendTransaction(addToken(params),{onSuccess:function onSuccess(){refreshWalletPublicKeys(wallet);onClose();}});}function addToken(_x){return _addToken.apply(this,arguments);}function _addToken(){_addToken=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2){var mintAddress,tokenName,tokenSymbol,erc20Address,tokenInfo,mint,resp;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:mintAddress=_ref2.mintAddress,tokenName=_ref2.tokenName,tokenSymbol=_ref2.tokenSymbol,erc20Address=_ref2.erc20Address;if(!erc20Address){_context.next=9;break;}_context.next=4;return swapApiRequest('POST',\"coins/eth/\".concat(erc20Address));case 4:tokenInfo=_context.sent;mintAddress=tokenInfo.splMint;tokenName=tokenInfo.name;tokenSymbol=tokenInfo.ticker;if(tokenInfo.blockchain!=='sol'){tokenName='Wrapped '+tokenName;}case 9:mint=new PublicKey(mintAddress);updateTokenName(mint,tokenName,tokenSymbol);_context.next=13;return wallet.createAssociatedTokenAccount(mint);case 13:resp=_context.sent;return _context.abrupt(\"return\",resp[1]);case 15:case\"end\":return _context.stop();}}},_callee);}));return _addToken.apply(this,arguments);}var valid=true;if(tab==='erc20'){valid=erc20Address.length===42&&erc20Address.startsWith('0x');}return/*#__PURE__*/_jsxs(DialogForm,{open:open,onClose:onClose,children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Add Token\"}),/*#__PURE__*/_jsxs(DialogContent,{children:[tokenAccountCost?/*#__PURE__*/_jsxs(DialogContentText,{children:[\"Add a token to your wallet. This will cost\",' ',feeFormat.format(tokenAccountCost/LAMPORTS_PER_SOL),\" SOL.\"]}):/*#__PURE__*/_jsx(LoadingIndicator,{}),!!popularTokens&&/*#__PURE__*/_jsxs(Tabs,{value:tab,textColor:\"primary\",indicatorColor:\"primary\",className:classes.tabs,onChange:function onChange(e,value){return setTab(value);},children:[/*#__PURE__*/_jsx(Tab,{label:\"Popular Tokens\",value:\"popular\"}),showSwapAddress?/*#__PURE__*/_jsx(Tab,{label:\"ERC20 Token\",value:\"erc20\"}):null,/*#__PURE__*/_jsx(Tab,{label:\"Manual Input\",value:\"manual\"})]}),tab==='manual'||!popularTokens?/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(TextField,{label:\"Token Mint Address\",fullWidth:true,variant:\"outlined\",margin:\"normal\",value:mintAddress,onChange:function onChange(e){return setMintAddress(e.target.value);},autoFocus:true,disabled:sending}),/*#__PURE__*/_jsx(TextField,{label:\"Token Name\",fullWidth:true,variant:\"outlined\",margin:\"normal\",value:tokenName,onChange:function onChange(e){return setTokenName(e.target.value);},disabled:sending}),/*#__PURE__*/_jsx(TextField,{label:\"Token Symbol\",fullWidth:true,variant:\"outlined\",margin:\"normal\",value:tokenSymbol,onChange:function onChange(e){return setTokenSymbol(e.target.value);},disabled:sending})]}):tab==='popular'?/*#__PURE__*/_jsx(List,{disablePadding:true,children:popularTokens.filter(function(tokenInfo){return tokenInfo.address;}).map(function(tokenInfo){return/*#__PURE__*/_jsx(TokenListItem,{tokenInfo:tokenInfo,existingAccount:(walletAccounts||[]).find(function(account){return account.parsed.mint.toBase58()===tokenInfo.address;}),onSubmit:onSubmit,disabled:sending},tokenInfo.address);})}):tab==='erc20'?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(TextField,{label:\"ERC20 Contract Address\",fullWidth:true,variant:\"outlined\",margin:\"normal\",value:erc20Address,onChange:function onChange(e){return setErc20Address(e.target.value.trim());},autoFocus:true,disabled:sending}),erc20Address&&valid?/*#__PURE__*/_jsx(Link,{href:\"https://etherscan.io/token/\".concat(erc20Address),target:\"_blank\",rel:\"noopener\",children:\"View on Etherscan\"}):null]}):null]}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:onClose,children:\"Cancel\"}),tab!=='popular'&&/*#__PURE__*/_jsx(Button,{type:\"submit\",color:\"primary\",disabled:sending||!valid,onClick:function onClick(){return onSubmit({tokenName:tokenName,tokenSymbol:tokenSymbol,mintAddress:mintAddress});},children:\"Add\"})]})]});}function TokenListItem(_ref3){var _tokenInfo$name;var tokenInfo=_ref3.tokenInfo,onSubmit=_ref3.onSubmit,disabled=_ref3.disabled,existingAccount=_ref3.existingAccount;var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),open=_useState12[0],setOpen=_useState12[1];var urlSuffix=useSolanaExplorerUrlSuffix();var alreadyExists=!!existingAccount;return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex'},children:[/*#__PURE__*/_jsxs(ListItem,{button:true,onClick:function onClick(){return setOpen(function(open){return!open;});},children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(TokenIcon,{url:tokenInfo.logoUri,tokenName:tokenInfo.name,size:20})}),/*#__PURE__*/_jsx(ListItemText,{primary:/*#__PURE__*/_jsxs(Link,{target:\"_blank\",rel:\"noopener\",href:\"https://solscan.io/account/\".concat(tokenInfo.address)+urlSuffix,children:[(_tokenInfo$name=tokenInfo.name)!==null&&_tokenInfo$name!==void 0?_tokenInfo$name:abbreviateAddress(tokenInfo.address),tokenInfo.symbol?\" (\".concat(tokenInfo.symbol,\")\"):null]})}),open?/*#__PURE__*/_jsx(ExpandLess,{}):/*#__PURE__*/_jsx(ExpandMore,{})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",color:\"primary\",disabled:disabled||alreadyExists,onClick:function onClick(){return onSubmit({tokenName:tokenInfo.name,tokenSymbol:tokenInfo.symbol,mintAddress:tokenInfo.address});},children:alreadyExists?'Added':'Add'})]},tokenInfo.name),/*#__PURE__*/_jsx(Collapse,{in:open,timeout:\"auto\",unmountOnExit:true,children:/*#__PURE__*/_jsx(CopyableDisplay,{value:tokenInfo.address,label:\"\".concat(tokenInfo.symbol,\" Mint Address\")})})]});}","map":{"version":3,"sources":["/Users/jalcantara/Desktop/SOL-dev/tanda-wallet-sol/src/components/AddTokenDialog.js"],"names":["React","useEffect","useState","DialogContentText","DialogActions","Button","DialogTitle","DialogContent","TextField","refreshWalletPublicKeys","useWallet","useWalletTokenAccounts","LAMPORTS_PER_SOL","PublicKey","useUpdateTokenName","usePopularTokens","useAsyncData","LoadingIndicator","makeStyles","Tab","Tabs","useSendTransaction","List","ListItem","ListItemText","ListItemIcon","abbreviateAddress","ExpandLess","ExpandMore","Collapse","useSolanaExplorerUrlSuffix","Link","CopyableDisplay","DialogForm","showSwapAddress","swapApiRequest","TokenIcon","feeFormat","Intl","NumberFormat","undefined","minimumFractionDigits","maximumFractionDigits","useStyles","theme","tabs","marginBottom","spacing","borderBottom","palette","background","paper","AddTokenDialog","open","onClose","wallet","tokenAccountCost","classes","updateTokenName","sendTransaction","sending","walletAccounts","popularTokens","tab","setTab","mintAddress","setMintAddress","tokenName","setTokenName","tokenSymbol","setTokenSymbol","erc20Address","setErc20Address","onSubmit","params","addToken","onSuccess","tokenInfo","splMint","name","ticker","blockchain","mint","createAssociatedTokenAccount","resp","valid","length","startsWith","format","e","value","target","filter","address","map","find","account","parsed","toBase58","trim","TokenListItem","disabled","existingAccount","setOpen","urlSuffix","alreadyExists","display","logoUri","symbol"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport TextField from '@material-ui/core/TextField';\nimport {\n  refreshWalletPublicKeys,\n  useWallet,\n  useWalletTokenAccounts,\n} from '../utils/wallet';\nimport { LAMPORTS_PER_SOL, PublicKey } from '@solana/web3.js';\nimport { useUpdateTokenName, usePopularTokens } from '../utils/tokens/names';\nimport { useAsyncData } from '../utils/fetch-loop';\nimport LoadingIndicator from './LoadingIndicator';\nimport { makeStyles, Tab, Tabs } from '@material-ui/core';\nimport { useSendTransaction } from '../utils/notifications';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport { abbreviateAddress } from '../utils/utils';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport { useSolanaExplorerUrlSuffix } from '../utils/connection';\nimport Link from '@material-ui/core/Link';\nimport CopyableDisplay from './CopyableDisplay';\nimport DialogForm from './DialogForm';\nimport { showSwapAddress } from '../utils/config';\nimport { swapApiRequest } from '../utils/swap/api';\nimport TokenIcon from './TokenIcon';\n\nconst feeFormat = new Intl.NumberFormat(undefined, {\n  minimumFractionDigits: 6,\n  maximumFractionDigits: 6,\n});\n\nconst useStyles = makeStyles((theme) => ({\n  tabs: {\n    marginBottom: theme.spacing(1),\n    borderBottom: `1px solid ${theme.palette.background.paper}`,\n  },\n}));\n\nexport default function AddTokenDialog({ open, onClose }) {\n  let wallet = useWallet();\n  let [tokenAccountCost] = useAsyncData(\n    wallet.tokenAccountCost,\n    wallet.tokenAccountCost,\n  );\n  let classes = useStyles();\n  let updateTokenName = useUpdateTokenName();\n  const [sendTransaction, sending] = useSendTransaction();\n\n  const [walletAccounts] = useWalletTokenAccounts();\n  const popularTokens = usePopularTokens();\n  const [tab, setTab] = useState(!!popularTokens ? 'popular' : 'manual');\n  const [mintAddress, setMintAddress] = useState('');\n  const [tokenName, setTokenName] = useState('');\n  const [tokenSymbol, setTokenSymbol] = useState('');\n  const [erc20Address, setErc20Address] = useState('');\n\n  useEffect(() => {\n    if (!popularTokens) {\n      setTab('manual');\n    }\n  }, [popularTokens]);\n\n  function onSubmit(params) {\n    if (tab === 'manual') {\n      params = { mintAddress, tokenName, tokenSymbol };\n    } else if (tab === 'erc20') {\n      params = { erc20Address };\n    }\n    sendTransaction(addToken(params), {\n      onSuccess: () => {\n        refreshWalletPublicKeys(wallet);\n        onClose();\n      },\n    });\n  }\n\n  async function addToken({\n    mintAddress,\n    tokenName,\n    tokenSymbol,\n    erc20Address,\n  }) {\n    if (erc20Address) {\n      let tokenInfo = await swapApiRequest('POST', `coins/eth/${erc20Address}`);\n      mintAddress = tokenInfo.splMint;\n      tokenName = tokenInfo.name;\n      tokenSymbol = tokenInfo.ticker;\n      if (tokenInfo.blockchain !== 'sol') {\n        tokenName = 'Wrapped ' + tokenName;\n      }\n    }\n\n    let mint = new PublicKey(mintAddress);\n    updateTokenName(mint, tokenName, tokenSymbol);\n    const resp = await wallet.createAssociatedTokenAccount(mint);\n    return resp[1];\n  }\n\n  let valid = true;\n  if (tab === 'erc20') {\n    valid = erc20Address.length === 42 && erc20Address.startsWith('0x');\n  }\n\n  return (\n    <DialogForm open={open} onClose={onClose}>\n      <DialogTitle>Add Token</DialogTitle>\n      <DialogContent>\n        {tokenAccountCost ? (\n          <DialogContentText>\n            Add a token to your wallet. This will cost{' '}\n            {feeFormat.format(tokenAccountCost / LAMPORTS_PER_SOL)} SOL.\n          </DialogContentText>\n        ) : (\n          <LoadingIndicator />\n        )}\n        {!!popularTokens && (\n          <Tabs\n            value={tab}\n            textColor=\"primary\"\n            indicatorColor=\"primary\"\n            className={classes.tabs}\n            onChange={(e, value) => setTab(value)}\n          >\n            <Tab label=\"Popular Tokens\" value=\"popular\" />\n            {showSwapAddress ? <Tab label=\"ERC20 Token\" value=\"erc20\" /> : null}\n            <Tab label=\"Manual Input\" value=\"manual\" />\n          </Tabs>\n        )}\n        {tab === 'manual' || !popularTokens ? (\n          <React.Fragment>\n            <TextField\n              label=\"Token Mint Address\"\n              fullWidth\n              variant=\"outlined\"\n              margin=\"normal\"\n              value={mintAddress}\n              onChange={(e) => setMintAddress(e.target.value)}\n              autoFocus\n              disabled={sending}\n            />\n            <TextField\n              label=\"Token Name\"\n              fullWidth\n              variant=\"outlined\"\n              margin=\"normal\"\n              value={tokenName}\n              onChange={(e) => setTokenName(e.target.value)}\n              disabled={sending}\n            />\n            <TextField\n              label=\"Token Symbol\"\n              fullWidth\n              variant=\"outlined\"\n              margin=\"normal\"\n              value={tokenSymbol}\n              onChange={(e) => setTokenSymbol(e.target.value)}\n              disabled={sending}\n            />\n          </React.Fragment>\n        ) : tab === 'popular' ? (\n          <List disablePadding>\n            {popularTokens.filter(tokenInfo => tokenInfo.address).map((tokenInfo) => (\n              <TokenListItem\n                key={tokenInfo.address}\n                tokenInfo={tokenInfo}\n                existingAccount={(walletAccounts || []).find(\n                  (account) =>\n                    account.parsed.mint.toBase58() === tokenInfo.address,\n                )}\n                onSubmit={onSubmit}\n                disabled={sending}\n              />\n            ))}\n          </List>\n        ) : tab === 'erc20' ? (\n          <>\n            <TextField\n              label=\"ERC20 Contract Address\"\n              fullWidth\n              variant=\"outlined\"\n              margin=\"normal\"\n              value={erc20Address}\n              onChange={(e) => setErc20Address(e.target.value.trim())}\n              autoFocus\n              disabled={sending}\n            />\n            {erc20Address && valid ? (\n              <Link\n                href={`https://etherscan.io/token/${erc20Address}`}\n                target=\"_blank\"\n                rel=\"noopener\"\n              >\n                View on Etherscan\n              </Link>\n            ) : null}\n          </>\n        ) : null}\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose}>Cancel</Button>\n        {tab !== 'popular' && (\n          <Button\n            type=\"submit\"\n            color=\"primary\"\n            disabled={sending || !valid}\n            onClick={() => onSubmit({ tokenName, tokenSymbol, mintAddress })}\n          >\n            Add\n          </Button>\n        )}\n      </DialogActions>\n    </DialogForm>\n  );\n}\n\nfunction TokenListItem({ tokenInfo, onSubmit, disabled, existingAccount }) {\n  const [open, setOpen] = useState(false);\n  const urlSuffix = useSolanaExplorerUrlSuffix();\n  const alreadyExists = !!existingAccount;\n\n  return (\n    <React.Fragment>\n      <div style={{ display: 'flex' }} key={tokenInfo.name}>\n        <ListItem button onClick={() => setOpen((open) => !open)}>\n          <ListItemIcon>\n            <TokenIcon\n              url={tokenInfo.logoUri}\n              tokenName={tokenInfo.name}\n              size={20}\n            />\n          </ListItemIcon>\n          <ListItemText\n            primary={\n              <Link\n                target=\"_blank\"\n                rel=\"noopener\"\n                href={\n                  `https://solscan.io/account/${tokenInfo.address}` +\n                  urlSuffix\n                }\n              >\n                {tokenInfo.name ?? abbreviateAddress(tokenInfo.address)}\n                {tokenInfo.symbol ? ` (${tokenInfo.symbol})` : null}\n              </Link>\n            }\n          />\n          {open ? <ExpandLess /> : <ExpandMore />}\n        </ListItem>\n        <Button\n          type=\"submit\"\n          color=\"primary\"\n          disabled={disabled || alreadyExists}\n          onClick={() =>\n            onSubmit({\n              tokenName: tokenInfo.name,\n              tokenSymbol: tokenInfo.symbol,\n              mintAddress: tokenInfo.address,\n            })\n          }\n        >\n          {alreadyExists ? 'Added' : 'Add'}\n        </Button>\n      </div>\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\n        <CopyableDisplay\n          value={tokenInfo.address}\n          label={`${tokenInfo.symbol} Mint Address`}\n        />\n      </Collapse>\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}