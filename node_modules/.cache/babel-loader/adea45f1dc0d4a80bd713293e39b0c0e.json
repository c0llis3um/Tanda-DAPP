{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"/Users/jalcantara/Desktop/SOL-dev/Tanda-DAPP/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{createContext,useContext,useEffect,useState}from'react';var ConnectedWalletsContext=/*#__PURE__*/createContext({});export var ConnectedWalletsProvider=function ConnectedWalletsProvider(_ref){var children=_ref.children;var _useState=useState({}),_useState2=_slicedToArray(_useState,2),connectedWallets=_useState2[0],setConnectedWallets=_useState2[1];useEffect(function(){var updateConnectionAmount=function updateConnectionAmount(){chrome.storage.local.get('connectedWallets',function(result){setConnectedWallets(result.connectedWallets||{});});};var listener=function listener(changes){if('connectedWallets'in changes){updateConnectionAmount();}};updateConnectionAmount();chrome.storage.local.onChanged.addListener(listener);return function(){return chrome.storage.local.onChanged.removeListener(listener);};},[]);return/*#__PURE__*/_jsx(ConnectedWalletsContext.Provider,{value:connectedWallets,children:children});};export var useConnectedWallets=function useConnectedWallets(){return useContext(ConnectedWalletsContext);};","map":{"version":3,"sources":["/Users/jalcantara/Desktop/SOL-dev/Tanda-DAPP/src/utils/connected-wallets.js"],"names":["createContext","useContext","useEffect","useState","ConnectedWalletsContext","ConnectedWalletsProvider","children","connectedWallets","setConnectedWallets","updateConnectionAmount","chrome","storage","local","get","result","listener","changes","onChanged","addListener","removeListener","useConnectedWallets"],"mappings":"8MAAA,OAASA,aAAT,CAAwBC,UAAxB,CAAoCC,SAApC,CAA+CC,QAA/C,KAA+D,OAA/D,CAEA,GAAMC,CAAAA,uBAAuB,cAAGJ,aAAa,CAAC,EAAD,CAA7C,CAEA,MAAO,IAAMK,CAAAA,wBAAwB,CAAG,QAA3BA,CAAAA,wBAA2B,MAAkB,IAAfC,CAAAA,QAAe,MAAfA,QAAe,eACRH,QAAQ,CAAC,EAAD,CADA,wCACjDI,gBADiD,eAC/BC,mBAD+B,eAGxDN,SAAS,CAAC,UAAM,CACd,GAAMO,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,EAAM,CACnCC,MAAM,CAACC,OAAP,CAAeC,KAAf,CAAqBC,GAArB,CAAyB,kBAAzB,CAA6C,SAACC,MAAD,CAAY,CACvDN,mBAAmB,CAACM,MAAM,CAACP,gBAAP,EAA2B,EAA5B,CAAnB,CACD,CAFD,EAGD,CAJD,CAKA,GAAMQ,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,OAAD,CAAa,CAC5B,GAAI,oBAAsBA,CAAAA,OAA1B,CAAmC,CACjCP,sBAAsB,GACvB,CACF,CAJD,CAKAA,sBAAsB,GACtBC,MAAM,CAACC,OAAP,CAAeC,KAAf,CAAqBK,SAArB,CAA+BC,WAA/B,CAA2CH,QAA3C,EACA,MAAO,kBAAML,CAAAA,MAAM,CAACC,OAAP,CAAeC,KAAf,CAAqBK,SAArB,CAA+BE,cAA/B,CAA8CJ,QAA9C,CAAN,EAAP,CACD,CAdQ,CAcN,EAdM,CAAT,CAgBA,mBACE,KAAC,uBAAD,CAAyB,QAAzB,EAAkC,KAAK,CAAER,gBAAzC,UACGD,QADH,EADF,CAKD,CAxBM,CA0BP,MAAO,IAAMc,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,SAAMnB,CAAAA,UAAU,CAACG,uBAAD,CAAhB,EAA5B","sourcesContent":["import { createContext, useContext, useEffect, useState } from 'react';\n\nconst ConnectedWalletsContext = createContext({});\n\nexport const ConnectedWalletsProvider = ({ children }) => {\n  const [connectedWallets, setConnectedWallets] = useState({});\n\n  useEffect(() => {\n    const updateConnectionAmount = () => {\n      chrome.storage.local.get('connectedWallets', (result) => {\n        setConnectedWallets(result.connectedWallets || {});\n      });\n    };\n    const listener = (changes) => {\n      if ('connectedWallets' in changes) {\n        updateConnectionAmount();\n      }\n    };\n    updateConnectionAmount();\n    chrome.storage.local.onChanged.addListener(listener);\n    return () => chrome.storage.local.onChanged.removeListener(listener);\n  }, []);\n\n  return (\n    <ConnectedWalletsContext.Provider value={connectedWallets}>\n      {children}\n    </ConnectedWalletsContext.Provider>\n  );\n};\n\nexport const useConnectedWallets = () => useContext(ConnectedWalletsContext);\n"]},"metadata":{},"sourceType":"module"}