{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NameRegistryState = void 0;\n\nconst web3_js_1 = require(\"@solana/web3.js\");\n\nconst borsh_1 = require(\"borsh\");\n\nclass NameRegistryState {\n  constructor(obj) {\n    this.parentName = new web3_js_1.PublicKey(obj.parentName);\n    this.owner = new web3_js_1.PublicKey(obj.owner);\n    this.class = new web3_js_1.PublicKey(obj.class);\n  }\n\n  static async retrieve(connection, nameAccountKey) {\n    var _a;\n\n    let nameAccount = await connection.getAccountInfo(nameAccountKey, 'processed');\n\n    if (!nameAccount) {\n      throw new Error('Invalid name account provided');\n    }\n\n    let res = borsh_1.deserializeUnchecked(this.schema, NameRegistryState, nameAccount.data);\n    res.data = (_a = nameAccount.data) === null || _a === void 0 ? void 0 : _a.slice(this.HEADER_LEN);\n    return res;\n  }\n\n}\n\nexports.NameRegistryState = NameRegistryState;\nNameRegistryState.HEADER_LEN = 96;\nNameRegistryState.schema = new Map([[NameRegistryState, {\n  kind: 'struct',\n  fields: [['parentName', [32]], ['owner', [32]], ['class', [32]]]\n}]]);","map":{"version":3,"sources":["../src/state.ts"],"names":[],"mappings":";;;;;;;AAAA,MAAA,SAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AACA,MAAA,OAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AAEA,MAAa,iBAAb,CAA8B;AAoB5B,EAAA,WAAA,CAAY,GAAZ,EAIC;AACC,SAAK,UAAL,GAAkB,IAAI,SAAA,CAAA,SAAJ,CAAc,GAAG,CAAC,UAAlB,CAAlB;AACA,SAAK,KAAL,GAAa,IAAI,SAAA,CAAA,SAAJ,CAAc,GAAG,CAAC,KAAlB,CAAb;AACA,SAAK,KAAL,GAAa,IAAI,SAAA,CAAA,SAAJ,CAAc,GAAG,CAAC,KAAlB,CAAb;AACD;;AAEM,eAAa,QAAb,CACL,UADK,EAEL,cAFK,EAEoB;;;AAEzB,QAAI,WAAW,GAAG,MAAM,UAAU,CAAC,cAAX,CACtB,cADsB,EAEtB,WAFsB,CAAxB;;AAIA,QAAI,CAAC,WAAL,EAAkB;AAChB,YAAM,IAAI,KAAJ,CAAU,+BAAV,CAAN;AACD;;AAED,QAAI,GAAG,GAAsB,OAAA,CAAA,oBAAA,CAC3B,KAAK,MADsB,EAE3B,iBAF2B,EAG3B,WAAW,CAAC,IAHe,CAA7B;AAMA,IAAA,GAAG,CAAC,IAAJ,GAAW,CAAA,EAAA,GAAA,WAAW,CAAC,IAAZ,MAAgB,IAAhB,IAAgB,EAAA,KAAA,KAAA,CAAhB,GAAgB,KAAA,CAAhB,GAAgB,EAAA,CAAE,KAAF,CAAQ,KAAK,UAAb,CAA3B;AAEA,WAAO,GAAP;AACD;;AAnD2B;;AAA9B,OAAA,CAAA,iBAAA,GAAA,iBAAA;AACS,iBAAA,CAAA,UAAA,GAAa,EAAb;AAMA,iBAAA,CAAA,MAAA,GAAiB,IAAI,GAAJ,CAAQ,CAC9B,CACE,iBADF,EAEE;AACE,EAAA,IAAI,EAAE,QADR;AAEE,EAAA,MAAM,EAAE,CACN,CAAC,YAAD,EAAe,CAAC,EAAD,CAAf,CADM,EAEN,CAAC,OAAD,EAAU,CAAC,EAAD,CAAV,CAFM,EAGN,CAAC,OAAD,EAAU,CAAC,EAAD,CAAV,CAHM;AAFV,CAFF,CAD8B,CAAR,CAAjB","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NameRegistryState = void 0;\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst borsh_1 = require(\"borsh\");\nclass NameRegistryState {\n    constructor(obj) {\n        this.parentName = new web3_js_1.PublicKey(obj.parentName);\n        this.owner = new web3_js_1.PublicKey(obj.owner);\n        this.class = new web3_js_1.PublicKey(obj.class);\n    }\n    static async retrieve(connection, nameAccountKey) {\n        var _a;\n        let nameAccount = await connection.getAccountInfo(nameAccountKey, 'processed');\n        if (!nameAccount) {\n            throw new Error('Invalid name account provided');\n        }\n        let res = borsh_1.deserializeUnchecked(this.schema, NameRegistryState, nameAccount.data);\n        res.data = (_a = nameAccount.data) === null || _a === void 0 ? void 0 : _a.slice(this.HEADER_LEN);\n        return res;\n    }\n}\nexports.NameRegistryState = NameRegistryState;\nNameRegistryState.HEADER_LEN = 96;\nNameRegistryState.schema = new Map([\n    [\n        NameRegistryState,\n        {\n            kind: 'struct',\n            fields: [\n                ['parentName', [32]],\n                ['owner', [32]],\n                ['class', [32]],\n            ],\n        },\n    ],\n]);\n//# sourceMappingURL=state.js.map"]},"metadata":{},"sourceType":"script"}