{"ast":null,"code":"import _regeneratorRuntime from \"/Users/jalcantara/Desktop/SOL-dev/tanda-wallet-sol/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jalcantara/Desktop/SOL-dev/tanda-wallet-sol/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/jalcantara/Desktop/SOL-dev/tanda-wallet-sol/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jalcantara/Desktop/SOL-dev/tanda-wallet-sol/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { sha256 } from \"js-sha256\";\nimport { IdlCoder } from \"./idl\";\nexport var StateCoder = /*#__PURE__*/function () {\n  function StateCoder(idl) {\n    _classCallCheck(this, StateCoder);\n\n    if (idl.state === undefined) {\n      throw new Error(\"Idl state not defined.\");\n    }\n\n    this.layout = IdlCoder.typeDefLayout(idl.state.struct, idl.types);\n  }\n\n  _createClass(StateCoder, [{\n    key: \"encode\",\n    value: function () {\n      var _encode = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(name, account) {\n        var buffer, len, disc, accData;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                buffer = Buffer.alloc(1000); // TODO: use a tighter buffer.\n\n                len = this.layout.encode(account, buffer);\n                _context.next = 4;\n                return stateDiscriminator(name);\n\n              case 4:\n                disc = _context.sent;\n                accData = buffer.slice(0, len);\n                return _context.abrupt(\"return\", Buffer.concat([disc, accData]));\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function encode(_x, _x2) {\n        return _encode.apply(this, arguments);\n      }\n\n      return encode;\n    }()\n  }, {\n    key: \"decode\",\n    value: function decode(ix) {\n      // Chop off discriminator.\n      var data = ix.slice(8);\n      return this.layout.decode(data);\n    }\n  }]);\n\n  return StateCoder;\n}(); // Calculates unique 8 byte discriminator prepended to all anchor state accounts.\n\nexport function stateDiscriminator(_x3) {\n  return _stateDiscriminator.apply(this, arguments);\n}\n\nfunction _stateDiscriminator() {\n  _stateDiscriminator = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(name) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", Buffer.from(sha256.digest(\"state:\".concat(name))).slice(0, 8));\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _stateDiscriminator.apply(this, arguments);\n}","map":{"version":3,"sources":["../../../src/coder/state.ts"],"names":[],"mappings":";;;;AACA,SAAS,MAAT,QAAuB,WAAvB;AAEA,SAAS,QAAT,QAAyB,OAAzB;AAEA,WAAa,UAAb;AAGE,sBAAmB,GAAnB,EAA2B;AAAA;;AACzB,QAAI,GAAG,CAAC,KAAJ,KAAc,SAAlB,EAA6B;AAC3B,YAAM,IAAI,KAAJ,CAAU,wBAAV,CAAN;AACD;;AACD,SAAK,MAAL,GAAc,QAAQ,CAAC,aAAT,CAAuB,GAAG,CAAC,KAAJ,CAAU,MAAjC,EAAyC,GAAG,CAAC,KAA7C,CAAd;AACD;;AARH;AAAA;AAAA;AAAA,8FAU+B,IAV/B,EAU6C,OAV7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAWU,gBAAA,MAXV,GAWmB,MAAM,CAAC,KAAP,CAAa,IAAb,CAXnB,EAWuC;;AAC7B,gBAAA,GAZV,GAYgB,KAAK,MAAL,CAAY,MAAZ,CAAmB,OAAnB,EAA4B,MAA5B,CAZhB;AAAA;AAAA,uBAcuB,kBAAkB,CAAC,IAAD,CAdzC;;AAAA;AAcU,gBAAA,IAdV;AAeU,gBAAA,OAfV,GAeoB,MAAM,CAAC,KAAP,CAAa,CAAb,EAAgB,GAAhB,CAfpB;AAAA,iDAiBW,MAAM,CAAC,MAAP,CAAc,CAAC,IAAD,EAAO,OAAP,CAAd,CAjBX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,2BAoByB,EApBzB,EAoBmC;AAC/B;AACA,UAAM,IAAI,GAAG,EAAE,CAAC,KAAH,CAAS,CAAT,CAAb;AACA,aAAO,KAAK,MAAL,CAAY,MAAZ,CAAmB,IAAnB,CAAP;AACD;AAxBH;;AAAA;AAAA,I,CA2BA;;AACA,gBAAsB,kBAAtB;AAAA;AAAA;;;iFAAO,kBAAkC,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,8CACE,MAAM,CAAC,IAAP,CAAY,MAAM,CAAC,MAAP,iBAAuB,IAAvB,EAAZ,EAA4C,KAA5C,CAAkD,CAAlD,EAAqD,CAArD,CADF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourceRoot":"","sourcesContent":["import { sha256 } from \"js-sha256\";\nimport { IdlCoder } from \"./idl\";\nexport class StateCoder {\n    constructor(idl) {\n        if (idl.state === undefined) {\n            throw new Error(\"Idl state not defined.\");\n        }\n        this.layout = IdlCoder.typeDefLayout(idl.state.struct, idl.types);\n    }\n    async encode(name, account) {\n        const buffer = Buffer.alloc(1000); // TODO: use a tighter buffer.\n        const len = this.layout.encode(account, buffer);\n        const disc = await stateDiscriminator(name);\n        const accData = buffer.slice(0, len);\n        return Buffer.concat([disc, accData]);\n    }\n    decode(ix) {\n        // Chop off discriminator.\n        const data = ix.slice(8);\n        return this.layout.decode(data);\n    }\n}\n// Calculates unique 8 byte discriminator prepended to all anchor state accounts.\nexport async function stateDiscriminator(name) {\n    return Buffer.from(sha256.digest(`state:${name}`)).slice(0, 8);\n}\n//# sourceMappingURL=state.js.map"]},"metadata":{},"sourceType":"module"}