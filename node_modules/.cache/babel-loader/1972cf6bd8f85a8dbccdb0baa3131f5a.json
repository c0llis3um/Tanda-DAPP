{"ast":null,"code":"import _regeneratorRuntime from\"/Users/jalcantara/Desktop/SOL-dev/Tanda-DAPP/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/jalcantara/Desktop/SOL-dev/Tanda-DAPP/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{PublicKey}from'@solana/web3.js';import{DERIVATION_PATH}from'./localStorage';var bs58=require('bs58');var INS_GET_PUBKEY=0x05;var INS_SIGN_MESSAGE=0x06;var P1_NON_CONFIRM=0x00;var P1_CONFIRM=0x01;var P2_EXTEND=0x01;var P2_MORE=0x02;var MAX_PAYLOAD=255;var LEDGER_CLA=0xe0;/*\n * Helper for chunked send of large payloads\n */function solana_send(_x,_x2,_x3,_x4){return _solana_send.apply(this,arguments);}function _solana_send(){_solana_send=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(transport,instruction,p1,payload){var p2,payload_offset,_buf,_reply,buf,reply;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:p2=0;payload_offset=0;if(!(payload.length>MAX_PAYLOAD)){_context.next=15;break;}case 3:if(!(payload.length-payload_offset>MAX_PAYLOAD)){_context.next=15;break;}_buf=payload.slice(payload_offset,payload_offset+MAX_PAYLOAD);payload_offset+=MAX_PAYLOAD;console.log('send',(p2|P2_MORE).toString(16),_buf.length.toString(16),_buf);_context.next=9;return transport.send(LEDGER_CLA,instruction,p1,p2|P2_MORE,_buf);case 9:_reply=_context.sent;if(!(_reply.length!==2)){_context.next=12;break;}throw new Error('solana_send: Received unexpected reply payload','UnexpectedReplyPayload');case 12:p2|=P2_EXTEND;_context.next=3;break;case 15:buf=payload.slice(payload_offset);console.log('send',p2.toString(16),buf.length.toString(16),buf);_context.next=19;return transport.send(LEDGER_CLA,instruction,p1,p2,buf);case 19:reply=_context.sent;return _context.abrupt(\"return\",reply.slice(0,reply.length-2));case 21:case\"end\":return _context.stop();}}},_callee);}));return _solana_send.apply(this,arguments);}var BIP32_HARDENED_BIT=1<<31>>>0;function _harden(n){return(n|BIP32_HARDENED_BIT)>>>0;}export function solana_derivation_path(account,change,derivationPath){var useAccount=account?account:0;var useChange=change?change:0;derivationPath=derivationPath?derivationPath:DERIVATION_PATH.bip44Change;if(derivationPath===DERIVATION_PATH.bip44Root){var length=2;var derivation_path=Buffer.alloc(1+length*4);var offset=0;offset=derivation_path.writeUInt8(length,offset);offset=derivation_path.writeUInt32BE(_harden(44),offset);// Using BIP44\nderivation_path.writeUInt32BE(_harden(501),offset);// Solana's BIP44 path\nreturn derivation_path;}else if(derivationPath===DERIVATION_PATH.bip44){var _length=3;var _derivation_path=Buffer.alloc(1+_length*4);var _offset=0;_offset=_derivation_path.writeUInt8(_length,_offset);_offset=_derivation_path.writeUInt32BE(_harden(44),_offset);// Using BIP44\n_offset=_derivation_path.writeUInt32BE(_harden(501),_offset);// Solana's BIP44 path\n_derivation_path.writeUInt32BE(_harden(useAccount),_offset);return _derivation_path;}else if(derivationPath===DERIVATION_PATH.bip44Change){var _length2=4;var _derivation_path2=Buffer.alloc(1+_length2*4);var _offset2=0;_offset2=_derivation_path2.writeUInt8(_length2,_offset2);_offset2=_derivation_path2.writeUInt32BE(_harden(44),_offset2);// Using BIP44\n_offset2=_derivation_path2.writeUInt32BE(_harden(501),_offset2);// Solana's BIP44 path\n_offset2=_derivation_path2.writeUInt32BE(_harden(useAccount),_offset2);_derivation_path2.writeUInt32BE(_harden(useChange),_offset2);return _derivation_path2;}else{throw new Error('Invalid derivation path');}}function solana_ledger_get_pubkey(_x5,_x6){return _solana_ledger_get_pubkey.apply(this,arguments);}function _solana_ledger_get_pubkey(){_solana_ledger_get_pubkey=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(transport,derivation_path){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:return _context2.abrupt(\"return\",solana_send(transport,INS_GET_PUBKEY,P1_NON_CONFIRM,derivation_path));case 1:case\"end\":return _context2.stop();}}},_callee2);}));return _solana_ledger_get_pubkey.apply(this,arguments);}export function solana_ledger_sign_transaction(_x7,_x8,_x9){return _solana_ledger_sign_transaction.apply(this,arguments);}function _solana_ledger_sign_transaction(){_solana_ledger_sign_transaction=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(transport,derivation_path,transaction){var msg_bytes;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:msg_bytes=transaction.serializeMessage();return _context3.abrupt(\"return\",solana_ledger_sign_bytes(transport,derivation_path,msg_bytes));case 2:case\"end\":return _context3.stop();}}},_callee3);}));return _solana_ledger_sign_transaction.apply(this,arguments);}export function solana_ledger_sign_bytes(_x10,_x11,_x12){return _solana_ledger_sign_bytes.apply(this,arguments);}function _solana_ledger_sign_bytes(){_solana_ledger_sign_bytes=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(transport,derivation_path,msg_bytes){var num_paths,payload;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:num_paths=Buffer.alloc(1);num_paths.writeUInt8(1);payload=Buffer.concat([num_paths,derivation_path,msg_bytes]);return _context4.abrupt(\"return\",solana_send(transport,INS_SIGN_MESSAGE,P1_CONFIRM,payload));case 4:case\"end\":return _context4.stop();}}},_callee4);}));return _solana_ledger_sign_bytes.apply(this,arguments);}export function getPublicKey(_x13,_x14){return _getPublicKey.apply(this,arguments);}function _getPublicKey(){_getPublicKey=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(transport,path){var from_derivation_path,from_pubkey_bytes,from_pubkey_string;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:if(path){from_derivation_path=path;}else{from_derivation_path=solana_derivation_path();}_context5.next=3;return solana_ledger_get_pubkey(transport,from_derivation_path);case 3:from_pubkey_bytes=_context5.sent;from_pubkey_string=bs58.encode(from_pubkey_bytes);return _context5.abrupt(\"return\",new PublicKey(from_pubkey_string));case 6:case\"end\":return _context5.stop();}}},_callee5);}));return _getPublicKey.apply(this,arguments);}export function solana_ledger_confirm_public_key(_x15,_x16){return _solana_ledger_confirm_public_key.apply(this,arguments);}function _solana_ledger_confirm_public_key(){_solana_ledger_confirm_public_key=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(transport,derivation_path){return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.next=2;return solana_send(transport,INS_GET_PUBKEY,P1_CONFIRM,derivation_path);case 2:return _context6.abrupt(\"return\",_context6.sent);case 3:case\"end\":return _context6.stop();}}},_callee6);}));return _solana_ledger_confirm_public_key.apply(this,arguments);}","map":{"version":3,"sources":["/Users/jalcantara/Desktop/SOL-dev/Tanda-DAPP/src/utils/walletProvider/ledger-core.js"],"names":["PublicKey","DERIVATION_PATH","bs58","require","INS_GET_PUBKEY","INS_SIGN_MESSAGE","P1_NON_CONFIRM","P1_CONFIRM","P2_EXTEND","P2_MORE","MAX_PAYLOAD","LEDGER_CLA","solana_send","transport","instruction","p1","payload","p2","payload_offset","length","buf","slice","console","log","toString","send","reply","Error","BIP32_HARDENED_BIT","_harden","n","solana_derivation_path","account","change","derivationPath","useAccount","useChange","bip44Change","bip44Root","derivation_path","Buffer","alloc","offset","writeUInt8","writeUInt32BE","bip44","solana_ledger_get_pubkey","solana_ledger_sign_transaction","transaction","msg_bytes","serializeMessage","solana_ledger_sign_bytes","num_paths","concat","getPublicKey","path","from_derivation_path","from_pubkey_bytes","from_pubkey_string","encode","solana_ledger_confirm_public_key"],"mappings":"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","sourcesContent":["import { PublicKey } from '@solana/web3.js';\nimport { DERIVATION_PATH } from './localStorage';\nconst bs58 = require('bs58');\n\nconst INS_GET_PUBKEY = 0x05;\nconst INS_SIGN_MESSAGE = 0x06;\n\nconst P1_NON_CONFIRM = 0x00;\nconst P1_CONFIRM = 0x01;\n\nconst P2_EXTEND = 0x01;\nconst P2_MORE = 0x02;\n\nconst MAX_PAYLOAD = 255;\n\nconst LEDGER_CLA = 0xe0;\n\n/*\n * Helper for chunked send of large payloads\n */\nasync function solana_send(transport, instruction, p1, payload) {\n  var p2 = 0;\n  var payload_offset = 0;\n\n  if (payload.length > MAX_PAYLOAD) {\n    while (payload.length - payload_offset > MAX_PAYLOAD) {\n      const buf = payload.slice(payload_offset, payload_offset + MAX_PAYLOAD);\n      payload_offset += MAX_PAYLOAD;\n      console.log(\n        'send',\n        (p2 | P2_MORE).toString(16),\n        buf.length.toString(16),\n        buf,\n      );\n      const reply = await transport.send(\n        LEDGER_CLA,\n        instruction,\n        p1,\n        p2 | P2_MORE,\n        buf,\n      );\n      if (reply.length !== 2) {\n        throw new Error(\n          'solana_send: Received unexpected reply payload',\n          'UnexpectedReplyPayload',\n        );\n      }\n      p2 |= P2_EXTEND;\n    }\n  }\n\n  const buf = payload.slice(payload_offset);\n  console.log('send', p2.toString(16), buf.length.toString(16), buf);\n  const reply = await transport.send(LEDGER_CLA, instruction, p1, p2, buf);\n\n  return reply.slice(0, reply.length - 2);\n}\n\nconst BIP32_HARDENED_BIT = (1 << 31) >>> 0;\nfunction _harden(n) {\n  return (n | BIP32_HARDENED_BIT) >>> 0;\n}\n\nexport function solana_derivation_path(account, change, derivationPath) {\n  let useAccount = account ? account : 0;\n  let useChange = change ? change : 0;\n  derivationPath = derivationPath\n    ? derivationPath\n    : DERIVATION_PATH.bip44Change;\n\n  if (derivationPath === DERIVATION_PATH.bip44Root) {\n    const length = 2;\n    const derivation_path = Buffer.alloc(1 + length * 4);\n    let offset = 0;\n    offset = derivation_path.writeUInt8(length, offset);\n    offset = derivation_path.writeUInt32BE(_harden(44), offset); // Using BIP44\n    derivation_path.writeUInt32BE(_harden(501), offset); // Solana's BIP44 path\n    return derivation_path;\n  } else if (derivationPath === DERIVATION_PATH.bip44) {\n    const length = 3;\n    const derivation_path = Buffer.alloc(1 + length * 4);\n    let offset = 0;\n    offset = derivation_path.writeUInt8(length, offset);\n    offset = derivation_path.writeUInt32BE(_harden(44), offset); // Using BIP44\n    offset = derivation_path.writeUInt32BE(_harden(501), offset); // Solana's BIP44 path\n    derivation_path.writeUInt32BE(_harden(useAccount), offset);\n    return derivation_path;\n  } else if (derivationPath === DERIVATION_PATH.bip44Change) {\n    const length = 4;\n    const derivation_path = Buffer.alloc(1 + length * 4);\n    let offset = 0;\n    offset = derivation_path.writeUInt8(length, offset);\n    offset = derivation_path.writeUInt32BE(_harden(44), offset); // Using BIP44\n    offset = derivation_path.writeUInt32BE(_harden(501), offset); // Solana's BIP44 path\n    offset = derivation_path.writeUInt32BE(_harden(useAccount), offset);\n    derivation_path.writeUInt32BE(_harden(useChange), offset);\n    return derivation_path;\n  } else {\n    throw new Error('Invalid derivation path');\n  }\n}\n\nasync function solana_ledger_get_pubkey(transport, derivation_path) {\n  return solana_send(\n    transport,\n    INS_GET_PUBKEY,\n    P1_NON_CONFIRM,\n    derivation_path,\n  );\n}\n\nexport async function solana_ledger_sign_transaction(\n  transport,\n  derivation_path,\n  transaction,\n) {\n  const msg_bytes = transaction.serializeMessage();\n  return solana_ledger_sign_bytes(transport, derivation_path, msg_bytes);\n}\n\nexport async function solana_ledger_sign_bytes(\n  transport,\n  derivation_path,\n  msg_bytes,\n) {\n  var num_paths = Buffer.alloc(1);\n  num_paths.writeUInt8(1);\n  const payload = Buffer.concat([num_paths, derivation_path, msg_bytes]);\n\n  return solana_send(transport, INS_SIGN_MESSAGE, P1_CONFIRM, payload);\n}\n\nexport async function getPublicKey(transport, path) {\n  let from_derivation_path;\n  if (path) {\n    from_derivation_path = path;\n  } else {\n    from_derivation_path = solana_derivation_path();\n  }\n  const from_pubkey_bytes = await solana_ledger_get_pubkey(\n    transport,\n    from_derivation_path,\n  );\n  const from_pubkey_string = bs58.encode(from_pubkey_bytes);\n\n  return new PublicKey(from_pubkey_string);\n}\n\nexport async function solana_ledger_confirm_public_key(\n  transport,\n  derivation_path,\n) {\n  return await solana_send(\n    transport,\n    INS_GET_PUBKEY,\n    P1_CONFIRM,\n    derivation_path,\n  );\n}\n"]},"metadata":{},"sourceType":"module"}