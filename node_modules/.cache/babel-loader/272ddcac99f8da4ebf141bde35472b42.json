{"ast":null,"code":"import{Fragment as _Fragment}from\"react/jsx-runtime\";import _slicedToArray from\"/Users/jalcantara/Desktop/SOL-dev/Tanda-DAPP/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useRef}from'react';import{TextField}from'@material-ui/core';import CopyIcon from'mdi-material-ui/ContentCopy';import{makeStyles}from'@material-ui/core/styles';import{useSnackbar}from'notistack';import QrcodeIcon from'mdi-material-ui/Qrcode';import QRCode from'qrcode.react';import DialogContent from'@material-ui/core/DialogContent';import IconButton from'@material-ui/core/IconButton';import Dialog from'@material-ui/core/Dialog';var useStyles=makeStyles(function(theme){return{root:{display:'flex',marginTop:theme.spacing(1),marginBottom:theme.spacing(1),alignItems:'baseline'}};});export default function CopyableDisplay(_ref){var value=_ref.value,label=_ref.label,autoFocus=_ref.autoFocus,qrCode=_ref.qrCode,helperText=_ref.helperText;var _useSnackbar=useSnackbar(),enqueueSnackbar=_useSnackbar.enqueueSnackbar;var textareaRef=useRef();var classes=useStyles();var copyLink=function copyLink(){var textArea=textareaRef.current;if(textArea){textArea.select();document.execCommand('copy');enqueueSnackbar(\"Copied \".concat(label),{variant:'info',autoHideDuration:2500});}};return/*#__PURE__*/_jsxs(\"div\",{className:classes.root,children:[/*#__PURE__*/_jsx(TextField,{inputRef:function inputRef(ref){return textareaRef.current=ref;},multiline:true,autoFocus:autoFocus,value:value,readOnly:true,onFocus:function onFocus(e){return e.currentTarget.select();},className:classes.textArea,fullWidth:true,helperText:helperText,label:label,spellCheck:false}),/*#__PURE__*/_jsx(IconButton,{onClick:copyLink,children:/*#__PURE__*/_jsx(CopyIcon,{})}),qrCode?/*#__PURE__*/_jsx(Qrcode,{value:qrCode===true?value:qrCode}):null]});}var useQrCodeStyles=makeStyles(function(theme){return{qrcodeContainer:{display:'flex',flexDirection:'column',alignItems:'center',marginBottom:theme.spacing(2)}};});function Qrcode(_ref2){var value=_ref2.value;var _React$useState=React.useState(false),_React$useState2=_slicedToArray(_React$useState,2),showQrcode=_React$useState2[0],setShowQrcode=_React$useState2[1];var classes=useQrCodeStyles();return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(IconButton,{onClick:function onClick(){return setShowQrcode(true);},children:/*#__PURE__*/_jsx(QrcodeIcon,{})}),/*#__PURE__*/_jsx(Dialog,{open:showQrcode,onClose:function onClose(){return setShowQrcode(false);},children:/*#__PURE__*/_jsx(DialogContent,{className:classes.qrcodeContainer,children:/*#__PURE__*/_jsx(QRCode,{value:value,size:256,includeMargin:true})})})]});}","map":{"version":3,"sources":["/Users/jalcantara/Desktop/SOL-dev/Tanda-DAPP/src/components/CopyableDisplay.js"],"names":["React","useRef","TextField","CopyIcon","makeStyles","useSnackbar","QrcodeIcon","QRCode","DialogContent","IconButton","Dialog","useStyles","theme","root","display","marginTop","spacing","marginBottom","alignItems","CopyableDisplay","value","label","autoFocus","qrCode","helperText","enqueueSnackbar","textareaRef","classes","copyLink","textArea","current","select","document","execCommand","variant","autoHideDuration","ref","e","currentTarget","useQrCodeStyles","qrcodeContainer","flexDirection","Qrcode","useState","showQrcode","setShowQrcode"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\nimport { TextField } from '@material-ui/core';\nimport CopyIcon from 'mdi-material-ui/ContentCopy';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useSnackbar } from 'notistack';\nimport QrcodeIcon from 'mdi-material-ui/Qrcode';\nimport QRCode from 'qrcode.react';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    alignItems: 'baseline',\n  },\n}));\n\nexport default function CopyableDisplay({\n  value,\n  label,\n  autoFocus,\n  qrCode,\n  helperText,\n}) {\n  const { enqueueSnackbar } = useSnackbar();\n  const textareaRef = useRef();\n  const classes = useStyles();\n  const copyLink = () => {\n    let textArea = textareaRef.current;\n    if (textArea) {\n      textArea.select();\n      document.execCommand('copy');\n      enqueueSnackbar(`Copied ${label}`, {\n        variant: 'info',\n        autoHideDuration: 2500,\n      });\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <TextField\n        inputRef={(ref) => (textareaRef.current = ref)}\n        multiline\n        autoFocus={autoFocus}\n        value={value}\n        readOnly\n        onFocus={(e) => e.currentTarget.select()}\n        className={classes.textArea}\n        fullWidth\n        helperText={helperText}\n        label={label}\n        spellCheck={false}\n      />\n      <IconButton onClick={copyLink}>\n        <CopyIcon />\n      </IconButton>\n      {qrCode ? <Qrcode value={qrCode === true ? value : qrCode} /> : null}\n    </div>\n  );\n}\n\nconst useQrCodeStyles = makeStyles((theme) => ({\n  qrcodeContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nfunction Qrcode({ value }) {\n  const [showQrcode, setShowQrcode] = React.useState(false);\n  const classes = useQrCodeStyles();\n\n  return (\n    <>\n      <IconButton onClick={() => setShowQrcode(true)}>\n        <QrcodeIcon />\n      </IconButton>\n      <Dialog open={showQrcode} onClose={() => setShowQrcode(false)}>\n        <DialogContent className={classes.qrcodeContainer}>\n          <QRCode value={value} size={256} includeMargin />\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}