{"ast":null,"code":"import _regeneratorRuntime from\"/Users/jalcantara/Desktop/SOL-dev/tanda-wallet-sol/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/jalcantara/Desktop/SOL-dev/tanda-wallet-sol/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"/Users/jalcantara/Desktop/SOL-dev/tanda-wallet-sol/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import Typography from'@material-ui/core/Typography';import DialogActions from'@material-ui/core/DialogActions';import Button from'@material-ui/core/Button';import DialogTitle from'@material-ui/core/DialogTitle';import DialogContent from'@material-ui/core/DialogContent';import Card from'@material-ui/core/Card';import DialogForm from'./DialogForm';import{LedgerWalletProvider}from'../utils/walletProvider/ledger';import{AccountsSelector,DerivationPathMenuItem,toDerivationPath}from'../pages/LoginPage.js';import CircularProgress from'@material-ui/core/CircularProgress';import{useSnackbar}from'notistack';var AddHardwareView={Splash:0,Accounts:1,Confirm:2};export default function AddHardwareWalletDialog(_ref){var open=_ref.open,onAdd=_ref.onAdd,onClose=_ref.onClose;var _useState=useState(AddHardwareView.Splash),_useState2=_slicedToArray(_useState,2),view=_useState2[0],setView=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),hardwareAccount=_useState4[0],setHardwareAccount=_useState4[1];return/*#__PURE__*/_jsx(DialogForm,{onClose:onClose,open:open,onEnter:function onEnter(){},fullWidth:true,children:view===AddHardwareView.Splash?/*#__PURE__*/_jsx(AddHardwareWalletSplash,{onClose:onClose,onContinue:function onContinue(){return setView(AddHardwareView.Accounts);}}):view===AddHardwareView.Accounts?/*#__PURE__*/_jsx(LedgerAccounts,{onContinue:function onContinue(account){setHardwareAccount(account);setView(AddHardwareView.Confirm);},open:open,onClose:onClose}):/*#__PURE__*/_jsx(ConfirmHardwareWallet,{account:hardwareAccount,onDone:function onDone(){onAdd(hardwareAccount);onClose();setView(AddHardwareView.Splash);},onBack:function onBack(){setView(AddHardwareView.Accounts);}})});}function ConfirmHardwareWallet(_ref2){var account=_ref2.account,onDone=_ref2.onDone,onBack=_ref2.onBack;var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),didConfirm=_useState6[0],setDidConfirm=_useState6[1];useEffect(function(){if(!didConfirm){account.provider.confirmPublicKey().then(function(){return setDidConfirm(true);}).catch(function(err){console.error('Error confirming',err);onBack();});}});return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Confirm your wallet address\"}),/*#__PURE__*/_jsx(DialogContent,{style:{paddingTop:16},children:/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'column'},children:[/*#__PURE__*/_jsx(Typography,{fontWeight:\"fontWeightBold\",children:\"Check your ledger and confirm the address displayed is the address chosen. Then click \\\"done\\\".\"}),/*#__PURE__*/_jsx(Typography,{children:account.publicKey.toString()})]})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{color:\"primary\",onClick:onBack,children:\"Back\"}),/*#__PURE__*/_jsx(Button,{color:\"primary\",onClick:onDone,disabled:!didConfirm,children:\"Done\"})]})]});}function AddHardwareWalletSplash(_ref3){var onContinue=_ref3.onContinue,onClose=_ref3.onClose;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Add hardware wallet\"}),/*#__PURE__*/_jsx(DialogContent,{style:{paddingTop:16},children:/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',flexDirection:'column'},children:/*#__PURE__*/_jsx(\"b\",{children:\"Connect your ledger and open the Solana application. When you are ready, click \\\"continue\\\".\"})})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{color:\"primary\",onClick:onClose,children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{color:\"primary\",onClick:onContinue,children:\"Continue\"})]})]});}function LedgerAccounts(_ref4){var onContinue=_ref4.onContinue,onClose=_ref4.onClose,open=_ref4.open;var _useState7=useState(DerivationPathMenuItem.Bip44Root),_useState8=_slicedToArray(_useState7,2),dPathMenuItem=_useState8[0],setDPathMenuItem=_useState8[1];var _useSnackbar=useSnackbar(),enqueueSnackbar=_useSnackbar.enqueueSnackbar;var _useState9=useState(null),_useState10=_slicedToArray(_useState9,2),accounts=_useState10[0],setAccounts=_useState10[1];var onClick=function onClick(provider){onContinue({provider:provider,publicKey:provider.pubKey,derivationPath:provider.derivationPath,account:provider.account,change:provider.change});};useEffect(function(){if(open){var fetch=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var accounts,provider,k,_provider;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:accounts=[];if(!(dPathMenuItem===DerivationPathMenuItem.Bip44Root)){_context.next=10;break;}provider=new LedgerWalletProvider({derivationPath:toDerivationPath(dPathMenuItem)});_context.t0=accounts;_context.next=6;return provider.init();case 6:_context.t1=_context.sent;_context.t0.push.call(_context.t0,_context.t1);_context.next=22;break;case 10:setAccounts(null);// Loading in parallel makes the ledger upset. So do it serially.\nk=0;case 12:if(!(k<10)){_context.next=22;break;}_provider=new LedgerWalletProvider({derivationPath:toDerivationPath(dPathMenuItem),account:k});_context.t2=accounts;_context.next=17;return _provider.init();case 17:_context.t3=_context.sent;_context.t2.push.call(_context.t2,_context.t3);case 19:k+=1;_context.next=12;break;case 22:setAccounts(accounts);case 23:case\"end\":return _context.stop();}}},_callee);}));return function fetch(){return _ref5.apply(this,arguments);};}();fetch().catch(function(err){console.log(\"received error when attempting to connect ledger: \".concat(err));if(err&&err.statusCode===0x6804){enqueueSnackbar('Unlock ledger device',{variant:'error'});}onClose();});}},[dPathMenuItem,enqueueSnackbar,open,onClose]);return/*#__PURE__*/_jsx(Card,{elevation:0,children:accounts===null?/*#__PURE__*/_jsxs(\"div\",{style:{padding:'24px'},children:[/*#__PURE__*/_jsx(Typography,{align:\"center\",children:\"Loading accounts from your hardware wallet\"}),/*#__PURE__*/_jsx(CircularProgress,{style:{display:'block',marginLeft:'auto',marginRight:'auto'}})]}):/*#__PURE__*/_jsx(AccountsSelector,{showRoot:true,onClick:onClick,accounts:accounts,setDPathMenuItem:setDPathMenuItem,dPathMenuItem:dPathMenuItem})});}","map":{"version":3,"sources":["/Users/jalcantara/Desktop/SOL-dev/tanda-wallet-sol/src/components/AddHarwareWalletDialog.js"],"names":["React","useEffect","useState","Typography","DialogActions","Button","DialogTitle","DialogContent","Card","DialogForm","LedgerWalletProvider","AccountsSelector","DerivationPathMenuItem","toDerivationPath","CircularProgress","useSnackbar","AddHardwareView","Splash","Accounts","Confirm","AddHardwareWalletDialog","open","onAdd","onClose","view","setView","hardwareAccount","setHardwareAccount","account","ConfirmHardwareWallet","onDone","onBack","didConfirm","setDidConfirm","provider","confirmPublicKey","then","catch","err","console","error","paddingTop","display","flexDirection","publicKey","toString","AddHardwareWalletSplash","onContinue","LedgerAccounts","Bip44Root","dPathMenuItem","setDPathMenuItem","enqueueSnackbar","accounts","setAccounts","onClick","pubKey","derivationPath","change","fetch","init","push","k","log","statusCode","variant","padding","marginLeft","marginRight"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Card from '@material-ui/core/Card';\nimport DialogForm from './DialogForm';\nimport { LedgerWalletProvider } from '../utils/walletProvider/ledger';\nimport {\n  AccountsSelector,\n  DerivationPathMenuItem,\n  toDerivationPath,\n} from '../pages/LoginPage.js';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { useSnackbar } from 'notistack';\n\nconst AddHardwareView = {\n  Splash: 0,\n  Accounts: 1,\n  Confirm: 2,\n};\n\nexport default function AddHardwareWalletDialog({ open, onAdd, onClose }) {\n  const [view, setView] = useState(AddHardwareView.Splash);\n  const [hardwareAccount, setHardwareAccount] = useState(null);\n  return (\n    <DialogForm onClose={onClose} open={open} onEnter={() => {}} fullWidth>\n      {view === AddHardwareView.Splash ? (\n        <AddHardwareWalletSplash\n          onClose={onClose}\n          onContinue={() => setView(AddHardwareView.Accounts)}\n        />\n      ) : view === AddHardwareView.Accounts ? (\n        <LedgerAccounts\n          onContinue={(account) => {\n            setHardwareAccount(account);\n            setView(AddHardwareView.Confirm);\n          }}\n          open={open}\n          onClose={onClose}\n        />\n      ) : (\n        <ConfirmHardwareWallet\n          account={hardwareAccount}\n          onDone={() => {\n            onAdd(hardwareAccount);\n            onClose();\n            setView(AddHardwareView.Splash);\n          }}\n          onBack={() => {\n            setView(AddHardwareView.Accounts);\n          }}\n        />\n      )}\n    </DialogForm>\n  );\n}\n\nfunction ConfirmHardwareWallet({ account, onDone, onBack }) {\n  const [didConfirm, setDidConfirm] = useState(false);\n  useEffect(() => {\n    if (!didConfirm) {\n      account.provider\n        .confirmPublicKey()\n        .then(() => setDidConfirm(true))\n        .catch((err) => {\n          console.error('Error confirming', err);\n          onBack();\n        });\n    }\n  });\n  return (\n    <>\n      <DialogTitle>Confirm your wallet address</DialogTitle>\n      <DialogContent style={{ paddingTop: 16 }}>\n        <div style={{ display: 'flex', flexDirection: 'column' }}>\n          <Typography fontWeight=\"fontWeightBold\">\n            Check your ledger and confirm the address displayed is the address\n            chosen. Then click \"done\".\n          </Typography>\n          <Typography>{account.publicKey.toString()}</Typography>\n        </div>\n      </DialogContent>\n      <DialogActions>\n        <Button color=\"primary\" onClick={onBack}>\n          Back\n        </Button>\n        <Button color=\"primary\" onClick={onDone} disabled={!didConfirm}>\n          Done\n        </Button>\n      </DialogActions>\n    </>\n  );\n}\n\nfunction AddHardwareWalletSplash({ onContinue, onClose }) {\n  return (\n    <>\n      <DialogTitle>Add hardware wallet</DialogTitle>\n      <DialogContent style={{ paddingTop: 16 }}>\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n          }}\n        >\n          <b>\n            Connect your ledger and open the Solana application. When you are\n            ready, click \"continue\".\n          </b>\n        </div>\n      </DialogContent>\n      <DialogActions>\n        <Button color=\"primary\" onClick={onClose}>\n          Cancel\n        </Button>\n        <Button color=\"primary\" onClick={onContinue}>\n          Continue\n        </Button>\n      </DialogActions>\n    </>\n  );\n}\n\nfunction LedgerAccounts({ onContinue, onClose, open }) {\n  const [dPathMenuItem, setDPathMenuItem] = useState(\n    DerivationPathMenuItem.Bip44Root,\n  );\n  const { enqueueSnackbar } = useSnackbar();\n  const [accounts, setAccounts] = useState(null);\n  const onClick = (provider) => {\n    onContinue({\n      provider,\n      publicKey: provider.pubKey,\n      derivationPath: provider.derivationPath,\n      account: provider.account,\n      change: provider.change,\n    });\n  };\n  useEffect(() => {\n    if (open) {\n      const fetch = async () => {\n        let accounts = [];\n        if (dPathMenuItem === DerivationPathMenuItem.Bip44Root) {\n          let provider = new LedgerWalletProvider({\n            derivationPath: toDerivationPath(dPathMenuItem),\n          });\n          accounts.push(await provider.init());\n        } else {\n          setAccounts(null);\n          // Loading in parallel makes the ledger upset. So do it serially.\n          for (let k = 0; k < 10; k += 1) {\n            let provider = new LedgerWalletProvider({\n              derivationPath: toDerivationPath(dPathMenuItem),\n              account: k,\n            });\n            accounts.push(await provider.init());\n          }\n        }\n        setAccounts(accounts);\n      };\n      fetch().catch((err) => {\n        console.log(`received error when attempting to connect ledger: ${err}`);\n        if (err && err.statusCode === 0x6804) {\n          enqueueSnackbar('Unlock ledger device', { variant: 'error' });\n        }\n        onClose();\n      });\n    }\n  }, [dPathMenuItem, enqueueSnackbar, open, onClose]);\n  return (\n    <Card elevation={0}>\n      {accounts === null ? (\n        <div style={{ padding: '24px' }}>\n          <Typography align=\"center\">\n            Loading accounts from your hardware wallet\n          </Typography>\n          <CircularProgress\n            style={{\n              display: 'block',\n              marginLeft: 'auto',\n              marginRight: 'auto',\n            }}\n          />\n        </div>\n      ) : (\n        <AccountsSelector\n          showRoot={true}\n          onClick={onClick}\n          accounts={accounts}\n          setDPathMenuItem={setDPathMenuItem}\n          dPathMenuItem={dPathMenuItem}\n        />\n      )}\n    </Card>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}