{"ast":null,"code":"import _createForOfIteratorHelper from\"/Users/jalcantara/Desktop/SOL-dev/tanda-wallet-sol/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _regeneratorRuntime from\"/Users/jalcantara/Desktop/SOL-dev/tanda-wallet-sol/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/jalcantara/Desktop/SOL-dev/tanda-wallet-sol/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"/Users/jalcantara/Desktop/SOL-dev/tanda-wallet-sol/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useRef,useState}from'react';import DialogActions from'@material-ui/core/DialogActions';import Button from'@material-ui/core/Button';import DialogTitle from'@material-ui/core/DialogTitle';import DialogContent from'@material-ui/core/DialogContent';import TextField from'@material-ui/core/TextField';import DialogForm from'./DialogForm';import{useWallet,useWalletAddressForMint}from'../utils/wallet';import{PublicKey}from'@solana/web3.js';import{abbreviateAddress}from'../utils/utils';import InputAdornment from'@material-ui/core/InputAdornment';import{useCallAsync,useSendTransaction}from'../utils/notifications';import{swapApiRequest,useSwapApiGet}from'../utils/swap/api';import{showSwapAddress}from'../utils/config';import Tabs from'@material-ui/core/Tabs';import Tab from'@material-ui/core/Tab';import DialogContentText from'@material-ui/core/DialogContentText';import{ConnectToMetamaskButton,getErc20Balance,useEthAccount,withdrawEth}from'../utils/swap/eth';import{useConnection,useIsProdNetwork}from'../utils/connection';import Stepper from'@material-ui/core/Stepper';import Step from'@material-ui/core/Step';import StepLabel from'@material-ui/core/StepLabel';import Link from'@material-ui/core/Link';import Typography from'@material-ui/core/Typography';import{useAsyncData}from'../utils/fetch-loop';import CircularProgress from'@material-ui/core/CircularProgress';import{TOKEN_PROGRAM_ID,WRAPPED_SOL_MINT}from'../utils/tokens/instructions';import{parseTokenAccountData}from'../utils/tokens/data';import{Switch,Tooltip}from'@material-ui/core';import{EthFeeEstimate}from'./EthFeeEstimate';import{resolveDomainName,resolveTwitterHandle}from'../utils/name-service';var WUSDC_MINT=new PublicKey('BXXkv6z8ykpG1yuvUDPgh732wzVHB69RnB9YgSYh3itW');var USDC_MINT=new PublicKey('EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v');var WUSDT_MINT=new PublicKey('BQcdHdAQW1hczDbBi9hiegXAR7A98Q9jx3X3iBBBDiq4');var USDT_MINT=new PublicKey('Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB');var DISABLED_ERC20_MINTS=new Set(['kinXdEcpDQeHPEuQnqmUgtYykqKGVFq6CeVX5iAHJq6','ABE7D8RU1eHfCJWzHYZZeymeE8k9nPPXfqge2NQYyKoL']);export default function SendDialog(_ref){var _swapCoinInfo,_swapCoinInfo2;var open=_ref.open,onClose=_ref.onClose,publicKey=_ref.publicKey,balanceInfo=_ref.balanceInfo;var isProdNetwork=useIsProdNetwork();var _useState=useState('spl'),_useState2=_slicedToArray(_useState,2),tab=_useState2[0],setTab=_useState2[1];var onSubmitRef=useRef();var _useSwapApiGet=useSwapApiGet(showSwapAddress&&balanceInfo.mint&&isProdNetwork?\"coins/sol/\".concat(balanceInfo.mint.toBase58()):null),_useSwapApiGet2=_slicedToArray(_useSwapApiGet,1),swapCoinInfo=_useSwapApiGet2[0];// SwapInfos to ignore.\nif(swapCoinInfo&&swapCoinInfo.erc20Contract==='0x2b2e04bf86978b45bb2edf54aca876973bdd43c0'){swapCoinInfo=null;}var ethAccount=useEthAccount();var mint=balanceInfo.mint,tokenName=balanceInfo.tokenName,tokenSymbol=balanceInfo.tokenSymbol;var getTabs=function getTabs(mint){if(mint===null||mint===void 0?void 0:mint.equals(WUSDC_MINT)){return[/*#__PURE__*/_jsx(Tab,{label:\"SPL WUSDC\",value:\"spl\"},\"spl\"),/*#__PURE__*/_jsx(Tab,{label:\"SPL USDC\",value:\"wusdcToSplUsdc\"},\"wusdcToSplUsdc\"),/*#__PURE__*/_jsx(Tab,{label:\"ERC20 USDC\",value:\"swap\"},\"swap\")];}else if(mint===null||mint===void 0?void 0:mint.equals(WUSDT_MINT)){return[/*#__PURE__*/_jsx(Tab,{label:\"SPL WUSDT\",value:\"spl\"},\"spl\"),/*#__PURE__*/_jsx(Tab,{label:\"SPL USDT\",value:\"wusdtToSplUsdt\"},\"wusdtToSplUsdt\"),/*#__PURE__*/_jsx(Tab,{label:\"ERC20 USDT\",value:\"swap\"},\"swap\")];}else if(localStorage.getItem('sollet-private')&&(mint===null||mint===void 0?void 0:mint.equals(USDC_MINT))){return[/*#__PURE__*/_jsx(Tab,{label:\"SPL USDC\",value:\"spl\"},\"spl\"),/*#__PURE__*/_jsx(Tab,{label:\"SPL WUSDC\",value:\"usdcToSplWUsdc\"},\"usdcToSplWUsdc\"),/*#__PURE__*/_jsx(Tab,{label:\"ERC20 USDC\",value:\"swap\"},\"swap\")];}else{var erc20Tab=/*#__PURE__*/_jsx(Tab,{label:\"\".concat(swapCoinInfo.erc20Contract?'ERC20':'Native',\" \").concat(swapCoinInfo.ticker),value:\"swap\"},\"swap\");var tabs=[/*#__PURE__*/_jsx(Tab,{label:\"SPL \".concat(swapCoinInfo.ticker),value:\"spl\"},\"spl\")];if(!DISABLED_ERC20_MINTS.has(mint.toString())||localStorage.getItem('sollet-private')){tabs.push(erc20Tab);}return tabs;}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(DialogForm,{open:open,onClose:onClose,onSubmit:function onSubmit(){return onSubmitRef.current();},fullWidth:true,children:[/*#__PURE__*/_jsxs(DialogTitle,{children:[\"Send \",tokenName!==null&&tokenName!==void 0?tokenName:abbreviateAddress(mint),tokenSymbol?\" (\".concat(tokenSymbol,\")\"):null,ethAccount&&/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(Typography,{color:\"textSecondary\",style:{fontSize:'14px'},children:[\"Metamask connected: \",ethAccount]})})]}),swapCoinInfo?/*#__PURE__*/_jsx(Tabs,{value:tab,variant:\"fullWidth\",onChange:function onChange(e,value){return setTab(value);},textColor:\"primary\",indicatorColor:\"primary\",children:getTabs(mint)}):null,tab==='spl'?/*#__PURE__*/_jsx(SendSplDialog,{onClose:onClose,publicKey:publicKey,balanceInfo:balanceInfo,onSubmitRef:onSubmitRef}):tab==='wusdcToSplUsdc'?/*#__PURE__*/_jsx(SendSwapDialog,{onClose:onClose,publicKey:publicKey,balanceInfo:balanceInfo,swapCoinInfo:swapCoinInfo,onSubmitRef:onSubmitRef,wusdcToSplUsdc:true},tab):tab==='wusdtToSplUsdt'?/*#__PURE__*/_jsx(SendSwapDialog,{onClose:onClose,publicKey:publicKey,balanceInfo:balanceInfo,swapCoinInfo:swapCoinInfo,onSubmitRef:onSubmitRef,wusdtToSplUsdt:true},tab):tab==='usdcToSplWUsdc'?/*#__PURE__*/_jsx(SendSwapDialog,{onClose:onClose,publicKey:publicKey,balanceInfo:balanceInfo,swapCoinInfo:swapCoinInfo,onSubmitRef:onSubmitRef,usdcToSplWUsdc:true},tab):/*#__PURE__*/_jsx(SendSwapDialog,{onClose:onClose,publicKey:publicKey,balanceInfo:balanceInfo,swapCoinInfo:swapCoinInfo,ethAccount:ethAccount,onSubmitRef:onSubmitRef},tab)]}),ethAccount&&(((_swapCoinInfo=swapCoinInfo)===null||_swapCoinInfo===void 0?void 0:_swapCoinInfo.blockchain)==='eth'||((_swapCoinInfo2=swapCoinInfo)===null||_swapCoinInfo2===void 0?void 0:_swapCoinInfo2.erc20Contract))?/*#__PURE__*/_jsx(EthWithdrawalCompleter,{ethAccount:ethAccount,publicKey:publicKey}):null]});}function SendSplDialog(_ref2){var onClose=_ref2.onClose,publicKey=_ref2.publicKey,balanceInfo=_ref2.balanceInfo,onSubmitRef=_ref2.onSubmitRef;var defaultAddressHelperText=!balanceInfo.mint||balanceInfo.mint.equals(WRAPPED_SOL_MINT)?'Enter Solana Address':'Enter SPL token or Solana address';var wallet=useWallet();var _useSendTransaction=useSendTransaction(),_useSendTransaction2=_slicedToArray(_useSendTransaction,2),sendTransaction=_useSendTransaction2[0],sending=_useSendTransaction2[1];var _useState3=useState(defaultAddressHelperText),_useState4=_slicedToArray(_useState3,2),addressHelperText=_useState4[0],setAddressHelperText=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),passValidation=_useState6[0],setPassValidation=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),overrideDestinationCheck=_useState8[0],setOverrideDestinationCheck=_useState8[1];var _useState9=useState(),_useState10=_slicedToArray(_useState9,2),shouldShowOverride=_useState10[0],setShouldShowOverride=_useState10[1];var _useForm=useForm(balanceInfo,addressHelperText,passValidation),fields=_useForm.fields,destinationAddress=_useForm.destinationAddress,transferAmountString=_useForm.transferAmountString,validAmount=_useForm.validAmount;var decimals=balanceInfo.decimals,mint=balanceInfo.mint;var mintString=mint&&mint.toBase58();var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),isDomainName=_useState12[0],setIsDomainName=_useState12[1];var _useState13=useState(),_useState14=_slicedToArray(_useState13,2),domainOwner=_useState14[0],setDomainOwner=_useState14[1];useEffect(function(){_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var twitterOwner,_domainOwner,destinationAccountInfo,accountInfo;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!destinationAddress.startsWith('@')){_context.next=11;break;}_context.next=3;return resolveTwitterHandle(wallet.connection,destinationAddress.slice(1));case 3:twitterOwner=_context.sent;if(twitterOwner){_context.next=9;break;}setAddressHelperText(\"This Twitter handle is not registered\");setPassValidation(undefined);setShouldShowOverride(undefined);return _context.abrupt(\"return\");case 9:setIsDomainName(true);setDomainOwner(twitterOwner);case 11:if(!destinationAddress.endsWith('.sol')){_context.next=22;break;}_context.next=14;return resolveDomainName(wallet.connection,destinationAddress.slice(0,-4));case 14:_domainOwner=_context.sent;if(_domainOwner){_context.next=20;break;}setAddressHelperText(\"This domain name is not registered\");setPassValidation(undefined);setShouldShowOverride(undefined);return _context.abrupt(\"return\");case 20:setIsDomainName(true);setDomainOwner(_domainOwner);case 22:if(destinationAddress){_context.next=27;break;}setAddressHelperText(defaultAddressHelperText);setPassValidation(undefined);setShouldShowOverride(undefined);return _context.abrupt(\"return\");case 27:_context.prev=27;_context.next=30;return wallet.connection.getAccountInfo(new PublicKey(isDomainName?domainOwner:destinationAddress));case 30:destinationAccountInfo=_context.sent;setShouldShowOverride(false);if(destinationAccountInfo.owner.equals(TOKEN_PROGRAM_ID)){accountInfo=parseTokenAccountData(destinationAccountInfo.data);if(accountInfo.mint.toBase58()===mintString){setPassValidation(true);setAddressHelperText('Address is a valid SPL token address');}else{setPassValidation(false);setAddressHelperText('Destination address mint does not match');}}else{setPassValidation(true);setAddressHelperText(\"Destination is a Solana address: \".concat(isDomainName?domainOwner:destinationAddress));}_context.next=41;break;case 35:_context.prev=35;_context.t0=_context[\"catch\"](27);console.log(\"Received error validating address \".concat(_context.t0));setAddressHelperText(defaultAddressHelperText);setShouldShowOverride(true);setPassValidation(undefined);case 41:case\"end\":return _context.stop();}}},_callee,null,[[27,35]]);}))();// eslint-disable-next-line react-hooks/exhaustive-deps\n},[destinationAddress,wallet,mintString,isDomainName,domainOwner]);useEffect(function(){return function(){setOverrideDestinationCheck(false);};},[setOverrideDestinationCheck]);function makeTransaction(){return _makeTransaction.apply(this,arguments);}function _makeTransaction(){_makeTransaction=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var amount;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:amount=Math.round(parseFloat(transferAmountString)*Math.pow(10,decimals));if(!(!amount||amount<=0)){_context2.next=3;break;}throw new Error('Invalid amount');case 3:return _context2.abrupt(\"return\",wallet.transferToken(publicKey,new PublicKey(isDomainName?domainOwner:destinationAddress),amount,balanceInfo.mint,decimals,null,overrideDestinationCheck));case 4:case\"end\":return _context2.stop();}}},_callee2);}));return _makeTransaction.apply(this,arguments);}var disabled=shouldShowOverride?!overrideDestinationCheck||sending||!validAmount:sending||!validAmount;function onSubmit(){return _onSubmit.apply(this,arguments);}function _onSubmit(){_onSubmit=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:return _context3.abrupt(\"return\",sendTransaction(makeTransaction(),{onSuccess:onClose}));case 1:case\"end\":return _context3.stop();}}},_callee3);}));return _onSubmit.apply(this,arguments);}onSubmitRef.current=onSubmit;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(DialogContent,{children:fields}),/*#__PURE__*/_jsxs(DialogActions,{children:[shouldShowOverride&&/*#__PURE__*/_jsxs(\"div\",{style:{'align-items':'center',display:'flex','text-align':'left'},children:[/*#__PURE__*/_jsx(\"b\",{children:\"This address has no funds. Are you sure it's correct?\"}),/*#__PURE__*/_jsx(Switch,{checked:overrideDestinationCheck,onChange:function onChange(e){return setOverrideDestinationCheck(e.target.checked);},color:\"primary\"})]}),/*#__PURE__*/_jsx(Button,{onClick:onClose,children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{type:\"submit\",color:\"primary\",disabled:disabled,children:\"Send\"})]})]});}function SendSwapDialog(_ref4){var onClose=_ref4.onClose,publicKey=_ref4.publicKey,balanceInfo=_ref4.balanceInfo,swapCoinInfo=_ref4.swapCoinInfo,ethAccount=_ref4.ethAccount,_ref4$wusdcToSplUsdc=_ref4.wusdcToSplUsdc,wusdcToSplUsdc=_ref4$wusdcToSplUsdc===void 0?false:_ref4$wusdcToSplUsdc,_ref4$wusdtToSplUsdt=_ref4.wusdtToSplUsdt,wusdtToSplUsdt=_ref4$wusdtToSplUsdt===void 0?false:_ref4$wusdtToSplUsdt,_ref4$usdcToSplWUsdc=_ref4.usdcToSplWUsdc,usdcToSplWUsdc=_ref4$usdcToSplWUsdc===void 0?false:_ref4$usdcToSplWUsdc,onSubmitRef=_ref4.onSubmitRef;var wallet=useWallet();var _useSendTransaction3=useSendTransaction(),_useSendTransaction4=_slicedToArray(_useSendTransaction3,2),sendTransaction=_useSendTransaction4[0],sending=_useSendTransaction4[1];var _useState15=useState(null),_useState16=_slicedToArray(_useState15,2),signature=_useState16[0],setSignature=_useState16[1];var _useForm2=useForm(balanceInfo),fields=_useForm2.fields,destinationAddress=_useForm2.destinationAddress,transferAmountString=_useForm2.transferAmountString,setDestinationAddress=_useForm2.setDestinationAddress,validAmount=_useForm2.validAmount;var tokenName=balanceInfo.tokenName,decimals=balanceInfo.decimals,mint=balanceInfo.mint;var blockchain=wusdcToSplUsdc||wusdtToSplUsdt||usdcToSplWUsdc?'sol':swapCoinInfo.blockchain==='sol'?'eth':swapCoinInfo.blockchain;var needMetamask=blockchain==='eth';var _useAsyncData=useAsyncData(function(){return getErc20Balance(ethAccount);},'ethBalance',{refreshInterval:2000}),_useAsyncData2=_slicedToArray(_useAsyncData,1),ethBalance=_useAsyncData2[0];var ethFeeData=useSwapApiGet(blockchain==='eth'&&\"fees/eth/\".concat(ethAccount)+(swapCoinInfo.erc20Contract?'/'+swapCoinInfo.erc20Contract:''),{refreshInterval:2000});var _ethFeeData=_slicedToArray(ethFeeData,1),ethFeeEstimate=_ethFeeData[0];var insufficientEthBalance=typeof ethBalance==='number'&&typeof ethFeeEstimate==='number'&&ethBalance<ethFeeEstimate;useEffect(function(){if(blockchain==='eth'&&ethAccount){setDestinationAddress(ethAccount);}},[blockchain,ethAccount,setDestinationAddress]);var splUsdcWalletAddress=useWalletAddressForMint(wusdcToSplUsdc?USDC_MINT:null);var splUsdtWalletAddress=useWalletAddressForMint(wusdtToSplUsdt?USDT_MINT:null);var splWUsdcWalletAddress=useWalletAddressForMint(usdcToSplWUsdc?WUSDC_MINT:null);useEffect(function(){if(wusdcToSplUsdc&&splUsdcWalletAddress){setDestinationAddress(splUsdcWalletAddress);}else if(wusdtToSplUsdt&&splUsdtWalletAddress){setDestinationAddress(splUsdtWalletAddress);}else if(usdcToSplWUsdc&&splWUsdcWalletAddress){setDestinationAddress(splWUsdcWalletAddress);}},[setDestinationAddress,wusdcToSplUsdc,splUsdcWalletAddress,wusdtToSplUsdt,splUsdtWalletAddress,usdcToSplWUsdc,splWUsdcWalletAddress]);function makeTransaction(){return _makeTransaction2.apply(this,arguments);}function _makeTransaction2(){_makeTransaction2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var amount,params,swapInfo;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:amount=Math.round(parseFloat(transferAmountString)*Math.pow(10,decimals));if(!(!amount||amount<=0)){_context4.next=3;break;}throw new Error('Invalid amount');case 3:params={blockchain:blockchain,address:destinationAddress,size:amount/Math.pow(10,decimals)};if(blockchain==='sol'){params.coin=swapCoinInfo.splMint;}else if(blockchain==='eth'){params.coin=swapCoinInfo.erc20Contract;}if(mint===null||mint===void 0?void 0:mint.equals(WUSDC_MINT)){params.wusdcToUsdc=true;}else if(mint===null||mint===void 0?void 0:mint.equals(USDC_MINT)){if(usdcToSplWUsdc){params.usdcToWUsdc=true;params.coin=WUSDC_MINT.toString();}}else if(mint===null||mint===void 0?void 0:mint.equals(WUSDT_MINT)){params.wusdtToUsdt=true;}_context4.next=8;return swapApiRequest('POST','swap_to',params);case 8:swapInfo=_context4.sent;if(!(swapInfo.blockchain!=='sol')){_context4.next=11;break;}throw new Error('Unexpected blockchain');case 11:return _context4.abrupt(\"return\",wallet.transferToken(publicKey,new PublicKey(swapInfo.address),amount,balanceInfo.mint,decimals,swapInfo.memo));case 12:case\"end\":return _context4.stop();}}},_callee4);}));return _makeTransaction2.apply(this,arguments);}function onSubmit(){return _onSubmit2.apply(this,arguments);}function _onSubmit2(){_onSubmit2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(){return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:return _context5.abrupt(\"return\",sendTransaction(makeTransaction(),{onSuccess:setSignature}));case 1:case\"end\":return _context5.stop();}}},_callee5);}));return _onSubmit2.apply(this,arguments);}onSubmitRef.current=onSubmit;if(signature){return/*#__PURE__*/_jsx(SendSwapProgress,{publicKey:publicKey,signature:signature,blockchain:blockchain,onClose:onClose},signature);}var bitcoinDisable=blockchain==='btc'?parseFloat(transferAmountString)<0.001:false;var sendButton=/*#__PURE__*/_jsx(Button,{type:\"submit\",color:\"primary\",disabled:sending||needMetamask&&!ethAccount||!validAmount||insufficientEthBalance||bitcoinDisable,children:\"Send\"});if(insufficientEthBalance){sendButton=/*#__PURE__*/_jsx(Tooltip,{title:\"Insufficient ETH for withdrawal transaction fee\",placement:\"top\",children:/*#__PURE__*/_jsx(\"span\",{children:sendButton})});}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(DialogContent,{style:{paddingTop:16},children:[/*#__PURE__*/_jsxs(DialogContentText,{children:[\"SPL \",tokenName,\" can be converted to\",' ',blockchain==='eth'&&swapCoinInfo.erc20Contract?'ERC20':blockchain==='sol'&&swapCoinInfo.splMint?'SPL':'native',' ',swapCoinInfo.ticker,needMetamask?' via MetaMask':null,\".\"]}),blockchain==='eth'&&/*#__PURE__*/_jsxs(DialogContentText,{children:[\"Estimated withdrawal transaction fee:\",/*#__PURE__*/_jsx(EthFeeEstimate,{ethFeeData:ethFeeData,insufficientEthBalance:insufficientEthBalance})]}),needMetamask&&!ethAccount?/*#__PURE__*/_jsx(ConnectToMetamaskButton,{}):fields]}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:onClose,children:\"Cancel\"}),sendButton]})]});}function SendSwapProgress(_ref5){var publicKey=_ref5.publicKey,signature=_ref5.signature,onClose=_ref5.onClose,blockchain=_ref5.blockchain;var connection=useConnection();var _useSwapApiGet3=useSwapApiGet(\"swaps_from/sol/\".concat(publicKey.toBase58()),{refreshInterval:1000}),_useSwapApiGet4=_slicedToArray(_useSwapApiGet3,1),swaps=_useSwapApiGet4[0];var _useAsyncData3=useAsyncData(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(){var _yield$connection$get,value;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.next=2;return connection.getSignatureStatus(signature);case 2:_yield$connection$get=_context6.sent;value=_yield$connection$get.value;return _context6.abrupt(\"return\",value===null||value===void 0?void 0:value.confirmations);case 5:case\"end\":return _context6.stop();}}},_callee6);})),[connection.getSignatureStatus,signature],{refreshInterval:2000}),_useAsyncData4=_slicedToArray(_useAsyncData3,1),confirms=_useAsyncData4[0];var step=1;var ethTxid=null;var _iterator=_createForOfIteratorHelper(swaps||[]),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var swap=_step.value;var deposit=swap.deposit,withdrawal=swap.withdrawal;if(deposit.txid===signature){var _withdrawal$txid;if((_withdrawal$txid=withdrawal.txid)===null||_withdrawal$txid===void 0?void 0:_withdrawal$txid.startsWith('0x')){step=3;ethTxid=withdrawal.txid;}else if(withdrawal.txid&&blockchain!=='eth'){step=3;}else{step=2;}}}}catch(err){_iterator.e(err);}finally{_iterator.f();}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(DialogContent,{children:[/*#__PURE__*/_jsxs(Stepper,{activeStep:step,children:[/*#__PURE__*/_jsx(Step,{children:/*#__PURE__*/_jsx(StepLabel,{children:\"Send Request\"})}),/*#__PURE__*/_jsx(Step,{children:/*#__PURE__*/_jsx(StepLabel,{children:\"Wait for Confirmations\"})}),/*#__PURE__*/_jsx(Step,{children:/*#__PURE__*/_jsx(StepLabel,{children:\"Withdraw Funds\"})})]}),ethTxid?/*#__PURE__*/_jsx(Typography,{variant:\"body2\",align:\"center\",children:/*#__PURE__*/_jsx(Link,{href:\"https://etherscan.io/tx/\".concat(ethTxid),target:\"_blank\",rel:\"noopener\",children:\"View on Etherscan\"})}):step<3?/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'center',alignItems:'center'},children:[/*#__PURE__*/_jsx(\"div\",{style:{marginRight:16},children:/*#__PURE__*/_jsx(CircularProgress,{})}),confirms?/*#__PURE__*/_jsxs(Typography,{children:[confirms,\" / 35 Confirmations\"]}):/*#__PURE__*/_jsx(Typography,{children:\"Transaction Pending\"})]}):null,!ethTxid&&blockchain==='eth'?/*#__PURE__*/_jsx(DialogContentText,{style:{marginTop:16,marginBottom:0},children:\"Please keep this window open. You will need to approve the request on MetaMask to complete the transaction.\"}):null]}),/*#__PURE__*/_jsx(DialogActions,{children:/*#__PURE__*/_jsx(Button,{onClick:onClose,children:\"Close\"})})]});}function useForm(balanceInfo,addressHelperText,passAddressValidation,overrideValidation){var _useState17=useState(''),_useState18=_slicedToArray(_useState17,2),destinationAddress=_useState18[0],setDestinationAddress=_useState18[1];var _useState19=useState(''),_useState20=_slicedToArray(_useState19,2),transferAmountString=_useState20[0],setTransferAmountString=_useState20[1];var balanceAmount=balanceInfo.amount,decimals=balanceInfo.decimals,tokenSymbol=balanceInfo.tokenSymbol;var parsedAmount=parseFloat(transferAmountString)*Math.pow(10,decimals);var validAmount=parsedAmount>0&&parsedAmount<=balanceAmount;var fields=/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(TextField,{label:\"Recipient Address\",fullWidth:true,variant:\"outlined\",margin:\"normal\",value:destinationAddress,onChange:function onChange(e){return setDestinationAddress(e.target.value.trim());},helperText:addressHelperText,id:!passAddressValidation&&passAddressValidation!==undefined?'outlined-error-helper-text':undefined,error:!passAddressValidation&&passAddressValidation!==undefined}),/*#__PURE__*/_jsx(TextField,{label:\"Amount\",fullWidth:true,variant:\"outlined\",margin:\"normal\",type:\"number\",InputProps:{endAdornment:/*#__PURE__*/_jsxs(InputAdornment,{position:\"end\",children:[/*#__PURE__*/_jsx(Button,{onClick:function onClick(){return setTransferAmountString(balanceAmountToUserAmount(balanceAmount,decimals));},children:\"MAX\"}),tokenSymbol?tokenSymbol:null]}),inputProps:{step:Math.pow(10,-decimals)}},value:transferAmountString,onChange:function onChange(e){return setTransferAmountString(e.target.value.trim());},helperText:/*#__PURE__*/_jsxs(\"span\",{onClick:function onClick(){return setTransferAmountString(balanceAmountToUserAmount(balanceAmount,decimals));},children:[\"Max: \",balanceAmountToUserAmount(balanceAmount,decimals)]})})]});return{fields:fields,destinationAddress:destinationAddress,transferAmountString:transferAmountString,setDestinationAddress:setDestinationAddress,validAmount:validAmount};}function balanceAmountToUserAmount(balanceAmount,decimals){return(balanceAmount/Math.pow(10,decimals)).toFixed(decimals);}function EthWithdrawalCompleter(_ref7){var ethAccount=_ref7.ethAccount,publicKey=_ref7.publicKey;var _useSwapApiGet5=useSwapApiGet(\"swaps_from/sol/\".concat(publicKey.toBase58()),{refreshInterval:10000}),_useSwapApiGet6=_slicedToArray(_useSwapApiGet5,1),swaps=_useSwapApiGet6[0];if(!swaps){return null;}return swaps.map(function(swap){return/*#__PURE__*/_jsx(EthWithdrawalCompleterItem,{ethAccount:ethAccount,swap:swap},swap.deposit.txid);});}function EthWithdrawalCompleterItem(_ref8){var ethAccount=_ref8.ethAccount,swap=_ref8.swap;var callAsync=useCallAsync();var withdrawal=swap.withdrawal;useEffect(function(){if(withdrawal.status==='sent'&&withdrawal.blockchain==='eth'&&withdrawal.txid&&!withdrawal.txid.startsWith('0x')&&withdrawal.txData){withdrawEth(ethAccount,withdrawal,callAsync);}// eslint-disable-next-line react-hooks/exhaustive-deps\n},[withdrawal.txid,withdrawal.status]);return null;}","map":{"version":3,"sources":["/Users/jalcantara/Desktop/SOL-dev/tanda-wallet-sol/src/components/SendDialog.js"],"names":["React","useEffect","useRef","useState","DialogActions","Button","DialogTitle","DialogContent","TextField","DialogForm","useWallet","useWalletAddressForMint","PublicKey","abbreviateAddress","InputAdornment","useCallAsync","useSendTransaction","swapApiRequest","useSwapApiGet","showSwapAddress","Tabs","Tab","DialogContentText","ConnectToMetamaskButton","getErc20Balance","useEthAccount","withdrawEth","useConnection","useIsProdNetwork","Stepper","Step","StepLabel","Link","Typography","useAsyncData","CircularProgress","TOKEN_PROGRAM_ID","WRAPPED_SOL_MINT","parseTokenAccountData","Switch","Tooltip","EthFeeEstimate","resolveDomainName","resolveTwitterHandle","WUSDC_MINT","USDC_MINT","WUSDT_MINT","USDT_MINT","DISABLED_ERC20_MINTS","Set","SendDialog","open","onClose","publicKey","balanceInfo","isProdNetwork","tab","setTab","onSubmitRef","mint","toBase58","swapCoinInfo","erc20Contract","ethAccount","tokenName","tokenSymbol","getTabs","equals","localStorage","getItem","erc20Tab","ticker","tabs","has","toString","push","current","fontSize","e","value","blockchain","SendSplDialog","defaultAddressHelperText","wallet","sendTransaction","sending","addressHelperText","setAddressHelperText","passValidation","setPassValidation","overrideDestinationCheck","setOverrideDestinationCheck","shouldShowOverride","setShouldShowOverride","useForm","fields","destinationAddress","transferAmountString","validAmount","decimals","mintString","isDomainName","setIsDomainName","domainOwner","setDomainOwner","startsWith","connection","slice","twitterOwner","undefined","endsWith","getAccountInfo","destinationAccountInfo","owner","accountInfo","data","console","log","makeTransaction","amount","Math","round","parseFloat","Error","transferToken","disabled","onSubmit","onSuccess","display","target","checked","SendSwapDialog","wusdcToSplUsdc","wusdtToSplUsdt","usdcToSplWUsdc","signature","setSignature","setDestinationAddress","needMetamask","refreshInterval","ethBalance","ethFeeData","ethFeeEstimate","insufficientEthBalance","splUsdcWalletAddress","splUsdtWalletAddress","splWUsdcWalletAddress","params","address","size","coin","splMint","wusdcToUsdc","usdcToWUsdc","wusdtToUsdt","swapInfo","memo","bitcoinDisable","sendButton","paddingTop","SendSwapProgress","swaps","getSignatureStatus","confirmations","confirms","step","ethTxid","swap","deposit","withdrawal","txid","justifyContent","alignItems","marginRight","marginTop","marginBottom","passAddressValidation","overrideValidation","setTransferAmountString","balanceAmount","parsedAmount","trim","endAdornment","balanceAmountToUserAmount","inputProps","pow","toFixed","EthWithdrawalCompleter","map","EthWithdrawalCompleterItem","callAsync","status","txData"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport TextField from '@material-ui/core/TextField';\nimport DialogForm from './DialogForm';\nimport { useWallet, useWalletAddressForMint } from '../utils/wallet';\nimport { PublicKey } from '@solana/web3.js';\nimport { abbreviateAddress } from '../utils/utils';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { useCallAsync, useSendTransaction } from '../utils/notifications';\nimport { swapApiRequest, useSwapApiGet } from '../utils/swap/api';\nimport { showSwapAddress } from '../utils/config';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport {\n  ConnectToMetamaskButton,\n  getErc20Balance,\n  useEthAccount,\n  withdrawEth,\n} from '../utils/swap/eth';\nimport { useConnection, useIsProdNetwork } from '../utils/connection';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport { useAsyncData } from '../utils/fetch-loop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {\n  TOKEN_PROGRAM_ID,\n  WRAPPED_SOL_MINT,\n} from '../utils/tokens/instructions';\nimport { parseTokenAccountData } from '../utils/tokens/data';\nimport { Switch, Tooltip } from '@material-ui/core';\nimport { EthFeeEstimate } from './EthFeeEstimate';\nimport { resolveDomainName, resolveTwitterHandle } from '../utils/name-service';\n\nconst WUSDC_MINT = new PublicKey(\n  'BXXkv6z8ykpG1yuvUDPgh732wzVHB69RnB9YgSYh3itW',\n);\nconst USDC_MINT = new PublicKey('EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v');\n\nconst WUSDT_MINT = new PublicKey(\n  'BQcdHdAQW1hczDbBi9hiegXAR7A98Q9jx3X3iBBBDiq4',\n);\n\nconst USDT_MINT = new PublicKey('Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB');\nconst DISABLED_ERC20_MINTS = new Set([\n  'kinXdEcpDQeHPEuQnqmUgtYykqKGVFq6CeVX5iAHJq6',\n  'ABE7D8RU1eHfCJWzHYZZeymeE8k9nPPXfqge2NQYyKoL',\n]);\n\nexport default function SendDialog({ open, onClose, publicKey, balanceInfo }) {\n  const isProdNetwork = useIsProdNetwork();\n  const [tab, setTab] = useState('spl');\n  const onSubmitRef = useRef();\n\n  let [swapCoinInfo] = useSwapApiGet(\n    showSwapAddress && balanceInfo.mint && isProdNetwork\n      ? `coins/sol/${balanceInfo.mint.toBase58()}`\n      : null,\n  );\n\n  // SwapInfos to ignore.\n  if (swapCoinInfo && swapCoinInfo.erc20Contract === '0x2b2e04bf86978b45bb2edf54aca876973bdd43c0') {\n    swapCoinInfo = null;\n  }\n\n  const ethAccount = useEthAccount();\n  const { mint, tokenName, tokenSymbol } = balanceInfo;\n\n  const getTabs = (mint) => {\n    if (mint?.equals(WUSDC_MINT)) {\n      return [\n        <Tab label=\"SPL WUSDC\" key=\"spl\" value=\"spl\" />,\n        <Tab label=\"SPL USDC\" key=\"wusdcToSplUsdc\" value=\"wusdcToSplUsdc\" />,\n        <Tab label=\"ERC20 USDC\" key=\"swap\" value=\"swap\" />,\n      ];\n    } else if (mint?.equals(WUSDT_MINT)) {\n      return [\n        <Tab label=\"SPL WUSDT\" key=\"spl\" value=\"spl\" />,\n        <Tab label=\"SPL USDT\" key=\"wusdtToSplUsdt\" value=\"wusdtToSplUsdt\" />,\n        <Tab label=\"ERC20 USDT\" key=\"swap\" value=\"swap\" />,\n      ];\n    } else if (\n      localStorage.getItem('sollet-private') &&\n      mint?.equals(USDC_MINT)\n    ) {\n      return [\n        <Tab label=\"SPL USDC\" key=\"spl\" value=\"spl\" />,\n        <Tab label=\"SPL WUSDC\" key=\"usdcToSplWUsdc\" value=\"usdcToSplWUsdc\" />,\n        <Tab label=\"ERC20 USDC\" key=\"swap\" value=\"swap\" />,\n      ];\n    } else {\n      const erc20Tab = (\n        <Tab\n          label={`${swapCoinInfo.erc20Contract ? 'ERC20' : 'Native'} ${\n            swapCoinInfo.ticker\n          }`}\n          key=\"swap\"\n          value=\"swap\"\n        />\n      );\n      const tabs = [\n        <Tab label={`SPL ${swapCoinInfo.ticker}`} key=\"spl\" value=\"spl\" />,\n      ];\n      if (\n        !DISABLED_ERC20_MINTS.has(mint.toString()) ||\n        localStorage.getItem('sollet-private')\n      ) {\n        tabs.push(erc20Tab);\n      }\n      return tabs;\n    }\n  };\n\n  return (\n    <>\n      <DialogForm\n        open={open}\n        onClose={onClose}\n        onSubmit={() => onSubmitRef.current()}\n        fullWidth\n      >\n        <DialogTitle>\n          Send {tokenName ?? abbreviateAddress(mint)}\n          {tokenSymbol ? ` (${tokenSymbol})` : null}\n          {ethAccount && (\n            <div>\n              <Typography color=\"textSecondary\" style={{ fontSize: '14px' }}>\n                Metamask connected: {ethAccount}\n              </Typography>\n            </div>\n          )}\n        </DialogTitle>\n        {swapCoinInfo ? (\n          <Tabs\n            value={tab}\n            variant=\"fullWidth\"\n            onChange={(e, value) => setTab(value)}\n            textColor=\"primary\"\n            indicatorColor=\"primary\"\n          >\n            {getTabs(mint)}\n          </Tabs>\n        ) : null}\n        {tab === 'spl' ? (\n          <SendSplDialog\n            onClose={onClose}\n            publicKey={publicKey}\n            balanceInfo={balanceInfo}\n            onSubmitRef={onSubmitRef}\n          />\n        ) : tab === 'wusdcToSplUsdc' ? (\n          <SendSwapDialog\n            key={tab}\n            onClose={onClose}\n            publicKey={publicKey}\n            balanceInfo={balanceInfo}\n            swapCoinInfo={swapCoinInfo}\n            onSubmitRef={onSubmitRef}\n            wusdcToSplUsdc\n          />\n        ) : tab === 'wusdtToSplUsdt' ? (\n          <SendSwapDialog\n            key={tab}\n            onClose={onClose}\n            publicKey={publicKey}\n            balanceInfo={balanceInfo}\n            swapCoinInfo={swapCoinInfo}\n            onSubmitRef={onSubmitRef}\n            wusdtToSplUsdt\n          />\n        ) : tab === 'usdcToSplWUsdc' ? (\n          <SendSwapDialog\n            key={tab}\n            onClose={onClose}\n            publicKey={publicKey}\n            balanceInfo={balanceInfo}\n            swapCoinInfo={swapCoinInfo}\n            onSubmitRef={onSubmitRef}\n            usdcToSplWUsdc\n          />\n        ) : (\n          <SendSwapDialog\n            key={tab}\n            onClose={onClose}\n            publicKey={publicKey}\n            balanceInfo={balanceInfo}\n            swapCoinInfo={swapCoinInfo}\n            ethAccount={ethAccount}\n            onSubmitRef={onSubmitRef}\n          />\n        )}\n      </DialogForm>\n      {ethAccount &&\n      (swapCoinInfo?.blockchain === 'eth' || swapCoinInfo?.erc20Contract) ? (\n        <EthWithdrawalCompleter ethAccount={ethAccount} publicKey={publicKey} />\n      ) : null}\n    </>\n  );\n}\n\nfunction SendSplDialog({ onClose, publicKey, balanceInfo, onSubmitRef }) {\n  const defaultAddressHelperText =\n    !balanceInfo.mint || balanceInfo.mint.equals(WRAPPED_SOL_MINT)\n      ? 'Enter Solana Address'\n      : 'Enter SPL token or Solana address';\n  const wallet = useWallet();\n  const [sendTransaction, sending] = useSendTransaction();\n  const [addressHelperText, setAddressHelperText] = useState(\n    defaultAddressHelperText,\n  );\n  const [passValidation, setPassValidation] = useState();\n  const [overrideDestinationCheck, setOverrideDestinationCheck] = useState(\n    false,\n  );\n  const [shouldShowOverride, setShouldShowOverride] = useState();\n  let {\n    fields,\n    destinationAddress,\n    transferAmountString,\n    validAmount,\n  } = useForm(balanceInfo, addressHelperText, passValidation);\n  const { decimals, mint } = balanceInfo;\n  const mintString = mint && mint.toBase58();\n  const [isDomainName, setIsDomainName] = useState(false);\n  const [domainOwner, setDomainOwner] = useState();\n\n  useEffect(() => {\n    (async () => {\n      if (destinationAddress.startsWith('@')) {\n        const twitterOwner = await resolveTwitterHandle(\n          wallet.connection,\n          destinationAddress.slice(1),\n        );\n        if (!twitterOwner) {\n          setAddressHelperText(`This Twitter handle is not registered`);\n          setPassValidation(undefined);\n          setShouldShowOverride(undefined);\n          return;\n        }\n        setIsDomainName(true);\n        setDomainOwner(twitterOwner);\n      }\n      if (destinationAddress.endsWith('.sol')) {\n        const domainOwner = await resolveDomainName(\n          wallet.connection,\n          destinationAddress.slice(0, -4),\n        );\n        if (!domainOwner) {\n          setAddressHelperText(`This domain name is not registered`);\n          setPassValidation(undefined);\n          setShouldShowOverride(undefined);\n          return;\n        }\n        setIsDomainName(true);\n        setDomainOwner(domainOwner);\n      }\n      if (!destinationAddress) {\n        setAddressHelperText(defaultAddressHelperText);\n        setPassValidation(undefined);\n        setShouldShowOverride(undefined);\n        return;\n      }\n      try {\n        const destinationAccountInfo = await wallet.connection.getAccountInfo(\n          new PublicKey(isDomainName ? domainOwner : destinationAddress),\n        );\n        setShouldShowOverride(false);\n\n        if (destinationAccountInfo.owner.equals(TOKEN_PROGRAM_ID)) {\n          const accountInfo = parseTokenAccountData(\n            destinationAccountInfo.data,\n          );\n          if (accountInfo.mint.toBase58() === mintString) {\n            setPassValidation(true);\n            setAddressHelperText('Address is a valid SPL token address');\n          } else {\n            setPassValidation(false);\n            setAddressHelperText('Destination address mint does not match');\n          }\n        } else {\n          setPassValidation(true);\n          setAddressHelperText(\n            `Destination is a Solana address: ${\n              isDomainName ? domainOwner : destinationAddress\n            }`,\n          );\n        }\n      } catch (e) {\n        console.log(`Received error validating address ${e}`);\n        setAddressHelperText(defaultAddressHelperText);\n        setShouldShowOverride(true);\n        setPassValidation(undefined);\n      }\n    })();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [destinationAddress, wallet, mintString, isDomainName, domainOwner]);\n  useEffect(() => {\n    return () => {\n      setOverrideDestinationCheck(false);\n    };\n  }, [setOverrideDestinationCheck]);\n  async function makeTransaction() {\n    let amount = Math.round(parseFloat(transferAmountString) * 10 ** decimals);\n    if (!amount || amount <= 0) {\n      throw new Error('Invalid amount');\n    }\n    return wallet.transferToken(\n      publicKey,\n      new PublicKey(isDomainName ? domainOwner : destinationAddress),\n      amount,\n      balanceInfo.mint,\n      decimals,\n      null,\n      overrideDestinationCheck,\n    );\n  }\n\n  const disabled = shouldShowOverride\n    ? !overrideDestinationCheck || sending || !validAmount\n    : sending || !validAmount;\n\n  async function onSubmit() {\n    return sendTransaction(makeTransaction(), { onSuccess: onClose });\n  }\n  onSubmitRef.current = onSubmit;\n  return (\n    <>\n      <DialogContent>{fields}</DialogContent>\n      <DialogActions>\n        {shouldShowOverride && (\n          <div\n            style={{\n              'align-items': 'center',\n              display: 'flex',\n              'text-align': 'left',\n            }}\n          >\n            <b>This address has no funds. Are you sure it's correct?</b>\n            <Switch\n              checked={overrideDestinationCheck}\n              onChange={(e) => setOverrideDestinationCheck(e.target.checked)}\n              color=\"primary\"\n            />\n          </div>\n        )}\n        <Button onClick={onClose}>Cancel</Button>\n        <Button type=\"submit\" color=\"primary\" disabled={disabled}>\n          Send\n        </Button>\n      </DialogActions>\n    </>\n  );\n}\n\nfunction SendSwapDialog({\n  onClose,\n  publicKey,\n  balanceInfo,\n  swapCoinInfo,\n  ethAccount,\n  wusdcToSplUsdc = false,\n  wusdtToSplUsdt = false,\n  usdcToSplWUsdc = false,\n  onSubmitRef,\n}) {\n  const wallet = useWallet();\n  const [sendTransaction, sending] = useSendTransaction();\n  const [signature, setSignature] = useState(null);\n  const {\n    fields,\n    destinationAddress,\n    transferAmountString,\n    setDestinationAddress,\n    validAmount,\n  } = useForm(balanceInfo);\n\n  const { tokenName, decimals, mint } = balanceInfo;\n  const blockchain =\n    wusdcToSplUsdc || wusdtToSplUsdt || usdcToSplWUsdc\n      ? 'sol'\n      : swapCoinInfo.blockchain === 'sol'\n      ? 'eth'\n      : swapCoinInfo.blockchain;\n  const needMetamask = blockchain === 'eth';\n\n  const [ethBalance] = useAsyncData(\n    () => getErc20Balance(ethAccount),\n    'ethBalance',\n    {\n      refreshInterval: 2000,\n    },\n  );\n  const ethFeeData = useSwapApiGet(\n    blockchain === 'eth' &&\n      `fees/eth/${ethAccount}` +\n        (swapCoinInfo.erc20Contract ? '/' + swapCoinInfo.erc20Contract : ''),\n    { refreshInterval: 2000 },\n  );\n  const [ethFeeEstimate] = ethFeeData;\n  const insufficientEthBalance =\n    typeof ethBalance === 'number' &&\n    typeof ethFeeEstimate === 'number' &&\n    ethBalance < ethFeeEstimate;\n\n  useEffect(() => {\n    if (blockchain === 'eth' && ethAccount) {\n      setDestinationAddress(ethAccount);\n    }\n  }, [blockchain, ethAccount, setDestinationAddress]);\n\n  let splUsdcWalletAddress = useWalletAddressForMint(\n    wusdcToSplUsdc ? USDC_MINT : null,\n  );\n  let splUsdtWalletAddress = useWalletAddressForMint(\n    wusdtToSplUsdt ? USDT_MINT : null,\n  );\n  let splWUsdcWalletAddress = useWalletAddressForMint(\n    usdcToSplWUsdc ? WUSDC_MINT : null,\n  );\n  useEffect(() => {\n    if (wusdcToSplUsdc && splUsdcWalletAddress) {\n      setDestinationAddress(splUsdcWalletAddress);\n    } else if (wusdtToSplUsdt && splUsdtWalletAddress) {\n      setDestinationAddress(splUsdtWalletAddress);\n    } else if (usdcToSplWUsdc && splWUsdcWalletAddress) {\n      setDestinationAddress(splWUsdcWalletAddress);\n    }\n  }, [\n    setDestinationAddress,\n    wusdcToSplUsdc,\n    splUsdcWalletAddress,\n    wusdtToSplUsdt,\n    splUsdtWalletAddress,\n    usdcToSplWUsdc,\n    splWUsdcWalletAddress,\n  ]);\n\n  async function makeTransaction() {\n    let amount = Math.round(parseFloat(transferAmountString) * 10 ** decimals);\n    if (!amount || amount <= 0) {\n      throw new Error('Invalid amount');\n    }\n    const params = {\n      blockchain,\n      address: destinationAddress,\n      size: amount / 10 ** decimals,\n    };\n    if (blockchain === 'sol') {\n      params.coin = swapCoinInfo.splMint;\n    } else if (blockchain === 'eth') {\n      params.coin = swapCoinInfo.erc20Contract;\n    }\n    if (mint?.equals(WUSDC_MINT)) {\n      params.wusdcToUsdc = true;\n    } else if (mint?.equals(USDC_MINT)) {\n      if (usdcToSplWUsdc) {\n        params.usdcToWUsdc = true;\n        params.coin = WUSDC_MINT.toString();\n      }\n    } else if (mint?.equals(WUSDT_MINT)) {\n      params.wusdtToUsdt = true;\n    }\n    const swapInfo = await swapApiRequest('POST', 'swap_to', params);\n    if (swapInfo.blockchain !== 'sol') {\n      throw new Error('Unexpected blockchain');\n    }\n    return wallet.transferToken(\n      publicKey,\n      new PublicKey(swapInfo.address),\n      amount,\n      balanceInfo.mint,\n      decimals,\n      swapInfo.memo,\n    );\n  }\n\n  async function onSubmit() {\n    return sendTransaction(makeTransaction(), { onSuccess: setSignature });\n  }\n  onSubmitRef.current = onSubmit;\n\n  if (signature) {\n    return (\n      <SendSwapProgress\n        key={signature}\n        publicKey={publicKey}\n        signature={signature}\n        blockchain={blockchain}\n        onClose={onClose}\n      />\n    );\n  }\n  const bitcoinDisable =\n    blockchain === 'btc' ? parseFloat(transferAmountString) < 0.001 : false;\n  let sendButton = (\n    <Button\n      type=\"submit\"\n      color=\"primary\"\n      disabled={\n        sending ||\n        (needMetamask && !ethAccount) ||\n        !validAmount ||\n        insufficientEthBalance ||\n        bitcoinDisable\n      }\n    >\n      Send\n    </Button>\n  );\n\n  if (insufficientEthBalance) {\n    sendButton = (\n      <Tooltip\n        title=\"Insufficient ETH for withdrawal transaction fee\"\n        placement=\"top\"\n      >\n        <span>{sendButton}</span>\n      </Tooltip>\n    );\n  }\n\n  return (\n    <>\n      <DialogContent style={{ paddingTop: 16 }}>\n        <DialogContentText>\n          SPL {tokenName} can be converted to{' '}\n          {blockchain === 'eth' && swapCoinInfo.erc20Contract\n            ? 'ERC20'\n            : blockchain === 'sol' && swapCoinInfo.splMint\n            ? 'SPL'\n            : 'native'}{' '}\n          {swapCoinInfo.ticker}\n          {needMetamask ? ' via MetaMask' : null}.\n        </DialogContentText>\n        {blockchain === 'eth' && (\n          <DialogContentText>\n            Estimated withdrawal transaction fee:\n            <EthFeeEstimate\n              ethFeeData={ethFeeData}\n              insufficientEthBalance={insufficientEthBalance}\n            />\n          </DialogContentText>\n        )}\n        {needMetamask && !ethAccount ? <ConnectToMetamaskButton /> : fields}\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose}>Cancel</Button>\n        {sendButton}\n      </DialogActions>\n    </>\n  );\n}\n\nfunction SendSwapProgress({ publicKey, signature, onClose, blockchain }) {\n  const connection = useConnection();\n  const [swaps] = useSwapApiGet(`swaps_from/sol/${publicKey.toBase58()}`, {\n    refreshInterval: 1000,\n  });\n  const [confirms] = useAsyncData(\n    async () => {\n      const { value } = await connection.getSignatureStatus(signature);\n      return value?.confirmations;\n    },\n    [connection.getSignatureStatus, signature],\n    { refreshInterval: 2000 },\n  );\n\n  let step = 1;\n  let ethTxid = null;\n  for (let swap of swaps || []) {\n    const { deposit, withdrawal } = swap;\n    if (deposit.txid === signature) {\n      if (withdrawal.txid?.startsWith('0x')) {\n        step = 3;\n        ethTxid = withdrawal.txid;\n      } else if (withdrawal.txid && blockchain !== 'eth') {\n        step = 3;\n      } else {\n        step = 2;\n      }\n    }\n  }\n\n  return (\n    <>\n      <DialogContent>\n        <Stepper activeStep={step}>\n          <Step>\n            <StepLabel>Send Request</StepLabel>\n          </Step>\n          <Step>\n            <StepLabel>Wait for Confirmations</StepLabel>\n          </Step>\n          <Step>\n            <StepLabel>Withdraw Funds</StepLabel>\n          </Step>\n        </Stepper>\n        {ethTxid ? (\n          <Typography variant=\"body2\" align=\"center\">\n            <Link\n              href={`https://etherscan.io/tx/${ethTxid}`}\n              target=\"_blank\"\n              rel=\"noopener\"\n            >\n              View on Etherscan\n            </Link>\n          </Typography>\n        ) : step < 3 ? (\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n            }}\n          >\n            <div style={{ marginRight: 16 }}>\n              <CircularProgress />\n            </div>\n            {confirms ? (\n              <Typography>{confirms} / 35 Confirmations</Typography>\n            ) : (\n              <Typography>Transaction Pending</Typography>\n            )}\n          </div>\n        ) : null}\n        {!ethTxid && blockchain === 'eth' ? (\n          <DialogContentText style={{ marginTop: 16, marginBottom: 0 }}>\n            Please keep this window open. You will need to approve the request\n            on MetaMask to complete the transaction.\n          </DialogContentText>\n        ) : null}\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose}>Close</Button>\n      </DialogActions>\n    </>\n  );\n}\n\nfunction useForm(\n  balanceInfo,\n  addressHelperText,\n  passAddressValidation,\n  overrideValidation,\n) {\n  const [destinationAddress, setDestinationAddress] = useState('');\n  const [transferAmountString, setTransferAmountString] = useState('');\n  const { amount: balanceAmount, decimals, tokenSymbol } = balanceInfo;\n\n  const parsedAmount = parseFloat(transferAmountString) * 10 ** decimals;\n  const validAmount = parsedAmount > 0 && parsedAmount <= balanceAmount;\n\n  const fields = (\n    <>\n      <TextField\n        label=\"Recipient Address\"\n        fullWidth\n        variant=\"outlined\"\n        margin=\"normal\"\n        value={destinationAddress}\n        onChange={(e) => setDestinationAddress(e.target.value.trim())}\n        helperText={addressHelperText}\n        id={\n          !passAddressValidation && passAddressValidation !== undefined\n            ? 'outlined-error-helper-text'\n            : undefined\n        }\n        error={!passAddressValidation && passAddressValidation !== undefined}\n      />\n      <TextField\n        label=\"Amount\"\n        fullWidth\n        variant=\"outlined\"\n        margin=\"normal\"\n        type=\"number\"\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position=\"end\">\n              <Button\n                onClick={() =>\n                  setTransferAmountString(\n                    balanceAmountToUserAmount(balanceAmount, decimals),\n                  )\n                }\n              >\n                MAX\n              </Button>\n              {tokenSymbol ? tokenSymbol : null}\n            </InputAdornment>\n          ),\n          inputProps: {\n            step: Math.pow(10, -decimals),\n          },\n        }}\n        value={transferAmountString}\n        onChange={(e) => setTransferAmountString(e.target.value.trim())}\n        helperText={\n          <span\n            onClick={() =>\n              setTransferAmountString(\n                balanceAmountToUserAmount(balanceAmount, decimals),\n              )\n            }\n          >\n            Max: {balanceAmountToUserAmount(balanceAmount, decimals)}\n          </span>\n        }\n      />\n    </>\n  );\n\n  return {\n    fields,\n    destinationAddress,\n    transferAmountString,\n    setDestinationAddress,\n    validAmount,\n  };\n}\n\nfunction balanceAmountToUserAmount(balanceAmount, decimals) {\n  return (balanceAmount / Math.pow(10, decimals)).toFixed(decimals);\n}\n\nfunction EthWithdrawalCompleter({ ethAccount, publicKey }) {\n  const [swaps] = useSwapApiGet(`swaps_from/sol/${publicKey.toBase58()}`, {\n    refreshInterval: 10000,\n  });\n  if (!swaps) {\n    return null;\n  }\n  return swaps.map((swap) => (\n    <EthWithdrawalCompleterItem\n      key={swap.deposit.txid}\n      ethAccount={ethAccount}\n      swap={swap}\n    />\n  ));\n}\n\nfunction EthWithdrawalCompleterItem({ ethAccount, swap }) {\n  const callAsync = useCallAsync();\n  const { withdrawal } = swap;\n  useEffect(() => {\n    if (\n      withdrawal.status === 'sent' &&\n      withdrawal.blockchain === 'eth' &&\n      withdrawal.txid &&\n      !withdrawal.txid.startsWith('0x') &&\n      withdrawal.txData\n    ) {\n      withdrawEth(ethAccount, withdrawal, callAsync);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [withdrawal.txid, withdrawal.status]);\n  return null;\n}\n"]},"metadata":{},"sourceType":"module"}