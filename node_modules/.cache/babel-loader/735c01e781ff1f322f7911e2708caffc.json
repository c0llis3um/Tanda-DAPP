{"ast":null,"code":"import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"/Users/jalcantara/Desktop/SOL-dev/tanda-wallet-sol/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useMemo,useState}from'react';import bs58 from'bs58';import{Divider,Typography}from'@material-ui/core';import CardContent from'@material-ui/core/CardContent';import CircularProgress from'@material-ui/core/CircularProgress';import Box from'@material-ui/core/Box';import{decodeMessage}from'../utils/transactions';import{useConnection,useSolanaExplorerUrlSuffix}from'../utils/connection';import{useWallet,useWalletPublicKeys}from'../utils/wallet';import NewOrder from'./instructions/NewOrder';import UnknownInstruction from'./instructions/UnknownInstruction';import StakeInstruction from'../components/instructions/StakeInstruction';import SystemInstruction from'../components/instructions/SystemInstruction';import DexInstruction from'../components/instructions/DexInstruction';import TokenInstruction from'../components/instructions/TokenInstruction';function isSafeInstruction(publicKeys,owner,txInstructions){var unsafe=false;var states={CREATED:0,OWNED:1,CLOSED_TO_OWNED_DESTINATION:2};var accountStates={};function isOwned(pubkey){if(!pubkey){return false;}if(publicKeys===null||publicKeys===void 0?void 0:publicKeys.some(function(ownedAccountPubkey){return ownedAccountPubkey.equals(pubkey);})){return true;}return accountStates[pubkey.toBase58()]===states.OWNED;}txInstructions.forEach(function(instructions){instructions.forEach(function(instruction){if(!instruction){unsafe=true;}else{if(instruction.type==='raydium'){// Whitelist raydium for now.\n}else if(instruction.type==='mango'){// Whitelist mango for now.\n}else if(['cancelOrder','matchOrders','cancelOrderV3'].includes(instruction.type)){// It is always considered safe to cancel orders, match orders\n}else if(instruction.type==='systemCreate'){var newAccountPubkey=instruction.data.newAccountPubkey;if(!newAccountPubkey){unsafe=true;}else{accountStates[newAccountPubkey.toBase58()]=states.CREATED;}}else if(['newOrder','newOrderV3'].includes(instruction.type)){// New order instructions are safe if the owner is this wallet\nvar _instruction$data=instruction.data,openOrdersPubkey=_instruction$data.openOrdersPubkey,ownerPubkey=_instruction$data.ownerPubkey;if(ownerPubkey&&owner.equals(ownerPubkey)){accountStates[openOrdersPubkey.toBase58()]=states.OWNED;}else{unsafe=true;}}else if(instruction.type==='initializeAccount'){// New SPL token accounts are only considered safe if they are owned by this wallet and newly created\nvar _instruction$data2=instruction.data,_ownerPubkey=_instruction$data2.ownerPubkey,accountPubkey=_instruction$data2.accountPubkey;if(owner&&_ownerPubkey&&owner.equals(_ownerPubkey)&&accountPubkey&&accountStates[accountPubkey.toBase58()]===states.CREATED){accountStates[accountPubkey.toBase58()]=states.OWNED;}else{unsafe=true;}}else if(instruction.type==='settleFunds'){// Settling funds is only safe if the destinations are owned\nvar _instruction$data3=instruction.data,basePubkey=_instruction$data3.basePubkey,quotePubkey=_instruction$data3.quotePubkey;if(!isOwned(basePubkey)||!isOwned(quotePubkey)){unsafe=true;}}else if(instruction.type==='closeAccount'){// Closing is only safe if the destination is owned\nvar _instruction$data4=instruction.data,sourcePubkey=_instruction$data4.sourcePubkey,destinationPubkey=_instruction$data4.destinationPubkey;if(isOwned(destinationPubkey)){accountStates[sourcePubkey.toBase58()]=states.CLOSED_TO_OWNED_DESTINATION;}else{unsafe=true;}}else{unsafe=true;}}});});// Check that all accounts are owned\nif(Object.values(accountStates).some(function(state){return![states.CLOSED_TO_OWNED_DESTINATION,states.OWNED].includes(state);})){unsafe=true;}return!unsafe;}export default function SignTransactionFormContent(_ref){var origin=_ref.origin,messages=_ref.messages,onApprove=_ref.onApprove,autoApprove=_ref.autoApprove,buttonRef=_ref.buttonRef;var explorerUrlSuffix=useSolanaExplorerUrlSuffix();var connection=useConnection();var wallet=useWallet();var _useWalletPublicKeys=useWalletPublicKeys(),_useWalletPublicKeys2=_slicedToArray(_useWalletPublicKeys,1),publicKeys=_useWalletPublicKeys2[0];var _useState=useState(true),_useState2=_slicedToArray(_useState,2),parsing=_useState2[0],setParsing=_useState2[1];// An array of arrays, where each element is the set of instructions for a\n// single transaction.\nvar _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),txInstructions=_useState4[0],setTxInstructions=_useState4[1];var isMultiTx=messages.length>1;useEffect(function(){Promise.all(messages.map(function(m){return decodeMessage(connection,wallet,m);})).then(function(txInstructions){setTxInstructions(txInstructions);setParsing(false);});},[messages,connection,wallet]);var validator=useMemo(function(){return{safe:publicKeys&&txInstructions&&isSafeInstruction(publicKeys,wallet.publicKey,txInstructions)};},[publicKeys,txInstructions,wallet]);useEffect(function(){if(validator.safe&&autoApprove){console.log('Auto approving safe transaction');onApprove();}else{// brings window to front when we receive new instructions\n// this needs to be executed from wallet instead of adapter\n// to ensure chrome brings window to front\nwindow.focus();// Scroll to approve button and focus it to enable approve with enter.\n// Keep currentButtonRef in local variable, so the reference can't become\n// invalid until the timeout is over. this was happening to all auto-\n// approvals for unknown reasons.\nvar currentButtonRef=buttonRef.current;if(currentButtonRef){currentButtonRef.scrollIntoView({behavior:'smooth'});setTimeout(function(){return currentButtonRef.focus();},50);}}// eslint-disable-next-line react-hooks/exhaustive-deps\n},[validator,autoApprove,buttonRef]);var onOpenAddress=function onOpenAddress(address){address&&window.open('https://solscan.io/account/'+address+explorerUrlSuffix,'_blank');};var getContent=function getContent(instruction){switch(instruction===null||instruction===void 0?void 0:instruction.type){case'cancelOrder':case'cancelOrderV2':case'matchOrders':case'settleFunds':return/*#__PURE__*/_jsx(DexInstruction,{instruction:instruction,onOpenAddress:onOpenAddress});case'closeAccount':case'initializeAccount':case'transfer':case'approve':case'revoke':case'mintTo':return/*#__PURE__*/_jsx(TokenInstruction,{instruction:instruction,onOpenAddress:onOpenAddress});case'systemCreateWithSeed':case'systemCreate':case'systemTransfer':return/*#__PURE__*/_jsx(SystemInstruction,{instruction:instruction,onOpenAddress:onOpenAddress});case'stakeAuthorizeWithSeed':case'stakeAuthorize':case'stakeDeactivate':case'stakeDelegate':case'stakeInitialize':case'stakeSplit':case'stakeWithdraw':return/*#__PURE__*/_jsx(StakeInstruction,{instruction:instruction,onOpenAddress:onOpenAddress});case'newOrder':return/*#__PURE__*/_jsx(NewOrder,{instruction:instruction,onOpenAddress:onOpenAddress});case'newOrderV3':return/*#__PURE__*/_jsx(NewOrder,{instruction:instruction,onOpenAddress:onOpenAddress,v3:true});default:return/*#__PURE__*/_jsx(UnknownInstruction,{instruction:instruction,onOpenAddress:onOpenAddress});}};var txLabel=function txLabel(idx){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",gutterBottom:true,children:[\"Transaction \",idx.toString()]}),/*#__PURE__*/_jsx(Divider,{style:{marginTop:20}})]});};var txListItem=function txListItem(instructions,txIdx){var ixs=instructions.map(function(instruction,i){return/*#__PURE__*/_jsxs(Box,{style:{marginTop:20},children:[getContent(instruction),/*#__PURE__*/_jsx(Divider,{style:{marginTop:20}})]},i);});if(!isMultiTx){return ixs;}return/*#__PURE__*/_jsxs(Box,{style:{marginTop:20},children:[txLabel(txIdx),ixs]},txIdx);};return/*#__PURE__*/_jsx(CardContent,{children:parsing?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',alignItems:'flex-end',marginBottom:20},children:[/*#__PURE__*/_jsx(CircularProgress,{style:{marginRight:20}}),/*#__PURE__*/_jsxs(Typography,{variant:\"subtitle1\",style:{fontWeight:'bold'},gutterBottom:true,children:[\"Parsing transaction\",isMultiTx>0?'s':'',\":\"]})]}),messages.map(function(message,idx){return/*#__PURE__*/_jsx(Typography,{style:{wordBreak:'break-all'},children:bs58.encode(message)},idx);})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:txInstructions?\"\".concat(origin,\" wants to:\"):\"Unknown transaction data\"}),txInstructions?txInstructions.map(function(instructions,txIdx){return txListItem(instructions,txIdx);}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Typography,{variant:\"subtitle1\",style:{fontWeight:'bold'},gutterBottom:true,children:[\"Unknown transaction\",isMultiTx>0?'s':'',\":\"]}),messages.map(function(message){return/*#__PURE__*/_jsx(Typography,{style:{wordBreak:'break-all'},children:bs58.encode(message)});})]})]})});}","map":{"version":3,"sources":["/Users/jalcantara/Desktop/SOL-dev/tanda-wallet-sol/src/components/SignTransactionFormContent.js"],"names":["React","useEffect","useMemo","useState","bs58","Divider","Typography","CardContent","CircularProgress","Box","decodeMessage","useConnection","useSolanaExplorerUrlSuffix","useWallet","useWalletPublicKeys","NewOrder","UnknownInstruction","StakeInstruction","SystemInstruction","DexInstruction","TokenInstruction","isSafeInstruction","publicKeys","owner","txInstructions","unsafe","states","CREATED","OWNED","CLOSED_TO_OWNED_DESTINATION","accountStates","isOwned","pubkey","some","ownedAccountPubkey","equals","toBase58","forEach","instructions","instruction","type","includes","newAccountPubkey","data","openOrdersPubkey","ownerPubkey","accountPubkey","basePubkey","quotePubkey","sourcePubkey","destinationPubkey","Object","values","state","SignTransactionFormContent","origin","messages","onApprove","autoApprove","buttonRef","explorerUrlSuffix","connection","wallet","parsing","setParsing","setTxInstructions","isMultiTx","length","Promise","all","map","m","then","validator","safe","publicKey","console","log","window","focus","currentButtonRef","current","scrollIntoView","behavior","setTimeout","onOpenAddress","address","open","getContent","txLabel","idx","toString","marginTop","txListItem","txIdx","ixs","i","display","alignItems","marginBottom","marginRight","fontWeight","message","wordBreak","encode"],"mappings":"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","sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\nimport bs58 from 'bs58';\nimport { Divider, Typography } from '@material-ui/core';\nimport CardContent from '@material-ui/core/CardContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Box from '@material-ui/core/Box';\nimport { decodeMessage } from '../utils/transactions';\nimport { useConnection, useSolanaExplorerUrlSuffix } from '../utils/connection';\nimport { useWallet, useWalletPublicKeys } from '../utils/wallet';\nimport NewOrder from './instructions/NewOrder';\nimport UnknownInstruction from './instructions/UnknownInstruction';\nimport StakeInstruction from '../components/instructions/StakeInstruction';\nimport SystemInstruction from '../components/instructions/SystemInstruction';\nimport DexInstruction from '../components/instructions/DexInstruction';\nimport TokenInstruction from '../components/instructions/TokenInstruction';\n\nfunction isSafeInstruction(publicKeys, owner, txInstructions) {\n  let unsafe = false;\n  const states = {\n    CREATED: 0,\n    OWNED: 1,\n    CLOSED_TO_OWNED_DESTINATION: 2,\n  };\n  const accountStates = {};\n\n  function isOwned(pubkey) {\n    if (!pubkey) {\n      return false;\n    }\n    if (\n      publicKeys?.some((ownedAccountPubkey) =>\n        ownedAccountPubkey.equals(pubkey),\n      )\n    ) {\n      return true;\n    }\n    return accountStates[pubkey.toBase58()] === states.OWNED;\n  }\n\n  txInstructions.forEach((instructions) => {\n    instructions.forEach((instruction) => {\n      if (!instruction) {\n        unsafe = true;\n      } else {\n        if (instruction.type === 'raydium') {\n          // Whitelist raydium for now.\n        } else if (instruction.type === 'mango') {\n          // Whitelist mango for now.\n        } else if (\n          ['cancelOrder', 'matchOrders', 'cancelOrderV3'].includes(\n            instruction.type,\n          )\n        ) {\n          // It is always considered safe to cancel orders, match orders\n        } else if (instruction.type === 'systemCreate') {\n          let { newAccountPubkey } = instruction.data;\n          if (!newAccountPubkey) {\n            unsafe = true;\n          } else {\n            accountStates[newAccountPubkey.toBase58()] = states.CREATED;\n          }\n        } else if (['newOrder', 'newOrderV3'].includes(instruction.type)) {\n          // New order instructions are safe if the owner is this wallet\n          let { openOrdersPubkey, ownerPubkey } = instruction.data;\n          if (ownerPubkey && owner.equals(ownerPubkey)) {\n            accountStates[openOrdersPubkey.toBase58()] = states.OWNED;\n          } else {\n            unsafe = true;\n          }\n        } else if (instruction.type === 'initializeAccount') {\n          // New SPL token accounts are only considered safe if they are owned by this wallet and newly created\n          let { ownerPubkey, accountPubkey } = instruction.data;\n          if (\n            owner &&\n            ownerPubkey &&\n            owner.equals(ownerPubkey) &&\n            accountPubkey &&\n            accountStates[accountPubkey.toBase58()] === states.CREATED\n          ) {\n            accountStates[accountPubkey.toBase58()] = states.OWNED;\n          } else {\n            unsafe = true;\n          }\n        } else if (instruction.type === 'settleFunds') {\n          // Settling funds is only safe if the destinations are owned\n          let { basePubkey, quotePubkey } = instruction.data;\n          if (!isOwned(basePubkey) || !isOwned(quotePubkey)) {\n            unsafe = true;\n          }\n        } else if (instruction.type === 'closeAccount') {\n          // Closing is only safe if the destination is owned\n          let { sourcePubkey, destinationPubkey } = instruction.data;\n          if (isOwned(destinationPubkey)) {\n            accountStates[sourcePubkey.toBase58()] =\n              states.CLOSED_TO_OWNED_DESTINATION;\n          } else {\n            unsafe = true;\n          }\n        } else {\n          unsafe = true;\n        }\n      }\n    });\n  });\n\n  // Check that all accounts are owned\n  if (\n    Object.values(accountStates).some(\n      (state) =>\n        ![states.CLOSED_TO_OWNED_DESTINATION, states.OWNED].includes(state),\n    )\n  ) {\n    unsafe = true;\n  }\n\n  return !unsafe;\n}\n\nexport default function SignTransactionFormContent({\n  origin,\n  messages,\n  onApprove,\n  autoApprove,\n  buttonRef,\n}) {\n  const explorerUrlSuffix = useSolanaExplorerUrlSuffix();\n  const connection = useConnection();\n  const wallet = useWallet();\n  const [publicKeys] = useWalletPublicKeys();\n\n  const [parsing, setParsing] = useState(true);\n  // An array of arrays, where each element is the set of instructions for a\n  // single transaction.\n  const [txInstructions, setTxInstructions] = useState(null);\n\n  const isMultiTx = messages.length > 1;\n\n  useEffect(() => {\n    Promise.all(messages.map((m) => decodeMessage(connection, wallet, m))).then(\n      (txInstructions) => {\n        setTxInstructions(txInstructions);\n        setParsing(false);\n      },\n    );\n  }, [messages, connection, wallet]);\n\n  const validator = useMemo(() => {\n    return {\n      safe:\n        publicKeys &&\n        txInstructions &&\n        isSafeInstruction(publicKeys, wallet.publicKey, txInstructions),\n    };\n  }, [publicKeys, txInstructions, wallet]);\n\n  useEffect(() => {\n    if (validator.safe && autoApprove) {\n      console.log('Auto approving safe transaction');\n      onApprove();\n    } else {\n      // brings window to front when we receive new instructions\n      // this needs to be executed from wallet instead of adapter\n      // to ensure chrome brings window to front\n      window.focus();\n\n      // Scroll to approve button and focus it to enable approve with enter.\n      // Keep currentButtonRef in local variable, so the reference can't become\n      // invalid until the timeout is over. this was happening to all auto-\n      // approvals for unknown reasons.\n      let currentButtonRef = buttonRef.current;\n      if (currentButtonRef) {\n        currentButtonRef.scrollIntoView({ behavior: 'smooth' });\n        setTimeout(() => currentButtonRef.focus(), 50);\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [validator, autoApprove, buttonRef]);\n\n  const onOpenAddress = (address) => {\n    address &&\n      window.open(\n        'https://solscan.io/account/' + address + explorerUrlSuffix,\n        '_blank',\n      );\n  };\n\n  const getContent = (instruction) => {\n    switch (instruction?.type) {\n      case 'cancelOrder':\n      case 'cancelOrderV2':\n      case 'matchOrders':\n      case 'settleFunds':\n        return (\n          <DexInstruction\n            instruction={instruction}\n            onOpenAddress={onOpenAddress}\n          />\n        );\n      case 'closeAccount':\n      case 'initializeAccount':\n      case 'transfer':\n      case 'approve':\n      case 'revoke':\n      case 'mintTo':\n        return (\n          <TokenInstruction\n            instruction={instruction}\n            onOpenAddress={onOpenAddress}\n          />\n        );\n      case 'systemCreateWithSeed':\n      case 'systemCreate':\n      case 'systemTransfer':\n        return (\n          <SystemInstruction\n            instruction={instruction}\n            onOpenAddress={onOpenAddress}\n          />\n        );\n      case 'stakeAuthorizeWithSeed':\n      case 'stakeAuthorize':\n      case 'stakeDeactivate':\n      case 'stakeDelegate':\n      case 'stakeInitialize':\n      case 'stakeSplit':\n      case 'stakeWithdraw':\n        return (\n          <StakeInstruction\n            instruction={instruction}\n            onOpenAddress={onOpenAddress}\n          />\n        );\n      case 'newOrder':\n        return (\n          <NewOrder instruction={instruction} onOpenAddress={onOpenAddress} />\n        );\n      case 'newOrderV3':\n        return (\n          <NewOrder\n            instruction={instruction}\n            onOpenAddress={onOpenAddress}\n            v3={true}\n          />\n        );\n      default:\n        return (\n          <UnknownInstruction\n            instruction={instruction}\n            onOpenAddress={onOpenAddress}\n          />\n        );\n    }\n  };\n\n  const txLabel = (idx) => {\n    return (\n      <>\n        <Typography variant=\"h6\" gutterBottom>\n          Transaction {idx.toString()}\n        </Typography>\n        <Divider style={{ marginTop: 20 }} />\n      </>\n    );\n  };\n\n  const txListItem = (instructions, txIdx) => {\n    const ixs = instructions.map((instruction, i) => (\n      <Box style={{ marginTop: 20 }} key={i}>\n        {getContent(instruction)}\n        <Divider style={{ marginTop: 20 }} />\n      </Box>\n    ));\n\n    if (!isMultiTx) {\n      return ixs;\n    }\n\n    return (\n      <Box style={{ marginTop: 20 }} key={txIdx}>\n        {txLabel(txIdx)}\n        {ixs}\n      </Box>\n    );\n  };\n\n  return (\n    <CardContent>\n      {parsing ? (\n        <>\n          <div\n            style={{\n              display: 'flex',\n              alignItems: 'flex-end',\n              marginBottom: 20,\n            }}\n          >\n            <CircularProgress style={{ marginRight: 20 }} />\n            <Typography\n              variant=\"subtitle1\"\n              style={{ fontWeight: 'bold' }}\n              gutterBottom\n            >\n              Parsing transaction{isMultiTx > 0 ? 's' : ''}:\n            </Typography>\n          </div>\n          {messages.map((message, idx) => (\n            <Typography key={idx} style={{ wordBreak: 'break-all' }}>\n              {bs58.encode(message)}\n            </Typography>\n          ))}\n        </>\n      ) : (\n        <>\n          <Typography variant=\"h6\" gutterBottom>\n            {txInstructions\n              ? `${origin} wants to:`\n              : `Unknown transaction data`}\n          </Typography>\n          {txInstructions ? (\n            txInstructions.map((instructions, txIdx) =>\n              txListItem(instructions, txIdx),\n            )\n          ) : (\n            <>\n              <Typography\n                variant=\"subtitle1\"\n                style={{ fontWeight: 'bold' }}\n                gutterBottom\n              >\n                Unknown transaction{isMultiTx > 0 ? 's' : ''}:\n              </Typography>\n              {messages.map((message) => (\n                <Typography style={{ wordBreak: 'break-all' }}>\n                  {bs58.encode(message)}\n                </Typography>\n              ))}\n            </>\n          )}\n        </>\n      )}\n    </CardContent>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}