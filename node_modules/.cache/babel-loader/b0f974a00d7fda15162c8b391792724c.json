{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"/Users/jalcantara/Desktop/SOL-dev/tanda-wallet-sol/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import DialogActions from'@material-ui/core/DialogActions';import Button from'@material-ui/core/Button';import DialogTitle from'@material-ui/core/DialogTitle';import DialogContent from'@material-ui/core/DialogContent';import TextField from'@material-ui/core/TextField';import FormControlLabel from'@material-ui/core/FormControlLabel';import FormGroup from'@material-ui/core/FormGroup';import Switch from'@material-ui/core/Switch';import{decodeAccount}from'../utils/utils';import DialogForm from'./DialogForm';export default function AddAccountDialog(_ref){var open=_ref.open,onAdd=_ref.onAdd,onClose=_ref.onClose;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isImport=_useState4[0],setIsImport=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),importedPrivateKey=_useState6[0],setPrivateKey=_useState6[1];var importedAccount=isImport?decodeAccount(importedPrivateKey):undefined;var isAddEnabled=isImport?name&&importedAccount!==undefined:name;return/*#__PURE__*/_jsxs(DialogForm,{open:open,onEnter:function onEnter(){setName('');setIsImport(false);setPrivateKey('');},onClose:onClose,onSubmit:function onSubmit(){return onAdd({name:name,importedAccount:importedAccount});},fullWidth:true,children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Add account\"}),/*#__PURE__*/_jsx(DialogContent,{style:{paddingTop:16},children:/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'column'},children:[/*#__PURE__*/_jsx(TextField,{label:\"Name\",fullWidth:true,variant:\"outlined\",margin:\"normal\",value:name,onChange:function onChange(e){return setName(e.target.value.trim());}}),/*#__PURE__*/_jsx(FormGroup,{children:/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Switch,{checked:isImport,onChange:function onChange(){return setIsImport(!isImport);}}),label:\"Import private key\"})}),isImport&&/*#__PURE__*/_jsx(TextField,{label:\"Paste your private key here\",fullWidth:true,type:\"password\",value:importedPrivateKey,variant:\"outlined\",margin:\"normal\",onChange:function onChange(e){return setPrivateKey(e.target.value.trim());}})]})}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:onClose,children:\"Close\"}),/*#__PURE__*/_jsx(Button,{type:\"submit\",color:\"primary\",disabled:!isAddEnabled,children:\"Add\"})]})]});}","map":{"version":3,"sources":["/Users/jalcantara/Desktop/SOL-dev/tanda-wallet-sol/src/components/AddAccountDialog.js"],"names":["React","useState","DialogActions","Button","DialogTitle","DialogContent","TextField","FormControlLabel","FormGroup","Switch","decodeAccount","DialogForm","AddAccountDialog","open","onAdd","onClose","name","setName","isImport","setIsImport","importedPrivateKey","setPrivateKey","importedAccount","undefined","isAddEnabled","paddingTop","display","flexDirection","e","target","value","trim"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Switch from '@material-ui/core/Switch';\nimport { decodeAccount } from '../utils/utils';\nimport DialogForm from './DialogForm';\n\nexport default function AddAccountDialog({ open, onAdd, onClose }) {\n  const [name, setName] = useState('');\n  const [isImport, setIsImport] = useState(false);\n  const [importedPrivateKey, setPrivateKey] = useState('');\n\n  const importedAccount = isImport\n    ? decodeAccount(importedPrivateKey)\n    : undefined;\n  const isAddEnabled = isImport ? name && importedAccount !== undefined : name;\n\n  return (\n    <DialogForm\n      open={open}\n      onEnter={() => {\n        setName('');\n        setIsImport(false);\n        setPrivateKey('');\n      }}\n      onClose={onClose}\n      onSubmit={() => onAdd({ name, importedAccount })}\n      fullWidth\n    >\n      <DialogTitle>Add account</DialogTitle>\n      <DialogContent style={{ paddingTop: 16 }}>\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n          }}\n        >\n          <TextField\n            label=\"Name\"\n            fullWidth\n            variant=\"outlined\"\n            margin=\"normal\"\n            value={name}\n            onChange={(e) => setName(e.target.value.trim())}\n          />\n          <FormGroup>\n            <FormControlLabel\n              control={\n                <Switch\n                  checked={isImport}\n                  onChange={() => setIsImport(!isImport)}\n                />\n              }\n              label=\"Import private key\"\n            />\n          </FormGroup>\n          {isImport && (\n            <TextField\n              label=\"Paste your private key here\"\n              fullWidth\n              type=\"password\"\n              value={importedPrivateKey}\n              variant=\"outlined\"\n              margin=\"normal\"\n              onChange={(e) => setPrivateKey(e.target.value.trim())}\n            />\n          )}\n        </div>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose}>Close</Button>\n        <Button type=\"submit\" color=\"primary\" disabled={!isAddEnabled}>\n          Add\n        </Button>\n      </DialogActions>\n    </DialogForm>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}