{"ast":null,"code":"import _regeneratorRuntime from\"/Users/jalcantara/Desktop/SOL-dev/Tanda-DAPP/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/Users/jalcantara/Desktop/SOL-dev/Tanda-DAPP/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/Users/jalcantara/Desktop/SOL-dev/Tanda-DAPP/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import bs58 from'bs58';import{Message,StakeInstruction,StakeProgram,SystemInstruction,SystemProgram}from'@solana/web3.js';import{decodeInstruction,Market,MARKETS,SETTLE_FUNDS_BASE_WALLET_INDEX,SETTLE_FUNDS_QUOTE_WALLET_INDEX,NEW_ORDER_OPEN_ORDERS_INDEX,NEW_ORDER_OWNER_INDEX,NEW_ORDER_V3_OPEN_ORDERS_INDEX,NEW_ORDER_V3_OWNER_INDEX}from'@project-serum/serum';import{decodeTokenInstruction}from'@project-serum/token';import{PublicKey}from'@solana/web3.js';import{TOKEN_PROGRAM_ID}from'./tokens/instructions';var RAYDIUM_STAKE_PROGRAM_ID=new PublicKey('EhhTKczWMGQt46ynNeRX1WfeagwwJd7ufHvCDjRxjo5Q');var RAYDIUM_LP_PROGRAM_ID=new PublicKey('RVKd61ztZW9GUwhRbbLoYVRE5Xf1B2tVscKqwZqXgEr');var MANGO_PROGRAM_ID=new PublicKey('JD3bq9hGdy38PuWQ4h2YJpELmHVGPPfFSuFkpzAd9zfu');var MANGO_PROGRAM_ID_V2=new PublicKey('5fNfvyp5czQVX77yoACa3JJVEhdRaWjPuazuWgjhTqEH');var marketCache={};var marketCacheConnection=null;var cacheDuration=15*1000;export var decodeMessage=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(connection,wallet,message){var transactionMessage,publicKey,instructions,i,transactionInstruction,instruction;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:// get message object\ntransactionMessage=Message.from(message);if(!(!(transactionMessage===null||transactionMessage===void 0?void 0:transactionMessage.instructions)||!(transactionMessage===null||transactionMessage===void 0?void 0:transactionMessage.accountKeys))){_context.next=3;break;}return _context.abrupt(\"return\");case 3:// get owned keys (used for security checks)\npublicKey=wallet.publicKey;// get instructions\ninstructions=[];i=0;case 6:if(!(i<transactionMessage.instructions.length)){_context.next=15;break;}transactionInstruction=transactionMessage.instructions[i];_context.next=10;return toInstruction(connection,publicKey,transactionMessage===null||transactionMessage===void 0?void 0:transactionMessage.accountKeys,transactionInstruction,transactionMessage,i);case 10:instruction=_context.sent;instructions.push(_objectSpread(_objectSpread({},instruction),{},{rawData:transactionInstruction===null||transactionInstruction===void 0?void 0:transactionInstruction.data}));case 12:i++;_context.next=6;break;case 15:return _context.abrupt(\"return\",instructions);case 16:case\"end\":return _context.stop();}}},_callee);}));return function decodeMessage(_x,_x2,_x3){return _ref.apply(this,arguments);};}();var toInstruction=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(connection,publicKey,accountKeys,instruction,transactionMessage,index){var decoded,programId,decodedInstruction,_decodedInstruction,_decodedInstruction2,_decodedInstruction3;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!((instruction===null||instruction===void 0?void 0:instruction.data)==null||!(instruction===null||instruction===void 0?void 0:instruction.accounts)||!(instruction===null||instruction===void 0?void 0:instruction.programIdIndex))){_context2.next=2;break;}return _context2.abrupt(\"return\");case 2:// get instruction data\ndecoded=bs58.decode(instruction.data);programId=getAccountByIndex([instruction.programIdIndex],accountKeys,0);if(programId){_context2.next=6;break;}return _context2.abrupt(\"return\",null);case 6:_context2.prev=6;if(!programId.equals(SystemProgram.programId)){_context2.next=12;break;}console.log('['+index+'] Handled as system instruction');return _context2.abrupt(\"return\",handleSystemInstruction(publicKey,instruction,accountKeys));case 12:if(!programId.equals(StakeProgram.programId)){_context2.next=17;break;}console.log('['+index+'] Handled as stake instruction');return _context2.abrupt(\"return\",handleStakeInstruction(publicKey,instruction,accountKeys));case 17:if(!programId.equals(TOKEN_PROGRAM_ID)){_context2.next=22;break;}console.log('['+index+'] Handled as token instruction');return _context2.abrupt(\"return\",handleTokenInstruction(publicKey,instruction,accountKeys));case 22:if(!MARKETS.some(function(market){return market.programId&&market.programId.equals(programId);})){_context2.next=30;break;}console.log('['+index+'] Handled as dex instruction');decodedInstruction=decodeInstruction(decoded);_context2.next=27;return handleDexInstruction(connection,instruction,accountKeys,decodedInstruction);case 27:return _context2.abrupt(\"return\",_context2.sent);case 30:if(!programId.equals(RAYDIUM_STAKE_PROGRAM_ID)){_context2.next=38;break;}console.log('['+index+'] Handled as raydium stake instruction');// @ts-ignore\n_decodedInstruction=decodeStakeInstruction(decoded);_context2.next=35;return handleRayStakeInstruction(connection,instruction,accountKeys,_decodedInstruction);case 35:return _context2.abrupt(\"return\",_context2.sent);case 38:if(!programId.equals(RAYDIUM_LP_PROGRAM_ID)){_context2.next=46;break;}console.log('['+index+'] Handled as raydium lp instruction');// @ts-ignore\n_decodedInstruction2=decodeLpInstruction(decoded);_context2.next=43;return handleRayLpInstruction(connection,instruction,accountKeys,_decodedInstruction2);case 43:return _context2.abrupt(\"return\",_context2.sent);case 46:if(!(programId.equals(MANGO_PROGRAM_ID)||programId.equals(MANGO_PROGRAM_ID_V2))){_context2.next=54;break;}console.log('['+index+'] Handled as mango markets instruction');// @ts-ignore\n_decodedInstruction3=decodeMangoInstruction(decoded);_context2.next=51;return handleMangoInstruction(connection,instruction,accountKeys,_decodedInstruction3);case 51:return _context2.abrupt(\"return\",_context2.sent);case 54:return _context2.abrupt(\"return\",{type:'Unknown',accountMetas:instruction.accounts.map(function(index){return{publicKey:accountKeys[index],isWritable:transactionMessage.isAccountWritable(index)};}),programId:programId});case 55:_context2.next=60;break;case 57:_context2.prev=57;_context2.t0=_context2[\"catch\"](6);console.log(\"Failed to decode instruction: \".concat(_context2.t0));case 60:// all decodings failed\nconsole.log('['+index+'] Failed, data: '+JSON.stringify(decoded));return _context2.abrupt(\"return\");case 62:case\"end\":return _context2.stop();}}},_callee2,null,[[6,57]]);}));return function toInstruction(_x4,_x5,_x6,_x7,_x8,_x9){return _ref2.apply(this,arguments);};}();var handleMangoInstruction=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(connection,instruction,accountKeys,decodedInstruction){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:return _context3.abrupt(\"return\",{type:'mango'});case 1:case\"end\":return _context3.stop();}}},_callee3);}));return function handleMangoInstruction(_x10,_x11,_x12,_x13){return _ref3.apply(this,arguments);};}();var handleRayStakeInstruction=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(connection,instruction,accountKeys,decodedInstruction){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:return _context4.abrupt(\"return\",{type:'raydium'});case 1:case\"end\":return _context4.stop();}}},_callee4);}));return function handleRayStakeInstruction(_x14,_x15,_x16,_x17){return _ref4.apply(this,arguments);};}();var handleRayLpInstruction=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(connection,instruction,accountKeys,decodedInstruction){return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:return _context5.abrupt(\"return\",{type:'raydium'});case 1:case\"end\":return _context5.stop();}}},_callee5);}));return function handleRayLpInstruction(_x18,_x19,_x20,_x21){return _ref5.apply(this,arguments);};}();var decodeMangoInstruction=function decodeMangoInstruction(){// TODO\nreturn undefined;};var decodeStakeInstruction=function decodeStakeInstruction(){// TODO\nreturn undefined;};var decodeLpInstruction=function decodeLpInstruction(){// TODO\nreturn undefined;};var handleDexInstruction=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(connection,instruction,accountKeys,decodedInstruction){var accounts,programIdIndex,marketInfo,market,programIdAddress,marketAddress,strAddress,now,type,data,settleFundsData,newOrderData,_newOrderData;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:if(!(!decodedInstruction||Object.keys(decodedInstruction).length>1)){_context6.next=2;break;}return _context6.abrupt(\"return\");case 2:accounts=instruction.accounts,programIdIndex=instruction.programIdIndex;// get market info\nmarketInfo=accountKeys&&MARKETS.find(function(market){return accountKeys.findIndex(function(accountKey){return accountKey.equals(market.address);})>-1;});// get market\n_context6.prev=4;marketAddress=(marketInfo===null||marketInfo===void 0?void 0:marketInfo.address)||getAccountByIndex(accounts,accountKeys,0);programIdAddress=(marketInfo===null||marketInfo===void 0?void 0:marketInfo.programId)||getAccountByIndex([programIdIndex],accountKeys,0);strAddress=marketAddress.toBase58();now=new Date().getTime();if(connection===marketCacheConnection&&strAddress in marketCache&&now-marketCache[strAddress].ts<cacheDuration){_context6.next=17;break;}marketCacheConnection=connection;console.log('Loading market',strAddress);_context6.next=14;return Market.load(connection,marketAddress,{},programIdAddress);case 14:_context6.t0=_context6.sent;_context6.t1=now;marketCache[strAddress]={market:_context6.t0,ts:_context6.t1};case 17:market=marketCache[strAddress].market;_context6.next=23;break;case 20:_context6.prev=20;_context6.t2=_context6[\"catch\"](4);console.log('Error loading market: '+_context6.t2.message);case 23:// get data\ntype=Object.keys(decodedInstruction)[0];data=decodedInstruction[type];if(!(type==='settleFunds')){_context6.next=34;break;}settleFundsData=getSettleFundsData(accounts,accountKeys);if(settleFundsData){_context6.next=31;break;}return _context6.abrupt(\"return\");case 31:data=_objectSpread(_objectSpread({},data),settleFundsData);case 32:_context6.next=35;break;case 34:if(type==='newOrder'){newOrderData=getNewOrderData(accounts,accountKeys);data=_objectSpread(_objectSpread({},data),newOrderData);}else if(type==='newOrderV3'){_newOrderData=getNewOrderV3Data(accounts,accountKeys);data=_objectSpread(_objectSpread({},data),_newOrderData);}case 35:return _context6.abrupt(\"return\",{type:type,data:data,market:market,marketInfo:marketInfo});case 36:case\"end\":return _context6.stop();}}},_callee6,null,[[4,20]]);}));return function handleDexInstruction(_x22,_x23,_x24,_x25){return _ref6.apply(this,arguments);};}();var handleSystemInstruction=function handleSystemInstruction(publicKey,instruction,accountKeys){var programIdIndex=instruction.programIdIndex,accounts=instruction.accounts,data=instruction.data;if(!programIdIndex||!accounts||!data){return;}// construct system instruction\nvar systemInstruction={programId:accountKeys[programIdIndex],keys:accounts.map(function(accountIndex){return{pubkey:accountKeys[accountIndex]};}),data:bs58.decode(data)};// get layout\nvar decoded;var type=SystemInstruction.decodeInstructionType(systemInstruction);switch(type){case'Create':decoded=SystemInstruction.decodeCreateAccount(systemInstruction);break;case'CreateWithSeed':decoded=SystemInstruction.decodeCreateWithSeed(systemInstruction);break;case'Allocate':decoded=SystemInstruction.decodeAllocate(systemInstruction);break;case'AllocateWithSeed':decoded=SystemInstruction.decodeAllocateWithSeed(systemInstruction);break;case'Assign':decoded=SystemInstruction.decodeAssign(systemInstruction);break;case'AssignWithSeed':decoded=SystemInstruction.decodeAssignWithSeed(systemInstruction);break;case'Transfer':decoded=SystemInstruction.decodeTransfer(systemInstruction);break;case'AdvanceNonceAccount':decoded=SystemInstruction.decodeNonceAdvance(systemInstruction);break;case'WithdrawNonceAccount':decoded=SystemInstruction.decodeNonceWithdraw(systemInstruction);break;case'InitializeNonceAccount':decoded=SystemInstruction.decodeNonceInitialize(systemInstruction);break;case'AuthorizeNonceAccount':decoded=SystemInstruction.decodeNonceAuthorize(systemInstruction);break;default:return;}if(!decoded||decoded.fromPubkey&&!publicKey.equals(decoded.fromPubkey)){return;}return{type:'system'+type,data:decoded};};var handleStakeInstruction=function handleStakeInstruction(publicKey,instruction,accountKeys){var programIdIndex=instruction.programIdIndex,accounts=instruction.accounts,data=instruction.data;if(!programIdIndex||!accounts||!data){return;}// construct stake instruction\nvar stakeInstruction={programId:accountKeys[programIdIndex],keys:accounts.map(function(accountIndex){return{pubkey:accountKeys[accountIndex]};}),data:bs58.decode(data)};var decoded;var type=StakeInstruction.decodeInstructionType(stakeInstruction);switch(type){case'AuthorizeWithSeed':decoded=StakeInstruction.decodeAuthorizeWithSeed(stakeInstruction);break;case'Authorize':decoded=StakeInstruction.decodeAuthorize(stakeInstruction);break;case'Deactivate':decoded=StakeInstruction.decodeDeactivate(stakeInstruction);break;case'Delegate':decoded=StakeInstruction.decodeDelegate(stakeInstruction);break;case'Initialize':decoded=StakeInstruction.decodeInitialize(stakeInstruction);// Lockup inactive if all zeroes\nvar lockup=decoded.lockup;if(lockup&&lockup.unixTimestamp===0&&lockup.epoch===0&&lockup.custodian.equals(PublicKey.default)){decoded.lockup='Inactive';}else{decoded.lockup=\"unixTimestamp: \".concat(lockup.unixTimestamp,\", custodian: \").concat(lockup.epoch,\", custodian: \").concat(lockup.custodian.toBase58());}// flatten authorized to allow address render\ndecoded.authorizedStaker=decoded.authorized.staker;decoded.authorizedWithdrawer=decoded.authorized.withdrawer;delete decoded.authorized;break;case'Split':decoded=StakeInstruction.decodeSplit(stakeInstruction);break;case'Withdraw':decoded=StakeInstruction.decodeWithdraw(stakeInstruction);break;default:return;}if(!decoded||decoded.fromPubkey&&!publicKey.equals(decoded.fromPubkey)){return;}return{type:'stake'+type,data:decoded};};var handleTokenInstruction=function handleTokenInstruction(publicKey,instruction,accountKeys){var programIdIndex=instruction.programIdIndex,accounts=instruction.accounts,data=instruction.data;if(!programIdIndex||!accounts||!data){return;}// construct token instruction\nvar tokenInstruction={programId:accountKeys[programIdIndex],keys:accounts.map(function(accountIndex){return{pubkey:accountKeys[accountIndex]};}),data:bs58.decode(data)};var decoded=decodeTokenInstruction(tokenInstruction);return{type:decoded.type,data:decoded.params};};var getNewOrderData=function getNewOrderData(accounts,accountKeys){var openOrdersPubkey=getAccountByIndex(accounts,accountKeys,NEW_ORDER_OPEN_ORDERS_INDEX);var ownerPubkey=getAccountByIndex(accounts,accountKeys,NEW_ORDER_OWNER_INDEX);return{openOrdersPubkey:openOrdersPubkey,ownerPubkey:ownerPubkey};};var getNewOrderV3Data=function getNewOrderV3Data(accounts,accountKeys){var openOrdersPubkey=getAccountByIndex(accounts,accountKeys,NEW_ORDER_V3_OPEN_ORDERS_INDEX);var ownerPubkey=getAccountByIndex(accounts,accountKeys,NEW_ORDER_V3_OWNER_INDEX);return{openOrdersPubkey:openOrdersPubkey,ownerPubkey:ownerPubkey};};var getSettleFundsData=function getSettleFundsData(accounts,accountKeys){var basePubkey=getAccountByIndex(accounts,accountKeys,SETTLE_FUNDS_BASE_WALLET_INDEX);var quotePubkey=getAccountByIndex(accounts,accountKeys,SETTLE_FUNDS_QUOTE_WALLET_INDEX);if(!basePubkey||!quotePubkey){return;}return{basePubkey:basePubkey,quotePubkey:quotePubkey};};var getAccountByIndex=function getAccountByIndex(accounts,accountKeys,accountIndex){var index=accounts.length>accountIndex&&accounts[accountIndex];return(accountKeys===null||accountKeys===void 0?void 0:accountKeys.length)>index&&accountKeys[index];};","map":{"version":3,"sources":["/Users/jalcantara/Desktop/SOL-dev/Tanda-DAPP/src/utils/transactions.ts"],"names":["bs58","Message","StakeInstruction","StakeProgram","SystemInstruction","SystemProgram","decodeInstruction","Market","MARKETS","SETTLE_FUNDS_BASE_WALLET_INDEX","SETTLE_FUNDS_QUOTE_WALLET_INDEX","NEW_ORDER_OPEN_ORDERS_INDEX","NEW_ORDER_OWNER_INDEX","NEW_ORDER_V3_OPEN_ORDERS_INDEX","NEW_ORDER_V3_OWNER_INDEX","decodeTokenInstruction","PublicKey","TOKEN_PROGRAM_ID","RAYDIUM_STAKE_PROGRAM_ID","RAYDIUM_LP_PROGRAM_ID","MANGO_PROGRAM_ID","MANGO_PROGRAM_ID_V2","marketCache","marketCacheConnection","cacheDuration","decodeMessage","connection","wallet","message","transactionMessage","from","instructions","accountKeys","publicKey","i","length","transactionInstruction","toInstruction","instruction","push","rawData","data","index","accounts","programIdIndex","decoded","decode","programId","getAccountByIndex","equals","console","log","handleSystemInstruction","handleStakeInstruction","handleTokenInstruction","some","market","decodedInstruction","handleDexInstruction","decodeStakeInstruction","handleRayStakeInstruction","decodeLpInstruction","handleRayLpInstruction","decodeMangoInstruction","handleMangoInstruction","type","accountMetas","map","isWritable","isAccountWritable","JSON","stringify","undefined","Object","keys","marketInfo","find","findIndex","accountKey","address","marketAddress","programIdAddress","strAddress","toBase58","now","Date","getTime","ts","load","settleFundsData","getSettleFundsData","newOrderData","getNewOrderData","getNewOrderV3Data","systemInstruction","accountIndex","pubkey","decodeInstructionType","decodeCreateAccount","decodeCreateWithSeed","decodeAllocate","decodeAllocateWithSeed","decodeAssign","decodeAssignWithSeed","decodeTransfer","decodeNonceAdvance","decodeNonceWithdraw","decodeNonceInitialize","decodeNonceAuthorize","fromPubkey","stakeInstruction","decodeAuthorizeWithSeed","decodeAuthorize","decodeDeactivate","decodeDelegate","decodeInitialize","lockup","unixTimestamp","epoch","custodian","default","authorizedStaker","authorized","staker","authorizedWithdrawer","withdrawer","decodeSplit","decodeWithdraw","tokenInstruction","params","openOrdersPubkey","ownerPubkey","basePubkey","quotePubkey"],"mappings":"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","sourcesContent":["import bs58 from 'bs58';\nimport { Connection, Message, StakeInstruction, StakeProgram, SystemInstruction, SystemProgram } from '@solana/web3.js';\nimport {\n  decodeInstruction,\n  Market,\n  MARKETS,\n  SETTLE_FUNDS_BASE_WALLET_INDEX,\n  SETTLE_FUNDS_QUOTE_WALLET_INDEX,\n  NEW_ORDER_OPEN_ORDERS_INDEX,\n  NEW_ORDER_OWNER_INDEX,\n  NEW_ORDER_V3_OPEN_ORDERS_INDEX,\n  NEW_ORDER_V3_OWNER_INDEX,\n} from '@project-serum/serum';\nimport { decodeTokenInstruction } from '@project-serum/token';\nimport { PublicKey } from '@solana/web3.js';\nimport { TOKEN_PROGRAM_ID } from './tokens/instructions';\nimport { Wallet } from './wallet';\n\nconst RAYDIUM_STAKE_PROGRAM_ID = new PublicKey(\n  'EhhTKczWMGQt46ynNeRX1WfeagwwJd7ufHvCDjRxjo5Q',\n);\nconst RAYDIUM_LP_PROGRAM_ID = new PublicKey(\n  'RVKd61ztZW9GUwhRbbLoYVRE5Xf1B2tVscKqwZqXgEr',\n);\n\nconst MANGO_PROGRAM_ID = new PublicKey(\n  'JD3bq9hGdy38PuWQ4h2YJpELmHVGPPfFSuFkpzAd9zfu',\n);\nconst MANGO_PROGRAM_ID_V2 = new PublicKey(\n  '5fNfvyp5czQVX77yoACa3JJVEhdRaWjPuazuWgjhTqEH',\n);\n\nconst marketCache = {};\nlet marketCacheConnection = null;\nconst cacheDuration = 15 * 1000;\n\nexport const decodeMessage = async (connection: Connection, wallet: Wallet, message: Buffer) => {\n  // get message object\n  const transactionMessage = Message.from(message);\n  if (!transactionMessage?.instructions || !transactionMessage?.accountKeys) {\n    return;\n  }\n\n  // get owned keys (used for security checks)\n  const publicKey = wallet.publicKey;\n\n  // get instructions\n  const instructions: any[] = [];\n  for (var i = 0; i < transactionMessage.instructions.length; i++) {\n    let transactionInstruction = transactionMessage.instructions[i];\n    const instruction = await toInstruction(\n      connection,\n      publicKey,\n      transactionMessage?.accountKeys,\n      transactionInstruction,\n      transactionMessage,\n      i,\n    );\n    instructions.push({\n      ...instruction,\n      rawData: transactionInstruction?.data,\n    });\n  }\n  return instructions;\n};\n\nconst toInstruction = async (\n  connection: Connection,\n  publicKey: PublicKey,\n  accountKeys,\n  instruction,\n  transactionMessage: Message,\n  index: number,\n) => {\n  if (\n    instruction?.data == null ||\n    !instruction?.accounts ||\n    !instruction?.programIdIndex\n  ) {\n    return;\n  }\n\n  // get instruction data\n  const decoded = bs58.decode(instruction.data);\n\n  const programId = getAccountByIndex(\n    [instruction.programIdIndex],\n    accountKeys,\n    0,\n  );\n  if (!programId) {\n    return null;\n  }\n\n  try {\n    if (programId.equals(SystemProgram.programId)) {\n      console.log('[' + index + '] Handled as system instruction');\n      return handleSystemInstruction(publicKey, instruction, accountKeys);\n    } else if (programId.equals(StakeProgram.programId)) {\n      console.log('[' + index + '] Handled as stake instruction');\n      return handleStakeInstruction(publicKey, instruction, accountKeys);\n    } else if (programId.equals(TOKEN_PROGRAM_ID)) {\n      console.log('[' + index + '] Handled as token instruction');\n      return handleTokenInstruction(publicKey, instruction, accountKeys);\n    } else if (\n      MARKETS.some(\n        (market) => market.programId && market.programId.equals(programId),\n      )\n    ) {\n      console.log('[' + index + '] Handled as dex instruction');\n      let decodedInstruction = decodeInstruction(decoded);\n      return await handleDexInstruction(\n        connection,\n        instruction,\n        accountKeys,\n        decodedInstruction,\n      );\n    } else if (programId.equals(RAYDIUM_STAKE_PROGRAM_ID)) {\n      console.log('[' + index + '] Handled as raydium stake instruction');\n      // @ts-ignore\n      const decodedInstruction = decodeStakeInstruction(decoded);\n      return await handleRayStakeInstruction(\n        connection,\n        instruction,\n        accountKeys,\n        decodedInstruction,\n      );\n    } else if (programId.equals(RAYDIUM_LP_PROGRAM_ID)) {\n      console.log('[' + index + '] Handled as raydium lp instruction');\n      // @ts-ignore\n      const decodedInstruction = decodeLpInstruction(decoded);\n      return await handleRayLpInstruction(\n        connection,\n        instruction,\n        accountKeys,\n        decodedInstruction,\n      );\n    } else if (programId.equals(MANGO_PROGRAM_ID) || programId.equals(MANGO_PROGRAM_ID_V2)) {\n      console.log('[' + index + '] Handled as mango markets instruction');\n      // @ts-ignore\n      let decodedInstruction = decodeMangoInstruction(decoded);\n      return await handleMangoInstruction(\n        connection,\n        instruction,\n        accountKeys,\n        decodedInstruction,\n      );\n    } else {\n      return {\n        type: 'Unknown',\n        accountMetas: instruction.accounts.map((index) => ({\n          publicKey: accountKeys[index],\n          isWritable: transactionMessage.isAccountWritable(index),\n        })),\n        programId,\n      };\n    }\n  } catch (e) {\n    console.log(`Failed to decode instruction: ${e}`);\n  }\n\n  // all decodings failed\n  console.log('[' + index + '] Failed, data: ' + JSON.stringify(decoded));\n\n  return;\n};\n\nconst handleMangoInstruction = async (\n  connection,\n  instruction,\n  accountKeys,\n  decodedInstruction,\n) => {\n  // TODO\n  return {\n    type: 'mango',\n  };\n};\n\nconst handleRayStakeInstruction = async (\n  connection,\n  instruction,\n  accountKeys,\n  decodedInstruction,\n) => {\n  // TODO\n  return {\n    type: 'raydium',\n  };\n};\n\nconst handleRayLpInstruction = async (\n  connection,\n  instruction,\n  accountKeys,\n  decodedInstruction,\n) => {\n  // TODO\n  return {\n    type: 'raydium',\n  };\n};\n\nconst decodeMangoInstruction = () => {\n  // TODO\n  return undefined;\n};\n\nconst decodeStakeInstruction = () => {\n  // TODO\n  return undefined;\n};\n\nconst decodeLpInstruction = () => {\n  // TODO\n  return undefined;\n};\n\nconst handleDexInstruction = async (\n  connection,\n  instruction,\n  accountKeys,\n  decodedInstruction,\n) => {\n  if (!decodedInstruction || Object.keys(decodedInstruction).length > 1) {\n    return;\n  }\n\n  const { accounts, programIdIndex } = instruction;\n\n  // get market info\n  const marketInfo =\n    accountKeys &&\n    MARKETS.find(\n      (market) =>\n        accountKeys.findIndex((accountKey) =>\n          accountKey.equals(market.address),\n        ) > -1,\n    );\n\n  // get market\n  let market, programIdAddress;\n  try {\n    const marketAddress =\n      marketInfo?.address || getAccountByIndex(accounts, accountKeys, 0);\n    programIdAddress =\n      marketInfo?.programId ||\n      getAccountByIndex([programIdIndex], accountKeys, 0);\n    const strAddress = marketAddress.toBase58();\n    const now = new Date().getTime();\n    if (\n      !(\n        connection === marketCacheConnection &&\n        strAddress in marketCache &&\n        now - marketCache[strAddress].ts < cacheDuration\n      )\n    ) {\n      marketCacheConnection = connection;\n      console.log('Loading market', strAddress);\n      marketCache[strAddress] = {\n        market: await Market.load(\n          connection,\n          marketAddress,\n          {},\n          programIdAddress,\n        ),\n        ts: now,\n      };\n    }\n    market = marketCache[strAddress].market;\n  } catch (e) {\n    console.log('Error loading market: ' + e.message);\n  }\n\n  // get data\n  const type = Object.keys(decodedInstruction)[0];\n  let data = decodedInstruction[type];\n  if (type === 'settleFunds') {\n    const settleFundsData = getSettleFundsData(accounts, accountKeys);\n    if (!settleFundsData) {\n      return;\n    } else {\n      data = { ...data, ...settleFundsData };\n    }\n  } else if (type === 'newOrder') {\n    const newOrderData = getNewOrderData(accounts, accountKeys);\n    data = { ...data, ...newOrderData };\n  } else if (type === 'newOrderV3') {\n    const newOrderData = getNewOrderV3Data(accounts, accountKeys);\n    data = { ...data, ...newOrderData };\n  }\n  return {\n    type,\n    data,\n    market,\n    marketInfo,\n  };\n};\n\nconst handleSystemInstruction = (publicKey, instruction, accountKeys) => {\n  const { programIdIndex, accounts, data } = instruction;\n  if (!programIdIndex || !accounts || !data) {\n    return;\n  }\n\n  // construct system instruction\n  const systemInstruction = {\n    programId: accountKeys[programIdIndex],\n    keys: accounts.map((accountIndex) => ({\n      pubkey: accountKeys[accountIndex],\n    })),\n    data: bs58.decode(data),\n  };\n\n  // get layout\n  let decoded;\n  const type = SystemInstruction.decodeInstructionType(systemInstruction);\n  switch (type) {\n    case 'Create':\n      decoded = SystemInstruction.decodeCreateAccount(systemInstruction);\n      break;\n    case 'CreateWithSeed':\n      decoded = SystemInstruction.decodeCreateWithSeed(systemInstruction);\n      break;\n    case 'Allocate':\n      decoded = SystemInstruction.decodeAllocate(systemInstruction);\n      break;\n    case 'AllocateWithSeed':\n      decoded = SystemInstruction.decodeAllocateWithSeed(systemInstruction);\n      break;\n    case 'Assign':\n      decoded = SystemInstruction.decodeAssign(systemInstruction);\n      break;\n    case 'AssignWithSeed':\n      decoded = SystemInstruction.decodeAssignWithSeed(systemInstruction);\n      break;\n    case 'Transfer':\n      decoded = SystemInstruction.decodeTransfer(systemInstruction);\n      break;\n    case 'AdvanceNonceAccount':\n      decoded = SystemInstruction.decodeNonceAdvance(systemInstruction);\n      break;\n    case 'WithdrawNonceAccount':\n      decoded = SystemInstruction.decodeNonceWithdraw(systemInstruction);\n      break;\n    case 'InitializeNonceAccount':\n      decoded = SystemInstruction.decodeNonceInitialize(systemInstruction);\n      break;\n    case 'AuthorizeNonceAccount':\n      decoded = SystemInstruction.decodeNonceAuthorize(systemInstruction);\n      break;\n    default:\n      return;\n  }\n\n  if (\n    !decoded ||\n    (decoded.fromPubkey && !publicKey.equals(decoded.fromPubkey))\n  ) {\n    return;\n  }\n\n  return {\n    type: 'system' + type,\n    data: decoded,\n  };\n};\n\nconst handleStakeInstruction = (publicKey, instruction, accountKeys) => {\n  const { programIdIndex, accounts, data } = instruction;\n  if (!programIdIndex || !accounts || !data) {\n    return;\n  }\n\n  // construct stake instruction\n  const stakeInstruction = {\n    programId: accountKeys[programIdIndex],\n    keys: accounts.map((accountIndex) => ({\n      pubkey: accountKeys[accountIndex],\n    })),\n    data: bs58.decode(data),\n  };\n\n  let decoded;\n  const type = StakeInstruction.decodeInstructionType(stakeInstruction);\n  switch (type) {\n    case 'AuthorizeWithSeed':\n      decoded = StakeInstruction.decodeAuthorizeWithSeed(stakeInstruction);\n      break;\n    case 'Authorize':\n      decoded = StakeInstruction.decodeAuthorize(stakeInstruction);\n      break;\n    case 'Deactivate':\n      decoded = StakeInstruction.decodeDeactivate(stakeInstruction);\n      break;\n    case 'Delegate':\n      decoded = StakeInstruction.decodeDelegate(stakeInstruction);\n      break;\n    case 'Initialize':\n      decoded = StakeInstruction.decodeInitialize(stakeInstruction);\n      // Lockup inactive if all zeroes\n      const lockup = decoded.lockup;\n      if (lockup && lockup.unixTimestamp === 0 && lockup.epoch === 0 && lockup.custodian.equals(PublicKey.default)) {\n        decoded.lockup = 'Inactive';\n      }\n      else {\n        decoded.lockup = `unixTimestamp: ${lockup.unixTimestamp}, custodian: ${lockup.epoch}, custodian: ${lockup.custodian.toBase58()}`;\n      }\n      // flatten authorized to allow address render\n      decoded.authorizedStaker = decoded.authorized.staker\n      decoded.authorizedWithdrawer = decoded.authorized.withdrawer\n      delete decoded.authorized\n      break;\n    case 'Split':\n      decoded = StakeInstruction.decodeSplit(stakeInstruction);\n      break;\n    case 'Withdraw':\n      decoded = StakeInstruction.decodeWithdraw(stakeInstruction);\n      break;\n    default:\n      return;\n  }\n\n  if (\n    !decoded ||\n    (decoded.fromPubkey && !publicKey.equals(decoded.fromPubkey))\n  ) {\n    return;\n  }\n\n  return {\n    type: 'stake' + type,\n    data: decoded,\n  };\n};\n\nconst handleTokenInstruction = (\n  publicKey: PublicKey,\n  instruction,\n  accountKeys,\n) => {\n  const { programIdIndex, accounts, data } = instruction;\n  if (!programIdIndex || !accounts || !data) {\n    return;\n  }\n\n  // construct token instruction\n  const tokenInstruction = {\n    programId: accountKeys[programIdIndex],\n    keys: accounts.map((accountIndex) => ({\n      pubkey: accountKeys[accountIndex],\n    })),\n    data: bs58.decode(data),\n  };\n\n  let decoded = decodeTokenInstruction(tokenInstruction);\n\n  return {\n    type: decoded.type,\n    data: decoded.params,\n  }\n};\n\nconst getNewOrderData = (accounts, accountKeys) => {\n  const openOrdersPubkey = getAccountByIndex(\n    accounts,\n    accountKeys,\n    NEW_ORDER_OPEN_ORDERS_INDEX,\n  );\n  const ownerPubkey = getAccountByIndex(\n    accounts,\n    accountKeys,\n    NEW_ORDER_OWNER_INDEX,\n  );\n  return { openOrdersPubkey, ownerPubkey };\n};\n\nconst getNewOrderV3Data = (accounts, accountKeys) => {\n  const openOrdersPubkey = getAccountByIndex(\n    accounts,\n    accountKeys,\n    NEW_ORDER_V3_OPEN_ORDERS_INDEX,\n  );\n  const ownerPubkey = getAccountByIndex(\n    accounts,\n    accountKeys,\n    NEW_ORDER_V3_OWNER_INDEX,\n  );\n  return { openOrdersPubkey, ownerPubkey };\n};\n\nconst getSettleFundsData = (accounts, accountKeys) => {\n  const basePubkey = getAccountByIndex(\n    accounts,\n    accountKeys,\n    SETTLE_FUNDS_BASE_WALLET_INDEX,\n  );\n\n  const quotePubkey = getAccountByIndex(\n    accounts,\n    accountKeys,\n    SETTLE_FUNDS_QUOTE_WALLET_INDEX,\n  );\n\n  if (!basePubkey || !quotePubkey) {\n    return;\n  }\n\n  return { basePubkey, quotePubkey };\n};\n\nconst getAccountByIndex = (accounts, accountKeys, accountIndex) => {\n  const index = accounts.length > accountIndex && accounts[accountIndex];\n  return accountKeys?.length > index && accountKeys[index];\n};\n"]},"metadata":{},"sourceType":"module"}