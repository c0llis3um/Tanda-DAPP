{"ast":null,"code":"import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React from'react';import LabelValue from'./LabelValue';import Typography from'@material-ui/core/Typography';export default function UnknownInstruction(_ref){var _instruction$programI;var instruction=_ref.instruction,onOpenAddress=_ref.onOpenAddress;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",style:{fontWeight:'bold'},gutterBottom:true,children:\"Unknown instruction:\"}),/*#__PURE__*/_jsx(LabelValue,{label:\"Program\",value:(_instruction$programI=instruction.programId)===null||_instruction$programI===void 0?void 0:_instruction$programI.toBase58(),link:true,gutterBottom:true,onClick:function onClick(){return onOpenAddress(instruction.programId.toBase58());}},\"Program\"),instruction.accountMetas&&instruction.accountMetas.map(function(accountMeta,index){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(LabelValue,{label:'Account #'+(index+1),value:accountMeta.publicKey.toBase58(),link:true,onClick:function onClick(){return onOpenAddress(accountMeta.publicKey.toBase58());}},index+''),/*#__PURE__*/_jsxs(Typography,{gutterBottom:true,children:[\"Writable: \",accountMeta.isWritable.toString()]})]});}),/*#__PURE__*/_jsxs(Typography,{style:{wordBreak:'break-all'},children:[\"Data: \",instruction.rawData]})]});}","map":{"version":3,"sources":["/Users/jalcantara/Desktop/SOL-dev/tanda-wallet-sol/src/components/instructions/UnknownInstruction.js"],"names":["React","LabelValue","Typography","UnknownInstruction","instruction","onOpenAddress","fontWeight","programId","toBase58","accountMetas","map","accountMeta","index","publicKey","isWritable","toString","wordBreak","rawData"],"mappings":"6IAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CAEA,cAAe,SAASC,CAAAA,kBAAT,MAA4D,8BAA9BC,CAAAA,WAA8B,MAA9BA,WAA8B,CAAjBC,aAAiB,MAAjBA,aAAiB,CACzE,mBACE,wCACE,KAAC,UAAD,EACE,OAAO,CAAC,WADV,CAEE,KAAK,CAAE,CAAEC,UAAU,CAAE,MAAd,CAFT,CAGE,YAAY,KAHd,kCADF,cAQE,KAAC,UAAD,EAEE,KAAK,CAAC,SAFR,CAGE,KAAK,wBAAEF,WAAW,CAACG,SAAd,gDAAE,sBAAuBC,QAAvB,EAHT,CAIE,IAAI,CAAE,IAJR,CAKE,YAAY,CAAE,IALhB,CAME,OAAO,CAAE,yBAAMH,CAAAA,aAAa,CAACD,WAAW,CAACG,SAAZ,CAAsBC,QAAtB,EAAD,CAAnB,EANX,EACM,SADN,CARF,CAgBGJ,WAAW,CAACK,YAAZ,EACCL,WAAW,CAACK,YAAZ,CAAyBC,GAAzB,CAA6B,SAACC,WAAD,CAAcC,KAAd,CAAwB,CACnD,mBACE,wCACE,KAAC,UAAD,EAEE,KAAK,CAAE,aAAeA,KAAK,CAAG,CAAvB,CAFT,CAGE,KAAK,CAAED,WAAW,CAACE,SAAZ,CAAsBL,QAAtB,EAHT,CAIE,IAAI,CAAE,IAJR,CAKE,OAAO,CAAE,yBAAMH,CAAAA,aAAa,CAACM,WAAW,CAACE,SAAZ,CAAsBL,QAAtB,EAAD,CAAnB,EALX,EACOI,KAAK,CAAG,EADf,CADF,cAQE,MAAC,UAAD,EAAY,YAAY,KAAxB,wBACaD,WAAW,CAACG,UAAZ,CAAuBC,QAAvB,EADb,GARF,GADF,CAcD,CAfD,CAjBJ,cAiCE,MAAC,UAAD,EAAY,KAAK,CAAE,CAAEC,SAAS,CAAE,WAAb,CAAnB,oBACSZ,WAAW,CAACa,OADrB,GAjCF,GADF,CAuCD","sourcesContent":["import React from 'react';\nimport LabelValue from './LabelValue';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function UnknownInstruction({ instruction, onOpenAddress }) {\n  return (\n    <>\n      <Typography\n        variant=\"subtitle1\"\n        style={{ fontWeight: 'bold' }}\n        gutterBottom\n      >\n        Unknown instruction:\n      </Typography>\n      <LabelValue\n        key=\"Program\"\n        label=\"Program\"\n        value={instruction.programId?.toBase58()}\n        link={true}\n        gutterBottom={true}\n        onClick={() => onOpenAddress(instruction.programId.toBase58())}\n      />\n      {instruction.accountMetas &&\n        instruction.accountMetas.map((accountMeta, index) => {\n          return (\n            <>\n              <LabelValue\n                key={index + ''}\n                label={'Account #' + (index + 1)}\n                value={accountMeta.publicKey.toBase58()}\n                link={true}\n                onClick={() => onOpenAddress(accountMeta.publicKey.toBase58())}\n              />\n              <Typography gutterBottom>\n                Writable: {accountMeta.isWritable.toString()}\n              </Typography>\n            </>\n          );\n        })}\n      <Typography style={{ wordBreak: 'break-all' }}>\n        Data: {instruction.rawData}\n      </Typography>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}