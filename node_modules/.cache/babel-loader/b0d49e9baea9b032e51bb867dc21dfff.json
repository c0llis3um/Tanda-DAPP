{"ast":null,"code":"import{clusterApiUrl}from'@solana/web3.js';import{MAINNET_URL,MAINNET_BACKUP_URL}from'../utils/connection';export var CLUSTERS=[{name:'mainnet-beta',apiUrl:MAINNET_URL,label:'Mainnet Beta',clusterSlug:'mainnet-beta'},{name:'mainnet-beta-backup',apiUrl:MAINNET_BACKUP_URL,label:'Mainnet Beta Backup',clusterSlug:'mainnet-beta'},{name:'devnet',apiUrl:clusterApiUrl('devnet'),label:'Devnet',clusterSlug:'devnet'},{name:'testnet',apiUrl:clusterApiUrl('testnet'),label:'Testnet',clusterSlug:'testnet'},{name:'localnet',apiUrl:'http://localhost:8899',label:null,clusterSlug:'localnet'}];export function clusterForEndpoint(endpoint){return getClusters().find(function(_ref){var apiUrl=_ref.apiUrl;return apiUrl===endpoint;});}var customClusterConfigKey=\"customClusterConfig\";export function addCustomCluster(name,apiUrl){var stringifiedConfig=JSON.stringify({name:name,label:name,apiUrl:apiUrl,clusterSlug:null});localStorage.setItem(customClusterConfigKey,stringifiedConfig);}export function customClusterExists(){return!!localStorage.getItem(customClusterConfigKey);}export function getClusters(){var stringifiedConfig=localStorage.getItem(customClusterConfigKey);var config=stringifiedConfig?JSON.parse(stringifiedConfig):null;return config?[].concat(CLUSTERS,[config]):CLUSTERS;}","map":{"version":3,"sources":["/Users/jalcantara/Desktop/SOL-dev/Tanda-DAPP/src/utils/clusters.js"],"names":["clusterApiUrl","MAINNET_URL","MAINNET_BACKUP_URL","CLUSTERS","name","apiUrl","label","clusterSlug","clusterForEndpoint","endpoint","getClusters","find","customClusterConfigKey","addCustomCluster","stringifiedConfig","JSON","stringify","localStorage","setItem","customClusterExists","getItem","config","parse"],"mappings":"AAAA,OAASA,aAAT,KAA8B,iBAA9B,CACA,OAASC,WAAT,CAAsBC,kBAAtB,KAAgD,qBAAhD,CAEA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,CACtB,CACEC,IAAI,CAAE,cADR,CAEEC,MAAM,CAAEJ,WAFV,CAGEK,KAAK,CAAE,cAHT,CAIEC,WAAW,CAAE,cAJf,CADsB,CAOtB,CACEH,IAAI,CAAE,qBADR,CAEEC,MAAM,CAAEH,kBAFV,CAGII,KAAK,CAAE,qBAHX,CAIEC,WAAW,CAAE,cAJf,CAPsB,CAatB,CACEH,IAAI,CAAE,QADR,CAEEC,MAAM,CAAEL,aAAa,CAAC,QAAD,CAFvB,CAGEM,KAAK,CAAE,QAHT,CAIEC,WAAW,CAAE,QAJf,CAbsB,CAmBtB,CACEH,IAAI,CAAE,SADR,CAEEC,MAAM,CAAEL,aAAa,CAAC,SAAD,CAFvB,CAGEM,KAAK,CAAE,SAHT,CAIEC,WAAW,CAAE,SAJf,CAnBsB,CAyBtB,CACEH,IAAI,CAAE,UADR,CAEEC,MAAM,CAAE,uBAFV,CAGEC,KAAK,CAAE,IAHT,CAIEC,WAAW,CAAE,UAJf,CAzBsB,CAAjB,CAiCP,MAAO,SAASC,CAAAA,kBAAT,CAA4BC,QAA5B,CAAsC,CAC3C,MAAOC,CAAAA,WAAW,GAAGC,IAAd,CAAmB,kBAAGN,CAAAA,MAAH,MAAGA,MAAH,OAAgBA,CAAAA,MAAM,GAAKI,QAA3B,EAAnB,CAAP,CACD,CAED,GAAMG,CAAAA,sBAAsB,CAAG,qBAA/B,CAEA,MAAO,SAASC,CAAAA,gBAAT,CAA0BT,IAA1B,CAAgCC,MAAhC,CAAwC,CAC7C,GAAMS,CAAAA,iBAAiB,CAAGC,IAAI,CAACC,SAAL,CAAe,CAACZ,IAAI,CAAEA,IAAP,CAAaE,KAAK,CAAEF,IAApB,CAA0BC,MAAM,CAAEA,MAAlC,CAA0CE,WAAW,CAAE,IAAvD,CAAf,CAA1B,CACAU,YAAY,CAACC,OAAb,CAAqBN,sBAArB,CAA6CE,iBAA7C,EACD,CAED,MAAO,SAASK,CAAAA,mBAAT,EAA+B,CACpC,MAAO,CAAC,CAACF,YAAY,CAACG,OAAb,CAAqBR,sBAArB,CAAT,CACD,CAED,MAAO,SAASF,CAAAA,WAAT,EAAuB,CAC5B,GAAMI,CAAAA,iBAAiB,CAAGG,YAAY,CAACG,OAAb,CAAqBR,sBAArB,CAA1B,CACA,GAAMS,CAAAA,MAAM,CAAGP,iBAAiB,CAAGC,IAAI,CAACO,KAAL,CAAWR,iBAAX,CAAH,CAAmC,IAAnE,CACA,MAAQO,CAAAA,MAAM,WAAOlB,QAAP,EAAiBkB,MAAjB,GAA2BlB,QAAzC,CACD","sourcesContent":["import { clusterApiUrl } from '@solana/web3.js';\nimport { MAINNET_URL, MAINNET_BACKUP_URL } from '../utils/connection';\n\nexport const CLUSTERS = [\n  {\n    name: 'mainnet-beta',\n    apiUrl: MAINNET_URL,\n    label: 'Mainnet Beta',\n    clusterSlug: 'mainnet-beta',\n  },\n  {\n    name: 'mainnet-beta-backup',\n    apiUrl: MAINNET_BACKUP_URL,\n      label: 'Mainnet Beta Backup',\n    clusterSlug: 'mainnet-beta',\n  },\n  {\n    name: 'devnet',\n    apiUrl: clusterApiUrl('devnet'),\n    label: 'Devnet',\n    clusterSlug: 'devnet',\n  },\n  {\n    name: 'testnet',\n    apiUrl: clusterApiUrl('testnet'),\n    label: 'Testnet',\n    clusterSlug: 'testnet',\n  },\n  {\n    name: 'localnet',\n    apiUrl: 'http://localhost:8899',\n    label: null,\n    clusterSlug: 'localnet',\n  }\n];\n\nexport function clusterForEndpoint(endpoint) {\n  return getClusters().find(({ apiUrl }) => apiUrl === endpoint);\n}\n\nconst customClusterConfigKey = \"customClusterConfig\";\n\nexport function addCustomCluster(name, apiUrl) {\n  const stringifiedConfig = JSON.stringify({name: name, label: name, apiUrl: apiUrl, clusterSlug: null});\n  localStorage.setItem(customClusterConfigKey, stringifiedConfig);\n}\n\nexport function customClusterExists() {\n  return !!localStorage.getItem(customClusterConfigKey)\n}\n\nexport function getClusters() {\n  const stringifiedConfig = localStorage.getItem(customClusterConfigKey);\n  const config = stringifiedConfig ? JSON.parse(stringifiedConfig) : null;\n  return  config ? [...CLUSTERS, config] : CLUSTERS;\n}\n"]},"metadata":{},"sourceType":"module"}