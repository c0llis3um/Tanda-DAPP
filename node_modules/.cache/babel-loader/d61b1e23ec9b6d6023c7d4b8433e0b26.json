{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"/Users/jalcantara/Desktop/SOL-dev/tanda-wallet-sol/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import Button from'@material-ui/core/Button';import DialogActions from'@material-ui/core/DialogActions';import DialogTitle from'@material-ui/core/DialogTitle';import DialogContent from'@material-ui/core/DialogContent';import TextField from'@material-ui/core/TextField';import FormControlLabel from'@material-ui/core/FormControlLabel';import Switch from'@material-ui/core/Switch';import DialogForm from'./DialogForm';import{useWallet}from'../utils/wallet';import{useUnlockedMnemonicAndSeed}from'../utils/wallet-seed';export default function ExportAccountDialog(_ref){var open=_ref.open,onClose=_ref.onClose;var wallet=useWallet();var _useState=useState(true),_useState2=_slicedToArray(_useState,2),isHidden=_useState2[0],setIsHidden=_useState2[1];var keyOutput=\"[\".concat(Array.from(wallet.provider.account.secretKey),\"]\");return/*#__PURE__*/_jsxs(DialogForm,{open:open,onClose:onClose,fullWidth:true,children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Export account\"}),/*#__PURE__*/_jsxs(DialogContent,{children:[/*#__PURE__*/_jsx(TextField,{label:\"Private key\",fullWidth:true,type:isHidden&&'password',variant:\"outlined\",margin:\"normal\",value:keyOutput}),/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Switch,{checked:!isHidden,onChange:function onChange(){return setIsHidden(!isHidden);}}),label:\"Reveal\"})]}),/*#__PURE__*/_jsx(DialogActions,{children:/*#__PURE__*/_jsx(Button,{onClick:onClose,children:\"Close\"})})]});}export function ExportMnemonicDialog(_ref2){var open=_ref2.open,onClose=_ref2.onClose;var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),isHidden=_useState4[0],setIsHidden=_useState4[1];var _useUnlockedMnemonicA=useUnlockedMnemonicAndSeed(),_useUnlockedMnemonicA2=_slicedToArray(_useUnlockedMnemonicA,1),mnemKey=_useUnlockedMnemonicA2[0];return/*#__PURE__*/_jsxs(DialogForm,{open:open,onClose:onClose,fullWidth:true,children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Export mnemonic\"}),/*#__PURE__*/_jsxs(DialogContent,{children:[/*#__PURE__*/_jsx(TextField,{label:\"Mnemonic\",fullWidth:true,type:isHidden&&'password',variant:\"outlined\",margin:\"normal\",value:mnemKey.mnemonic}),/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Switch,{checked:!isHidden,onChange:function onChange(){return setIsHidden(!isHidden);}}),label:\"Reveal\"})]}),/*#__PURE__*/_jsx(DialogActions,{children:/*#__PURE__*/_jsx(Button,{onClick:onClose,children:\"Close\"})})]});}","map":{"version":3,"sources":["/Users/jalcantara/Desktop/SOL-dev/tanda-wallet-sol/src/components/ExportAccountDialog.js"],"names":["React","useState","Button","DialogActions","DialogTitle","DialogContent","TextField","FormControlLabel","Switch","DialogForm","useWallet","useUnlockedMnemonicAndSeed","ExportAccountDialog","open","onClose","wallet","isHidden","setIsHidden","keyOutput","Array","from","provider","account","secretKey","ExportMnemonicDialog","mnemKey","mnemonic"],"mappings":"iQAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iCAA1B,CACA,MAAOC,CAAAA,WAAP,KAAwB,+BAAxB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iCAA1B,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,oCAA7B,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,OAASC,SAAT,KAA0B,iBAA1B,CACA,OAASC,0BAAT,KAA2C,sBAA3C,CAEA,cAAe,SAASC,CAAAA,mBAAT,MAAgD,IAAjBC,CAAAA,IAAiB,MAAjBA,IAAiB,CAAXC,OAAW,MAAXA,OAAW,CAC7D,GAAMC,CAAAA,MAAM,CAAGL,SAAS,EAAxB,CAD6D,cAE7BT,QAAQ,CAAC,IAAD,CAFqB,wCAEtDe,QAFsD,eAE5CC,WAF4C,eAG7D,GAAMC,CAAAA,SAAS,YAAOC,KAAK,CAACC,IAAN,CAAWL,MAAM,CAACM,QAAP,CAAgBC,OAAhB,CAAwBC,SAAnC,CAAP,KAAf,CACA,mBACE,MAAC,UAAD,EAAY,IAAI,CAAEV,IAAlB,CAAwB,OAAO,CAAEC,OAAjC,CAA0C,SAAS,KAAnD,wBACE,KAAC,WAAD,6BADF,cAEE,MAAC,aAAD,yBACE,KAAC,SAAD,EACE,KAAK,CAAC,aADR,CAEE,SAAS,KAFX,CAGE,IAAI,CAAEE,QAAQ,EAAI,UAHpB,CAIE,OAAO,CAAC,UAJV,CAKE,MAAM,CAAC,QALT,CAME,KAAK,CAAEE,SANT,EADF,cASE,KAAC,gBAAD,EACE,OAAO,cACL,KAAC,MAAD,EACE,OAAO,CAAE,CAACF,QADZ,CAEE,QAAQ,CAAE,0BAAMC,CAAAA,WAAW,CAAC,CAACD,QAAF,CAAjB,EAFZ,EAFJ,CAOE,KAAK,CAAC,QAPR,EATF,GAFF,cAqBE,KAAC,aAAD,wBACE,KAAC,MAAD,EAAQ,OAAO,CAAEF,OAAjB,mBADF,EArBF,GADF,CA2BD,CAED,MAAO,SAASU,CAAAA,oBAAT,OAAiD,IAAjBX,CAAAA,IAAiB,OAAjBA,IAAiB,CAAXC,OAAW,OAAXA,OAAW,gBACtBb,QAAQ,CAAC,IAAD,CADc,yCAC/Ce,QAD+C,eACrCC,WADqC,yCAEpCN,0BAA0B,EAFU,gEAE/Cc,OAF+C,2BAGtD,mBACE,MAAC,UAAD,EAAY,IAAI,CAAEZ,IAAlB,CAAwB,OAAO,CAAEC,OAAjC,CAA0C,SAAS,KAAnD,wBACE,KAAC,WAAD,8BADF,cAEE,MAAC,aAAD,yBACE,KAAC,SAAD,EACE,KAAK,CAAC,UADR,CAEE,SAAS,KAFX,CAGE,IAAI,CAAEE,QAAQ,EAAI,UAHpB,CAIE,OAAO,CAAC,UAJV,CAKE,MAAM,CAAC,QALT,CAME,KAAK,CAAES,OAAO,CAACC,QANjB,EADF,cASE,KAAC,gBAAD,EACE,OAAO,cACL,KAAC,MAAD,EACE,OAAO,CAAE,CAACV,QADZ,CAEE,QAAQ,CAAE,0BAAMC,CAAAA,WAAW,CAAC,CAACD,QAAF,CAAjB,EAFZ,EAFJ,CAOE,KAAK,CAAC,QAPR,EATF,GAFF,cAqBE,KAAC,aAAD,wBACE,KAAC,MAAD,EAAQ,OAAO,CAAEF,OAAjB,mBADF,EArBF,GADF,CA2BD","sourcesContent":["import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DialogForm from './DialogForm';\nimport { useWallet } from '../utils/wallet';\nimport { useUnlockedMnemonicAndSeed } from '../utils/wallet-seed';\n\nexport default function ExportAccountDialog({ open, onClose }) {\n  const wallet = useWallet();\n  const [isHidden, setIsHidden] = useState(true);\n  const keyOutput = `[${Array.from(wallet.provider.account.secretKey)}]`;\n  return (\n    <DialogForm open={open} onClose={onClose} fullWidth>\n      <DialogTitle>Export account</DialogTitle>\n      <DialogContent>\n        <TextField\n          label=\"Private key\"\n          fullWidth\n          type={isHidden && 'password'}\n          variant=\"outlined\"\n          margin=\"normal\"\n          value={keyOutput}\n        />\n        <FormControlLabel\n          control={\n            <Switch\n              checked={!isHidden}\n              onChange={() => setIsHidden(!isHidden)}\n            />\n          }\n          label=\"Reveal\"\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose}>Close</Button>\n      </DialogActions>\n    </DialogForm>\n  );\n}\n\nexport function ExportMnemonicDialog({ open, onClose }) {\n  const [isHidden, setIsHidden] = useState(true);\n  const [mnemKey] = useUnlockedMnemonicAndSeed();\n  return (\n    <DialogForm open={open} onClose={onClose} fullWidth>\n      <DialogTitle>Export mnemonic</DialogTitle>\n      <DialogContent>\n        <TextField\n          label=\"Mnemonic\"\n          fullWidth\n          type={isHidden && 'password'}\n          variant=\"outlined\"\n          margin=\"normal\"\n          value={mnemKey.mnemonic}\n        />\n        <FormControlLabel\n          control={\n            <Switch\n              checked={!isHidden}\n              onChange={() => setIsHidden(!isHidden)}\n            />\n          }\n          label=\"Reveal\"\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose}>Close</Button>\n      </DialogActions>\n    </DialogForm>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}