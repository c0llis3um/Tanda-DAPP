{"ast":null,"code":"import _objectSpread from\"/Users/jalcantara/Desktop/SOL-dev/tanda-wallet-sol/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"/Users/jalcantara/Desktop/SOL-dev/tanda-wallet-sol/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _defineProperty from\"/Users/jalcantara/Desktop/SOL-dev/tanda-wallet-sol/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";var _localStorage$getItem;import React,{useContext,useState,useEffect}from'react';import EventEmitter from'events';import{useConnectionConfig,MAINNET_URL,MAINNET_BACKUP_URL}from'../connection';import{useListener}from'../utils';import{clusterForEndpoint}from'../clusters';import{useCallback}from'react';import{PublicKey}from'@solana/web3.js';import{TokenListProvider}from'@solana/spl-token-registry';// This list is used for deciding what to display in the popular tokens list\n// in the `AddTokenDialog`.\n//\n// Icons, names, and symbols are fetched not from here, but from the\n// @solana/spl-token-registry. To add an icon or token name to the wallet,\n// add the mints to that package. To add a token to the `AddTokenDialog`,\n// add the `mintAddress` here. The rest of the fields are not used.\nvar POPULAR_TOKENS=_defineProperty({},MAINNET_URL,[{mintAddress:'SRMuApVNdxXokk5GT7XD5cUUgXMBCoAz2LHeuAoKWRt',tokenName:'Serum',tokenSymbol:'SRM',icon:'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x476c5E26a75bd202a9683ffD34359C0CC15be0fF/logo.png'},{mintAddress:'MSRMcoVyrFxnSgo5uXwone5SKcGhT1KEJMFEkMEWf9L',tokenName:'MegaSerum',tokenSymbol:'MSRM',icon:'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x476c5E26a75bd202a9683ffD34359C0CC15be0fF/logo.png'},{tokenSymbol:'BTC',mintAddress:'9n4nbM75f5Ui33ZbPYXn59EwSgE8CGsHtAeTH5YFeJ9E',tokenName:'Wrapped Bitcoin',icon:'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/bitcoin/info/logo.png'},{tokenSymbol:'ETH',mintAddress:'2FPyTwcZLUg1MDrwsyoP4D6s1tM7hAkHYRjkNb5w6Pxk',tokenName:'Wrapped Ethereum',icon:'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2/logo.png'},{tokenSymbol:'FTT',mintAddress:'AGFEad2et2ZJif9jaGpdMixQqvW5i81aBdvKe7PHNfz3',tokenName:'Wrapped FTT',icon:'https://raw.githubusercontent.com/trustwallet/assets/f3ffd0b9ae2165336279ce2f8db1981a55ce30f8/blockchains/ethereum/assets/0x50D1c9771902476076eCFc8B2A83Ad6b9355a4c9/logo.png'},{tokenSymbol:'YFI',mintAddress:'3JSf5tPeuscJGtaCp5giEiDhv51gQ4v3zWg8DGgyLfAB',tokenName:'Wrapped YFI',icon:'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x0bc529c00C6401aEF6D220BE8C6Ea1667F6Ad93e/logo.png'},{tokenSymbol:'LINK',mintAddress:'CWE8jPTUYhdCTZYWPTe1o5DFqfdjzWKc9WKz6rSjQUdG',tokenName:'Wrapped Chainlink',icon:'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x514910771AF9Ca656af840dff83E8264EcF986CA/logo.png'},{tokenSymbol:'XRP',mintAddress:'Ga2AXHpfAF6mv2ekZwcsJFqu7wB4NV331qNH7fW9Nst8',tokenName:'Wrapped XRP',icon:'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ripple/info/logo.png'},{tokenSymbol:'USDT',mintAddress:'Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB',tokenName:'USDT',icon:'https://cdn.jsdelivr.net/gh/solana-labs/explorer/public/tokens/usdt.svg'},{tokenSymbol:'WUSDT',mintAddress:'BQcdHdAQW1hczDbBi9hiegXAR7A98Q9jx3X3iBBBDiq4',tokenName:'Wrapped USD Tether',icon:'https://raw.githubusercontent.com/trustwallet/assets/f3ffd0b9ae2165336279ce2f8db1981a55ce30f8/blockchains/ethereum/assets/0xdAC17F958D2ee523a2206206994597C13D831ec7/logo.png'},{tokenSymbol:'USDC',mintAddress:'EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v',tokenName:'USD Coin',icon:'https://raw.githubusercontent.com/trustwallet/assets/f3ffd0b9ae2165336279ce2f8db1981a55ce30f8/blockchains/ethereum/assets/0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48/logo.png'},{tokenSymbol:'WUSDC',mintAddress:'BXXkv6z8ykpG1yuvUDPgh732wzVHB69RnB9YgSYh3itW',tokenName:'Wrapped USDC',icon:'https://raw.githubusercontent.com/trustwallet/assets/f3ffd0b9ae2165336279ce2f8db1981a55ce30f8/blockchains/ethereum/assets/0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48/logo.png',deprecated:true},{tokenSymbol:'SUSHI',mintAddress:'AR1Mtgh7zAtxuxGd2XPovXPVjcSdY3i4rQYisNadjfKy',tokenName:'Wrapped SUSHI',icon:'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x6B3595068778DD592e39A122f4f5a5cF09C90fE2/logo.png'},{tokenSymbol:'ALEPH',mintAddress:'CsZ5LZkDS7h9TDKjrbL7VAwQZ9nsRu8vJLhRYfmGaN8K',tokenName:'Wrapped ALEPH',icon:'https://raw.githubusercontent.com/trustwallet/assets/6996a371cd02f516506a8f092eeb29888501447c/blockchains/nuls/assets/NULSd6HgyZkiqLnBzTaeSQfx1TNg2cqbzq51h/logo.png'},{tokenSymbol:'SXP',mintAddress:'SF3oTvfWzEP3DTwGSvUXRrGTvr75pdZNnBLAH9bzMuX',tokenName:'Wrapped SXP',icon:'https://github.com/trustwallet/assets/raw/b0ab88654fe64848da80d982945e4db06e197d4f/blockchains/ethereum/assets/0x8CE9137d39326AD0cD6491fb5CC0CbA0e089b6A9/logo.png'},{tokenSymbol:'HGET',mintAddress:'BtZQfWqDGbk9Wf2rXEiWyQBdBY1etnUUn6zEphvVS7yN',tokenName:'Wrapped HGET'},{tokenSymbol:'CREAM',mintAddress:'5Fu5UUgbjpUvdBveb3a1JTNirL8rXtiYeSMWvKjtUNQv',tokenName:'Wrapped CREAM',icon:'https://raw.githubusercontent.com/trustwallet/assets/4c82c2a409f18a4dd96a504f967a55a8fe47026d/blockchains/smartchain/assets/0xd4CB328A82bDf5f03eB737f37Fa6B370aef3e888/logo.png'},{tokenSymbol:'UBXT',mintAddress:'873KLxCbz7s9Kc4ZzgYRtNmhfkQrhfyWGZJBmyCbC3ei',tokenName:'Wrapped UBXT'},{tokenSymbol:'HNT',mintAddress:'HqB7uswoVg4suaQiDP3wjxob1G5WdZ144zhdStwMCq7e',tokenName:'Wrapped HNT'},{tokenSymbol:'FRONT',mintAddress:'9S4t2NEAiJVMvPdRYKVrfJpBafPBLtvbvyS3DecojQHw',tokenName:'Wrapped FRONT',icon:'https://raw.githubusercontent.com/trustwallet/assets/6e375e4e5fb0ffe09ed001bae1ef8ca1d6c86034/blockchains/ethereum/assets/0xf8C3527CC04340b208C854E985240c02F7B7793f/logo.png'},{tokenSymbol:'AKRO',mintAddress:'6WNVCuxCGJzNjmMZoKyhZJwvJ5tYpsLyAtagzYASqBoF',tokenName:'Wrapped AKRO',icon:'https://raw.githubusercontent.com/trustwallet/assets/878dcab0fab90e6593bcb9b7d941be4915f287dc/blockchains/ethereum/assets/0xb2734a4Cec32C81FDE26B0024Ad3ceB8C9b34037/logo.png'},{tokenSymbol:'HXRO',mintAddress:'DJafV9qemGp7mLMEn5wrfqaFwxsbLgUsGVS16zKRk9kc',tokenName:'Wrapped HXRO'},{tokenSymbol:'UNI',mintAddress:'DEhAasscXF4kEGxFgJ3bq4PpVGp5wyUxMRvn6TzGVHaw',tokenName:'Wrapped UNI',icon:'https://raw.githubusercontent.com/trustwallet/assets/08d734b5e6ec95227dc50efef3a9cdfea4c398a1/blockchains/ethereum/assets/0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984/logo.png'},{tokenSymbol:'MATH',mintAddress:'GeDS162t9yGJuLEHPWXXGrb1zwkzinCgRwnT8vHYjKza',tokenName:'Wrapped MATH'},{tokenSymbol:'TOMO',mintAddress:'GXMvfY2jpQctDqZ9RoU3oWPhufKiCcFEfchvYumtX7jd',tokenName:'Wrapped TOMO',icon:'https://raw.githubusercontent.com/trustwallet/assets/08d734b5e6ec95227dc50efef3a9cdfea4c398a1/blockchains/tomochain/info/logo.png'},{tokenSymbol:'LUA',mintAddress:'EqWCKXfs3x47uVosDpTRgFniThL9Y8iCztJaapxbEaVX',tokenName:'Wrapped LUA',icon:'https://raw.githubusercontent.com/trustwallet/assets/2d2491130e6beda208ba4fc6df028a82a0106ab6/blockchains/ethereum/assets/0xB1f66997A5760428D3a87D68b90BfE0aE64121cC/logo.png'},{tokenSymbol:'FIDA',mintAddress:'EchesyfXePKdLtoiZSL8pBe8Myagyy8ZRqsACNCFGnvp',tokenName:'Bonfida Token',icon:'https://raw.githubusercontent.com/dr497/awesome-serum-markets/master/icons/fida.svg'},{tokenSymbol:'LQID',mintAddress:'A6aY2ceogBz1VaXBxm1j2eJuNZMRqrWUAnKecrMH85zj',tokenName:'LQID',icon:'https://raw.githubusercontent.com/dr497/awesome-serum-markets/master/icons/lqid.svg'},{tokenSymbol:'SECO',mintAddress:'7CnFGR9mZWyAtWxPcVuTewpyC3A3MDW4nLsu5NY6PDbd',tokenName:'Serum Ecosystem Pool Token'},{tokenSymbol:'HOLY',mintAddress:'3GECTP7H4Tww3w8jEPJCJtXUtXxiZty31S9szs84CcwQ',tokenName:'Holy Trinity Pool'},{tokenSymbol:'KIN',mintAddress:'kinXdEcpDQeHPEuQnqmUgtYykqKGVFq6CeVX5iAHJq6',tokenName:'KIN',icon:'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/kin/info/logo.png'},{tokenSymbol:'MAPS',mintAddress:'MAPS41MDahZ9QdKXhVa4dWB9RuyfV4XqhyAZ8XcYepb',tokenName:'Maps.me Token'},{tokenSymbol:'RAY',mintAddress:'4k3Dyjzvzp8eMZWUXbBCjEvwSkkk59S5iCNLY3QrkX6R',tokenName:'Raydium',icon:'https://raw.githubusercontent.com/raydium-io/media-assets/master/logo.svg'},{tokenSymbol:'OXY',mintAddress:'z3dn17yLaGMKffVogeFHQ9zWVcXgqgf3PQnDsNs2g6M',tokenName:'Oxygen Protocol',icon:'https://raw.githubusercontent.com/nathanielparke/awesome-serum-markets/master/icons/oxy.svg'},{tokenSymbol:'COPE',mintAddress:'3K6rftdAaQYMPunrtNRHgnK2UAtjm2JwyT2oCiTDouYE',tokenName:'COPE',icon:'https://cdn.jsdelivr.net/gh/solana-labs/token-list/assets/mainnet/3K6rftdAaQYMPunrtNRHgnK2UAtjm2JwyT2oCiTDouYE/logo.jpg'},{tokenSymbol:'BRZ',mintAddress:'FtgGSFADXBtroxq8VCausXRr2of47QBf5AS1NtZCu4GD',tokenName:'Brazilian Digital Token',icon:'https://cdn.jsdelivr.net/gh/solana-labs/explorer/public/tokens/brz.png'},{tokenSymbol:'STEP',mintAddress:'StepAscQoEioFxxWGnh2sLBDFp9d8rvKz2Yp39iDpyT',tokenName:'Step',icon:'https://cdn.jsdelivr.net/gh/solana-labs/token-list/assets/mainnet/StepAscQoEioFxxWGnh2sLBDFp9d8rvKz2Yp39iDpyT/logo.png'},{tokenSymbol:'SLRS',mintAddress:'SLRSSpSLUTP7okbCUBYStWCo1vUgyt775faPqz8HUMr',tokenName:'Solrise Finance',icon:'https://i.ibb.co/tqbTKTT/slrs-256.png'},{tokenSymbol:'SAMO',mintAddress:'7xKXtg2CW87d97TXJSDpbD5jBkheTqA83TZRuJosgAsU',tokenName:'Samoyed Coin',icon:'https://raw.githubusercontent.com/solana-labs/token-list/main/assets/mainnet/7xKXtg2CW87d97TXJSDpbD5jBkheTqA83TZRuJosgAsU/logo.png'},{tokenSymbol:'stSOL',mintAddress:'7dHbWXmci3dT8UFYWYZweBLXgycu7Y3iL6trKn1Y7ARj',tokenName:'Lido Staked SOL',icon:'https://raw.githubusercontent.com/solana-labs/token-list/main/assets/mainnet/7dHbWXmci3dT8UFYWYZweBLXgycu7Y3iL6trKn1Y7ARj/logo.png'}]);var TokenListContext=/*#__PURE__*/React.createContext({});export function useTokenInfos(){var _useContext=useContext(TokenListContext),tokenInfos=_useContext.tokenInfos;return tokenInfos;}export function TokenRegistryProvider(props){var _useConnectionConfig=useConnectionConfig(),endpoint=_useConnectionConfig.endpoint;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),tokenInfos=_useState2[0],setTokenInfos=_useState2[1];useEffect(function(){if(endpoint!==MAINNET_BACKUP_URL&&endpoint!==MAINNET_URL)return;var tokenListProvider=new TokenListProvider();tokenListProvider.resolve().then(function(tokenListContainer){var cluster=clusterForEndpoint(endpoint);var filteredTokenListContainer=tokenListContainer===null||tokenListContainer===void 0?void 0:tokenListContainer.filterByClusterSlug(cluster===null||cluster===void 0?void 0:cluster.clusterSlug);var tokenInfos=tokenListContainer!==filteredTokenListContainer?filteredTokenListContainer===null||filteredTokenListContainer===void 0?void 0:filteredTokenListContainer.getList():null;// Workaround for filter return all on unknown slug\nsetTokenInfos(tokenInfos);});},[endpoint]);return/*#__PURE__*/_jsx(TokenListContext.Provider,{value:{tokenInfos:tokenInfos},children:props.children});}var customTokenNamesByNetwork=JSON.parse((_localStorage$getItem=localStorage.getItem('tokenNames'))!==null&&_localStorage$getItem!==void 0?_localStorage$getItem:'{}');var nameUpdated=new EventEmitter();nameUpdated.setMaxListeners(100);export function useTokenInfo(mint){var _useConnectionConfig2=useConnectionConfig(),endpoint=_useConnectionConfig2.endpoint;useListener(nameUpdated,'update');var tokenInfos=useTokenInfos();return getTokenInfo(mint,endpoint,tokenInfos);}export function getTokenInfo(mint,endpoint,tokenInfos){var _customTokenNamesByNe;if(!mint){return{name:null,symbol:null};}var info=customTokenNamesByNetwork===null||customTokenNamesByNetwork===void 0?void 0:(_customTokenNamesByNe=customTokenNamesByNetwork[endpoint])===null||_customTokenNamesByNe===void 0?void 0:_customTokenNamesByNe[mint.toBase58()];var match=tokenInfos===null||tokenInfos===void 0?void 0:tokenInfos.find(function(tokenInfo){return tokenInfo.address===mint.toBase58();});if(match){if(!info){info=_objectSpread(_objectSpread({},match),{},{logoUri:match.logoURI});}// The user has overridden a name locally.\nelse{info=_objectSpread(_objectSpread(_objectSpread({},match),info),{},{logoUri:match.logoURI});}}return _objectSpread({},info);}export function useUpdateTokenName(){var _useConnectionConfig3=useConnectionConfig(),endpoint=_useConnectionConfig3.endpoint;return useCallback(function updateTokenName(mint,name,symbol){if(!name||!symbol){if(name){symbol=name;}else if(symbol){name=symbol;}else{return;}}if(!customTokenNamesByNetwork[endpoint]){customTokenNamesByNetwork[endpoint]={};}customTokenNamesByNetwork[endpoint][mint.toBase58()]={name:name,symbol:symbol};localStorage.setItem('tokenNames',JSON.stringify(customTokenNamesByNetwork));nameUpdated.emit('update');},[endpoint]);}// Returns tokenInfos for the popular tokens list.\nexport function usePopularTokens(){var tokenInfos=useTokenInfos();var _useConnectionConfig4=useConnectionConfig(),endpoint=_useConnectionConfig4.endpoint;return(!POPULAR_TOKENS[endpoint]?[]:POPULAR_TOKENS[endpoint]).map(function(tok){return getTokenInfo(new PublicKey(tok.mintAddress),endpoint,tokenInfos);});}","map":{"version":3,"sources":["/Users/jalcantara/Desktop/SOL-dev/tanda-wallet-sol/src/utils/tokens/names.js"],"names":["React","useContext","useState","useEffect","EventEmitter","useConnectionConfig","MAINNET_URL","MAINNET_BACKUP_URL","useListener","clusterForEndpoint","useCallback","PublicKey","TokenListProvider","POPULAR_TOKENS","mintAddress","tokenName","tokenSymbol","icon","deprecated","TokenListContext","createContext","useTokenInfos","tokenInfos","TokenRegistryProvider","props","endpoint","setTokenInfos","tokenListProvider","resolve","then","tokenListContainer","cluster","filteredTokenListContainer","filterByClusterSlug","clusterSlug","getList","children","customTokenNamesByNetwork","JSON","parse","localStorage","getItem","nameUpdated","setMaxListeners","useTokenInfo","mint","getTokenInfo","name","symbol","info","toBase58","match","find","tokenInfo","address","logoUri","logoURI","useUpdateTokenName","updateTokenName","setItem","stringify","emit","usePopularTokens","map","tok"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport EventEmitter from 'events';\nimport {\n  useConnectionConfig,\n  MAINNET_URL,\n  MAINNET_BACKUP_URL,\n} from '../connection';\nimport { useListener } from '../utils';\nimport { clusterForEndpoint } from '../clusters';\nimport { useCallback } from 'react';\nimport { PublicKey } from '@solana/web3.js';\nimport { TokenListProvider } from '@solana/spl-token-registry';\n\n// This list is used for deciding what to display in the popular tokens list\n// in the `AddTokenDialog`.\n//\n// Icons, names, and symbols are fetched not from here, but from the\n// @solana/spl-token-registry. To add an icon or token name to the wallet,\n// add the mints to that package. To add a token to the `AddTokenDialog`,\n// add the `mintAddress` here. The rest of the fields are not used.\nconst POPULAR_TOKENS = {\n  [MAINNET_URL]: [\n    {\n      mintAddress: 'SRMuApVNdxXokk5GT7XD5cUUgXMBCoAz2LHeuAoKWRt',\n      tokenName: 'Serum',\n      tokenSymbol: 'SRM',\n      icon:\n        'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x476c5E26a75bd202a9683ffD34359C0CC15be0fF/logo.png',\n    },\n    {\n      mintAddress: 'MSRMcoVyrFxnSgo5uXwone5SKcGhT1KEJMFEkMEWf9L',\n      tokenName: 'MegaSerum',\n      tokenSymbol: 'MSRM',\n      icon:\n        'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x476c5E26a75bd202a9683ffD34359C0CC15be0fF/logo.png',\n    },\n    {\n      tokenSymbol: 'BTC',\n      mintAddress: '9n4nbM75f5Ui33ZbPYXn59EwSgE8CGsHtAeTH5YFeJ9E',\n      tokenName: 'Wrapped Bitcoin',\n      icon:\n        'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/bitcoin/info/logo.png',\n    },\n    {\n      tokenSymbol: 'ETH',\n      mintAddress: '2FPyTwcZLUg1MDrwsyoP4D6s1tM7hAkHYRjkNb5w6Pxk',\n      tokenName: 'Wrapped Ethereum',\n      icon:\n        'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2/logo.png',\n    },\n    {\n      tokenSymbol: 'FTT',\n      mintAddress: 'AGFEad2et2ZJif9jaGpdMixQqvW5i81aBdvKe7PHNfz3',\n      tokenName: 'Wrapped FTT',\n      icon:\n        'https://raw.githubusercontent.com/trustwallet/assets/f3ffd0b9ae2165336279ce2f8db1981a55ce30f8/blockchains/ethereum/assets/0x50D1c9771902476076eCFc8B2A83Ad6b9355a4c9/logo.png',\n    },\n    {\n      tokenSymbol: 'YFI',\n      mintAddress: '3JSf5tPeuscJGtaCp5giEiDhv51gQ4v3zWg8DGgyLfAB',\n      tokenName: 'Wrapped YFI',\n      icon:\n        'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x0bc529c00C6401aEF6D220BE8C6Ea1667F6Ad93e/logo.png',\n    },\n    {\n      tokenSymbol: 'LINK',\n      mintAddress: 'CWE8jPTUYhdCTZYWPTe1o5DFqfdjzWKc9WKz6rSjQUdG',\n      tokenName: 'Wrapped Chainlink',\n      icon:\n        'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x514910771AF9Ca656af840dff83E8264EcF986CA/logo.png',\n    },\n    {\n      tokenSymbol: 'XRP',\n      mintAddress: 'Ga2AXHpfAF6mv2ekZwcsJFqu7wB4NV331qNH7fW9Nst8',\n      tokenName: 'Wrapped XRP',\n      icon:\n        'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ripple/info/logo.png',\n    },\n    {\n      tokenSymbol: 'USDT',\n      mintAddress: 'Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB',\n      tokenName: 'USDT',\n      icon:\n        'https://cdn.jsdelivr.net/gh/solana-labs/explorer/public/tokens/usdt.svg',\n    },\n    {\n      tokenSymbol: 'WUSDT',\n      mintAddress: 'BQcdHdAQW1hczDbBi9hiegXAR7A98Q9jx3X3iBBBDiq4',\n      tokenName: 'Wrapped USD Tether',\n      icon:\n        'https://raw.githubusercontent.com/trustwallet/assets/f3ffd0b9ae2165336279ce2f8db1981a55ce30f8/blockchains/ethereum/assets/0xdAC17F958D2ee523a2206206994597C13D831ec7/logo.png',\n    },\n    {\n      tokenSymbol: 'USDC',\n      mintAddress: 'EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v',\n      tokenName: 'USD Coin',\n      icon:\n        'https://raw.githubusercontent.com/trustwallet/assets/f3ffd0b9ae2165336279ce2f8db1981a55ce30f8/blockchains/ethereum/assets/0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48/logo.png',\n    },\n    {\n      tokenSymbol: 'WUSDC',\n      mintAddress: 'BXXkv6z8ykpG1yuvUDPgh732wzVHB69RnB9YgSYh3itW',\n      tokenName: 'Wrapped USDC',\n      icon:\n        'https://raw.githubusercontent.com/trustwallet/assets/f3ffd0b9ae2165336279ce2f8db1981a55ce30f8/blockchains/ethereum/assets/0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48/logo.png',\n      deprecated: true,\n    },\n    {\n      tokenSymbol: 'SUSHI',\n      mintAddress: 'AR1Mtgh7zAtxuxGd2XPovXPVjcSdY3i4rQYisNadjfKy',\n      tokenName: 'Wrapped SUSHI',\n      icon:\n        'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x6B3595068778DD592e39A122f4f5a5cF09C90fE2/logo.png',\n    },\n    {\n      tokenSymbol: 'ALEPH',\n      mintAddress: 'CsZ5LZkDS7h9TDKjrbL7VAwQZ9nsRu8vJLhRYfmGaN8K',\n      tokenName: 'Wrapped ALEPH',\n      icon:\n        'https://raw.githubusercontent.com/trustwallet/assets/6996a371cd02f516506a8f092eeb29888501447c/blockchains/nuls/assets/NULSd6HgyZkiqLnBzTaeSQfx1TNg2cqbzq51h/logo.png',\n    },\n    {\n      tokenSymbol: 'SXP',\n      mintAddress: 'SF3oTvfWzEP3DTwGSvUXRrGTvr75pdZNnBLAH9bzMuX',\n      tokenName: 'Wrapped SXP',\n      icon:\n        'https://github.com/trustwallet/assets/raw/b0ab88654fe64848da80d982945e4db06e197d4f/blockchains/ethereum/assets/0x8CE9137d39326AD0cD6491fb5CC0CbA0e089b6A9/logo.png',\n    },\n    {\n      tokenSymbol: 'HGET',\n      mintAddress: 'BtZQfWqDGbk9Wf2rXEiWyQBdBY1etnUUn6zEphvVS7yN',\n      tokenName: 'Wrapped HGET',\n    },\n    {\n      tokenSymbol: 'CREAM',\n      mintAddress: '5Fu5UUgbjpUvdBveb3a1JTNirL8rXtiYeSMWvKjtUNQv',\n      tokenName: 'Wrapped CREAM',\n      icon:\n        'https://raw.githubusercontent.com/trustwallet/assets/4c82c2a409f18a4dd96a504f967a55a8fe47026d/blockchains/smartchain/assets/0xd4CB328A82bDf5f03eB737f37Fa6B370aef3e888/logo.png',\n    },\n    {\n      tokenSymbol: 'UBXT',\n      mintAddress: '873KLxCbz7s9Kc4ZzgYRtNmhfkQrhfyWGZJBmyCbC3ei',\n      tokenName: 'Wrapped UBXT',\n    },\n    {\n      tokenSymbol: 'HNT',\n      mintAddress: 'HqB7uswoVg4suaQiDP3wjxob1G5WdZ144zhdStwMCq7e',\n      tokenName: 'Wrapped HNT',\n    },\n    {\n      tokenSymbol: 'FRONT',\n      mintAddress: '9S4t2NEAiJVMvPdRYKVrfJpBafPBLtvbvyS3DecojQHw',\n      tokenName: 'Wrapped FRONT',\n      icon:\n        'https://raw.githubusercontent.com/trustwallet/assets/6e375e4e5fb0ffe09ed001bae1ef8ca1d6c86034/blockchains/ethereum/assets/0xf8C3527CC04340b208C854E985240c02F7B7793f/logo.png',\n    },\n    {\n      tokenSymbol: 'AKRO',\n      mintAddress: '6WNVCuxCGJzNjmMZoKyhZJwvJ5tYpsLyAtagzYASqBoF',\n      tokenName: 'Wrapped AKRO',\n      icon:\n        'https://raw.githubusercontent.com/trustwallet/assets/878dcab0fab90e6593bcb9b7d941be4915f287dc/blockchains/ethereum/assets/0xb2734a4Cec32C81FDE26B0024Ad3ceB8C9b34037/logo.png',\n    },\n    {\n      tokenSymbol: 'HXRO',\n      mintAddress: 'DJafV9qemGp7mLMEn5wrfqaFwxsbLgUsGVS16zKRk9kc',\n      tokenName: 'Wrapped HXRO',\n    },\n    {\n      tokenSymbol: 'UNI',\n      mintAddress: 'DEhAasscXF4kEGxFgJ3bq4PpVGp5wyUxMRvn6TzGVHaw',\n      tokenName: 'Wrapped UNI',\n      icon:\n        'https://raw.githubusercontent.com/trustwallet/assets/08d734b5e6ec95227dc50efef3a9cdfea4c398a1/blockchains/ethereum/assets/0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984/logo.png',\n    },\n    {\n      tokenSymbol: 'MATH',\n      mintAddress: 'GeDS162t9yGJuLEHPWXXGrb1zwkzinCgRwnT8vHYjKza',\n      tokenName: 'Wrapped MATH',\n    },\n    {\n      tokenSymbol: 'TOMO',\n      mintAddress: 'GXMvfY2jpQctDqZ9RoU3oWPhufKiCcFEfchvYumtX7jd',\n      tokenName: 'Wrapped TOMO',\n      icon:\n        'https://raw.githubusercontent.com/trustwallet/assets/08d734b5e6ec95227dc50efef3a9cdfea4c398a1/blockchains/tomochain/info/logo.png',\n    },\n    {\n      tokenSymbol: 'LUA',\n      mintAddress: 'EqWCKXfs3x47uVosDpTRgFniThL9Y8iCztJaapxbEaVX',\n      tokenName: 'Wrapped LUA',\n      icon:\n        'https://raw.githubusercontent.com/trustwallet/assets/2d2491130e6beda208ba4fc6df028a82a0106ab6/blockchains/ethereum/assets/0xB1f66997A5760428D3a87D68b90BfE0aE64121cC/logo.png',\n    },\n    {\n      tokenSymbol: 'FIDA',\n      mintAddress: 'EchesyfXePKdLtoiZSL8pBe8Myagyy8ZRqsACNCFGnvp',\n      tokenName: 'Bonfida Token',\n      icon:\n        'https://raw.githubusercontent.com/dr497/awesome-serum-markets/master/icons/fida.svg',\n    },\n    {\n      tokenSymbol: 'LQID',\n      mintAddress: 'A6aY2ceogBz1VaXBxm1j2eJuNZMRqrWUAnKecrMH85zj',\n      tokenName: 'LQID',\n      icon:\n        'https://raw.githubusercontent.com/dr497/awesome-serum-markets/master/icons/lqid.svg',\n    },\n    {\n      tokenSymbol: 'SECO',\n      mintAddress: '7CnFGR9mZWyAtWxPcVuTewpyC3A3MDW4nLsu5NY6PDbd',\n      tokenName: 'Serum Ecosystem Pool Token',\n    },\n    {\n      tokenSymbol: 'HOLY',\n      mintAddress: '3GECTP7H4Tww3w8jEPJCJtXUtXxiZty31S9szs84CcwQ',\n      tokenName: 'Holy Trinity Pool',\n    },\n    {\n      tokenSymbol: 'KIN',\n      mintAddress: 'kinXdEcpDQeHPEuQnqmUgtYykqKGVFq6CeVX5iAHJq6',\n      tokenName: 'KIN',\n      icon:\n        'https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/kin/info/logo.png',\n    },\n    {\n      tokenSymbol: 'MAPS',\n      mintAddress: 'MAPS41MDahZ9QdKXhVa4dWB9RuyfV4XqhyAZ8XcYepb',\n      tokenName: 'Maps.me Token',\n    },\n    {\n      tokenSymbol: 'RAY',\n      mintAddress: '4k3Dyjzvzp8eMZWUXbBCjEvwSkkk59S5iCNLY3QrkX6R',\n      tokenName: 'Raydium',\n      icon:\n        'https://raw.githubusercontent.com/raydium-io/media-assets/master/logo.svg',\n    },\n    {\n      tokenSymbol: 'OXY',\n      mintAddress: 'z3dn17yLaGMKffVogeFHQ9zWVcXgqgf3PQnDsNs2g6M',\n      tokenName: 'Oxygen Protocol',\n      icon:\n        'https://raw.githubusercontent.com/nathanielparke/awesome-serum-markets/master/icons/oxy.svg',\n    },\n    {\n      tokenSymbol: 'COPE',\n      mintAddress: '3K6rftdAaQYMPunrtNRHgnK2UAtjm2JwyT2oCiTDouYE',\n      tokenName: 'COPE',\n      icon:\n        'https://cdn.jsdelivr.net/gh/solana-labs/token-list/assets/mainnet/3K6rftdAaQYMPunrtNRHgnK2UAtjm2JwyT2oCiTDouYE/logo.jpg',\n    },\n    {\n      tokenSymbol: 'BRZ',\n      mintAddress: 'FtgGSFADXBtroxq8VCausXRr2of47QBf5AS1NtZCu4GD',\n      tokenName: 'Brazilian Digital Token',\n      icon:\n        'https://cdn.jsdelivr.net/gh/solana-labs/explorer/public/tokens/brz.png',\n    },\n    {\n      tokenSymbol: 'STEP',\n      mintAddress: 'StepAscQoEioFxxWGnh2sLBDFp9d8rvKz2Yp39iDpyT',\n      tokenName: 'Step',\n      icon:\n        'https://cdn.jsdelivr.net/gh/solana-labs/token-list/assets/mainnet/StepAscQoEioFxxWGnh2sLBDFp9d8rvKz2Yp39iDpyT/logo.png',\n    },\n    {\n      tokenSymbol: 'SLRS',\n      mintAddress: 'SLRSSpSLUTP7okbCUBYStWCo1vUgyt775faPqz8HUMr',\n      tokenName: 'Solrise Finance',\n      icon:\n        'https://i.ibb.co/tqbTKTT/slrs-256.png',\n    },\n    {\n      tokenSymbol: 'SAMO',\n      mintAddress: '7xKXtg2CW87d97TXJSDpbD5jBkheTqA83TZRuJosgAsU',\n      tokenName: 'Samoyed Coin',\n      icon:\n        'https://raw.githubusercontent.com/solana-labs/token-list/main/assets/mainnet/7xKXtg2CW87d97TXJSDpbD5jBkheTqA83TZRuJosgAsU/logo.png',\n    },\n    {\n      tokenSymbol: 'stSOL',\n      mintAddress: '7dHbWXmci3dT8UFYWYZweBLXgycu7Y3iL6trKn1Y7ARj',\n      tokenName: 'Lido Staked SOL',\n      icon:\n        'https://raw.githubusercontent.com/solana-labs/token-list/main/assets/mainnet/7dHbWXmci3dT8UFYWYZweBLXgycu7Y3iL6trKn1Y7ARj/logo.png',\n    },\n  ],\n};\n\nconst TokenListContext = React.createContext({});\n\nexport function useTokenInfos() {\n  const { tokenInfos } = useContext(TokenListContext);\n  return tokenInfos;\n}\n\nexport function TokenRegistryProvider(props) {\n  const { endpoint } = useConnectionConfig();\n  const [tokenInfos, setTokenInfos] = useState(null);\n  useEffect(() => {\n    if (endpoint !== MAINNET_BACKUP_URL && endpoint !== MAINNET_URL) return;\n    const tokenListProvider = new TokenListProvider();\n    tokenListProvider.resolve().then((tokenListContainer) => {\n      const cluster = clusterForEndpoint(endpoint);\n\n      const filteredTokenListContainer = tokenListContainer?.filterByClusterSlug(\n        cluster?.clusterSlug,\n      );\n      const tokenInfos =\n        tokenListContainer !== filteredTokenListContainer\n          ? filteredTokenListContainer?.getList()\n          : null; // Workaround for filter return all on unknown slug\n      setTokenInfos(tokenInfos);\n    });\n  }, [endpoint]);\n\n  return (\n    <TokenListContext.Provider value={{ tokenInfos }}>\n      {props.children}\n    </TokenListContext.Provider>\n  );\n}\n\nconst customTokenNamesByNetwork = JSON.parse(\n  localStorage.getItem('tokenNames') ?? '{}',\n);\n\nconst nameUpdated = new EventEmitter();\nnameUpdated.setMaxListeners(100);\n\nexport function useTokenInfo(mint) {\n  const { endpoint } = useConnectionConfig();\n  useListener(nameUpdated, 'update');\n  const tokenInfos = useTokenInfos();\n  return getTokenInfo(mint, endpoint, tokenInfos);\n}\n\nexport function getTokenInfo(mint, endpoint, tokenInfos) {\n  if (!mint) {\n    return { name: null, symbol: null };\n  }\n\n  let info = customTokenNamesByNetwork?.[endpoint]?.[mint.toBase58()];\n  let match = tokenInfos?.find(\n    (tokenInfo) => tokenInfo.address === mint.toBase58(),\n  );\n\n  if (match) {\n    if (!info) {\n      info = { ...match, logoUri: match.logoURI };\n    }\n    // The user has overridden a name locally.\n    else {\n      info = { ...match, ...info, logoUri: match.logoURI };\n    }\n  }\n  return { ...info };\n}\n\nexport function useUpdateTokenName() {\n  const { endpoint } = useConnectionConfig();\n  return useCallback(\n    function updateTokenName(mint, name, symbol) {\n      if (!name || !symbol) {\n        if (name) {\n          symbol = name;\n        } else if (symbol) {\n          name = symbol;\n        } else {\n          return;\n        }\n      }\n      if (!customTokenNamesByNetwork[endpoint]) {\n        customTokenNamesByNetwork[endpoint] = {};\n      }\n      customTokenNamesByNetwork[endpoint][mint.toBase58()] = { name, symbol };\n      localStorage.setItem(\n        'tokenNames',\n        JSON.stringify(customTokenNamesByNetwork),\n      );\n      nameUpdated.emit('update');\n    },\n    [endpoint],\n  );\n}\n// Returns tokenInfos for the popular tokens list.\nexport function usePopularTokens() {\n  const tokenInfos = useTokenInfos();\n  const { endpoint } = useConnectionConfig();\n  return (!POPULAR_TOKENS[endpoint]\n    ? []\n    : POPULAR_TOKENS[endpoint]\n  ).map((tok) =>\n    getTokenInfo(new PublicKey(tok.mintAddress), endpoint, tokenInfos),\n  );\n}\n"]},"metadata":{},"sourceType":"module"}