{"ast":null,"code":"import*as BufferLayout from'buffer-layout';import{PublicKey}from'@solana/web3.js';export var ACCOUNT_LAYOUT=BufferLayout.struct([BufferLayout.blob(32,'mint'),BufferLayout.blob(32,'owner'),BufferLayout.nu64('amount'),BufferLayout.blob(93)]);export var MINT_LAYOUT=BufferLayout.struct([BufferLayout.blob(44),BufferLayout.u8('decimals'),BufferLayout.blob(37)]);export function parseTokenAccountData(data){var _ACCOUNT_LAYOUT$decod=ACCOUNT_LAYOUT.decode(data),mint=_ACCOUNT_LAYOUT$decod.mint,owner=_ACCOUNT_LAYOUT$decod.owner,amount=_ACCOUNT_LAYOUT$decod.amount;return{mint:new PublicKey(mint),owner:new PublicKey(owner),amount:amount};}export function parseMintData(data){var _MINT_LAYOUT$decode=MINT_LAYOUT.decode(data),decimals=_MINT_LAYOUT$decode.decimals;return{decimals:decimals};}export function getOwnedAccountsFilters(publicKey){return[{memcmp:{offset:ACCOUNT_LAYOUT.offsetOf('owner'),bytes:publicKey.toBase58()}},{dataSize:ACCOUNT_LAYOUT.span}];}","map":{"version":3,"sources":["/Users/jalcantara/Desktop/SOL-dev/tanda-wallet-sol/src/utils/tokens/data.js"],"names":["BufferLayout","PublicKey","ACCOUNT_LAYOUT","struct","blob","nu64","MINT_LAYOUT","u8","parseTokenAccountData","data","decode","mint","owner","amount","parseMintData","decimals","getOwnedAccountsFilters","publicKey","memcmp","offset","offsetOf","bytes","toBase58","dataSize","span"],"mappings":"AAAA,MAAO,GAAKA,CAAAA,YAAZ,KAA8B,eAA9B,CACA,OAASC,SAAT,KAA0B,iBAA1B,CAEA,MAAO,IAAMC,CAAAA,cAAc,CAAGF,YAAY,CAACG,MAAb,CAAoB,CAChDH,YAAY,CAACI,IAAb,CAAkB,EAAlB,CAAsB,MAAtB,CADgD,CAEhDJ,YAAY,CAACI,IAAb,CAAkB,EAAlB,CAAsB,OAAtB,CAFgD,CAGhDJ,YAAY,CAACK,IAAb,CAAkB,QAAlB,CAHgD,CAIhDL,YAAY,CAACI,IAAb,CAAkB,EAAlB,CAJgD,CAApB,CAAvB,CAOP,MAAO,IAAME,CAAAA,WAAW,CAAGN,YAAY,CAACG,MAAb,CAAoB,CAC7CH,YAAY,CAACI,IAAb,CAAkB,EAAlB,CAD6C,CAE7CJ,YAAY,CAACO,EAAb,CAAgB,UAAhB,CAF6C,CAG7CP,YAAY,CAACI,IAAb,CAAkB,EAAlB,CAH6C,CAApB,CAApB,CAMP,MAAO,SAASI,CAAAA,qBAAT,CAA+BC,IAA/B,CAAqC,2BACZP,cAAc,CAACQ,MAAf,CAAsBD,IAAtB,CADY,CACpCE,IADoC,uBACpCA,IADoC,CAC9BC,KAD8B,uBAC9BA,KAD8B,CACvBC,MADuB,uBACvBA,MADuB,CAE1C,MAAO,CACLF,IAAI,CAAE,GAAIV,CAAAA,SAAJ,CAAcU,IAAd,CADD,CAELC,KAAK,CAAE,GAAIX,CAAAA,SAAJ,CAAcW,KAAd,CAFF,CAGLC,MAAM,CAANA,MAHK,CAAP,CAKD,CAED,MAAO,SAASC,CAAAA,aAAT,CAAuBL,IAAvB,CAA6B,yBACfH,WAAW,CAACI,MAAZ,CAAmBD,IAAnB,CADe,CAC5BM,QAD4B,qBAC5BA,QAD4B,CAElC,MAAO,CAAEA,QAAQ,CAARA,QAAF,CAAP,CACD,CAED,MAAO,SAASC,CAAAA,uBAAT,CAAiCC,SAAjC,CAA4C,CACjD,MAAO,CACL,CACEC,MAAM,CAAE,CACNC,MAAM,CAAEjB,cAAc,CAACkB,QAAf,CAAwB,OAAxB,CADF,CAENC,KAAK,CAAEJ,SAAS,CAACK,QAAV,EAFD,CADV,CADK,CAOL,CACEC,QAAQ,CAAErB,cAAc,CAACsB,IAD3B,CAPK,CAAP,CAWD","sourcesContent":["import * as BufferLayout from 'buffer-layout';\nimport { PublicKey } from '@solana/web3.js';\n\nexport const ACCOUNT_LAYOUT = BufferLayout.struct([\n  BufferLayout.blob(32, 'mint'),\n  BufferLayout.blob(32, 'owner'),\n  BufferLayout.nu64('amount'),\n  BufferLayout.blob(93),\n]);\n\nexport const MINT_LAYOUT = BufferLayout.struct([\n  BufferLayout.blob(44),\n  BufferLayout.u8('decimals'),\n  BufferLayout.blob(37),\n]);\n\nexport function parseTokenAccountData(data) {\n  let { mint, owner, amount } = ACCOUNT_LAYOUT.decode(data);\n  return {\n    mint: new PublicKey(mint),\n    owner: new PublicKey(owner),\n    amount,\n  };\n}\n\nexport function parseMintData(data) {\n  let { decimals } = MINT_LAYOUT.decode(data);\n  return { decimals };\n}\n\nexport function getOwnedAccountsFilters(publicKey) {\n  return [\n    {\n      memcmp: {\n        offset: ACCOUNT_LAYOUT.offsetOf('owner'),\n        bytes: publicKey.toBase58(),\n      },\n    },\n    {\n      dataSize: ACCOUNT_LAYOUT.span,\n    },\n  ];\n}\n"]},"metadata":{},"sourceType":"module"}